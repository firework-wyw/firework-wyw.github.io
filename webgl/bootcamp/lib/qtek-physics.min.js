!function(a){"undefined"!=typeof define&&define.amd?define(["exports"],a):a(window.qtek.physics={})}(function(b){var c,d,e;!function(a){function b(a,b){return u.call(a,b)}function f(a,b){var c,d,e,f,g,h,i,j,k,l,m=b&&b.split("/"),n=s.map,o=n&&n["*"]||{};if(a&&"."===a.charAt(0))if(b){for(m=m.slice(0,m.length-1),a=m.concat(a.split("/")),j=0;j<a.length;j+=1)if(l=a[j],"."===l)a.splice(j,1),j-=1;else if(".."===l){if(1===j&&(".."===a[2]||".."===a[0]))break;j>0&&(a.splice(j-1,2),j-=2)}a=a.join("/")}else 0===a.indexOf("./")&&(a=a.substring(2));if((m||o)&&n){for(c=a.split("/"),j=c.length;j>0;j-=1){if(d=c.slice(0,j).join("/"),m)for(k=m.length;k>0;k-=1)if(e=n[m.slice(0,k).join("/")],e&&(e=e[d])){f=e,g=j;break}if(f)break;!h&&o&&o[d]&&(h=o[d],i=j)}!f&&h&&(f=h,g=i),f&&(c.splice(0,g,f),a=c.join("/"))}return a}function g(b,c){return function(){return n.apply(a,v.call(arguments,0).concat([b,c]))}}function h(a){return function(b){return f(b,a)}}function i(a){return function(b){q[a]=b}}function j(c){if(b(r,c)){var d=r[c];delete r[c],t[c]=!0,m.apply(a,d)}if(!b(q,c)&&!b(t,c))throw new Error("No "+c);return q[c]}function k(a){var b,c=a?a.indexOf("!"):-1;return c>-1&&(b=a.substring(0,c),a=a.substring(c+1,a.length)),[b,a]}function l(a){return function(){return s&&s.config&&s.config[a]||{}}}var m,n,o,p,q={},r={},s={},t={},u=Object.prototype.hasOwnProperty,v=[].slice;o=function(a,b){var c,d=k(a),e=d[0];return a=d[1],e&&(e=f(e,b),c=j(e)),e?a=c&&c.normalize?c.normalize(a,h(b)):f(a,b):(a=f(a,b),d=k(a),e=d[0],a=d[1],e&&(c=j(e))),{f:e?e+"!"+a:a,n:a,pr:e,p:c}},p={require:function(a){return g(a)},exports:function(a){var b=q[a];return"undefined"!=typeof b?b:q[a]={}},module:function(a){return{id:a,uri:"",exports:q[a],config:l(a)}}},m=function(c,d,e,f){var h,k,l,m,n,s,u=[];if(f=f||c,"function"==typeof e){for(d=!d.length&&e.length?["require","exports","module"]:d,n=0;n<d.length;n+=1)if(m=o(d[n],f),k=m.f,"require"===k)u[n]=p.require(c);else if("exports"===k)u[n]=p.exports(c),s=!0;else if("module"===k)h=u[n]=p.module(c);else if(b(q,k)||b(r,k)||b(t,k))u[n]=j(k);else{if(!m.p)throw new Error(c+" missing "+k);m.p.load(m.n,g(f,!0),i(k),{}),u[n]=q[k]}l=e.apply(q[c],u),c&&(h&&h.exports!==a&&h.exports!==q[c]?q[c]=h.exports:l===a&&s||(q[c]=l))}else c&&(q[c]=e)},c=d=n=function(b,c,d,e,f){return"string"==typeof b?p[b]?p[b](c):j(o(b,c).f):(b.splice||(s=b,c.splice?(b=c,c=d,d=null):b=a),c=c||function(){},"function"==typeof d&&(d=e,e=f),e?m(a,b,c,d):setTimeout(function(){m(a,b,c,d)},4),n)},n.config=function(a){return s=a,s.deps&&n(s.deps,s.callback),n},e=function(a,c,d){c.splice||(d=c,c=[]),b(q,a)||b(r,a)||(r[a]=[a,c,d])},e.amd={jQuery:!0}}(),e("qtek/physics/Buffer",["require"],function(){var a=function(){this._data=[],this._offset=0};return a.prototype.set=function(a,b){this._data[a]=b},a.prototype.setOffset=function(a){this._offset=a},a.prototype.toFloat32Array=function(){return this._data.length=this._offset,new Float32Array(this._data)},a.prototype.reset=function(){this._data=[],this._offset=0},a.prototype.packScalar=function(a){this._data[this._offset++]=a},a.prototype.packVector2=function(a){this._data[this._offset++]=a._array[0],this._data[this._offset++]=a._array[1]},a.prototype.packVector3=function(a){this._data[this._offset++]=a._array[0],this._data[this._offset++]=a._array[1],this._data[this._offset++]=a._array[2]},a.prototype.packVector4=function(a){this._data[this._offset++]=a._array[0],this._data[this._offset++]=a._array[1],this._data[this._offset++]=a._array[2],this._data[this._offset++]=a._array[3]},a.prototype.packArray=function(a){for(var b=0;b<a.length;b++)this._data[this._offset++]=a[b]},a.prototype.packValues=function(){this.packArray(arguments)},a}),e("qtek/core/mixin/derive",["require"],function(){function a(a,d,e){"object"==typeof d&&(e=d,d=null);var f,g=this;if(!(a instanceof Function)){f=[];for(var h in a)a.hasOwnProperty(h)&&f.push(h)}var i=function(d){if(g.call(this),a instanceof Function?b(this,a.call(this)):c(this,a,f),d&&b(this,d),this.constructor===i)for(var e=i.__initializer__,h=0;h<e.length;h++)e[h].call(this)};i.__super__=g,i.__initializer__=g.__initializer__?g.__initializer__.slice():[],d&&i.__initializer__.push(d);var j=function(){};return j.prototype=g.prototype,i.prototype=new j,i.prototype.constructor=i,b(i.prototype,e),i.derive=g.derive,i}function b(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])}function c(a,b,c){for(var d=0;d<c.length;d++){var e=c[d];a[e]=b[e]}}return{derive:a}}),e("qtek/core/mixin/notifier",[],function(){function a(a,b){this.action=a,this.context=b}return{trigger:function(a){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(a)){var b=this.__handlers__[a],c=b.length,d=-1,e=arguments;switch(e.length){case 1:for(;++d<c;)b[d].action.call(b[d].context);return;case 2:for(;++d<c;)b[d].action.call(b[d].context,e[1]);return;case 3:for(;++d<c;)b[d].action.call(b[d].context,e[1],e[2]);return;case 4:for(;++d<c;)b[d].action.call(b[d].context,e[1],e[2],e[3]);return;case 5:for(;++d<c;)b[d].action.call(b[d].context,e[1],e[2],e[3],e[4]);return;default:for(;++d<c;)b[d].action.apply(b[d].context,Array.prototype.slice.call(e,1));return}}},on:function(b,c,d){if(b&&c){var e=this.__handlers__||(this.__handlers__={});if(e[b]){if(this.has(b,c))return}else e[b]=[];var f=new a(c,d||this);return e[b].push(f),f}},once:function(a,b,c){function d(){e.off(a,d),b.apply(this,arguments)}if(a&&b){var e=this;return this.on(a,d,c)}},before:function(a,b,c){return a&&b?(a="before"+a,this.on(a,b,c)):void 0},after:function(a,b,c){return a&&b?(a="after"+a,this.on(a,b,c)):void 0},success:function(a,b){return this.once("success",a,b)},error:function(){return this.once("error",action,context)},off:function(a,b){var c=this.__handlers__||(this.__handlers__={});if(!b)return void(c[a]=[]);if(c[a]){for(var d=c[a],e=[],f=0;f<d.length;f++)b&&d[f].action!==b&&e.push(d[f]);c[a]=e}},has:function(a,b){var c=this.__handlers__;if(!c||!c[a])return!1;for(var d=c[a],e=0;e<d.length;e++)if(d[e].action===b)return!0}}}),e("qtek/core/util",["require"],function(){var a=0,b={genGUID:function(){return++a},relative2absolute:function(a,b){if(!b||a.match(/^\//))return a;for(var c=a.split("/"),d=b.split("/"),e=c[0];"."===e||".."===e;)".."===e&&d.pop(),c.shift(),e=c[0];return d.join("/")+"/"+c.join("/")},extend:function(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a},defaults:function(a,b){if(b)for(var c in b)void 0===a[c]&&(a[c]=b[c])},extendWithPropList:function(a,b,c){if(b)for(var d=0;d<c.length;d++){var e=c[d];a[e]=b[e]}return a},defaultsWithPropList:function(a,b,c){if(b)for(var d=0;d<c.length;d++){var e=c[d];void 0===a[e]&&(a[e]=b[e])}return a},each:function(a,b,c){if(a&&b)if(a.forEach)a.forEach(b,c);else if(a.length===+a.length)for(var d=0,e=a.length;e>d;d++)b.call(c,a[d],d,a);else for(var f in a)a.hasOwnProperty(f)&&b.call(c,a[f],f,a)},isObject:function(a){return a===Object(a)},isArray:function(a){return a instanceof Array},isArrayLike:function(a){return a?a.length===+a.length:!1},clone:function(a){if(b.isObject(a)){if(b.isArray(a))return a.slice();if(b.isArrayLike(a)){for(var c=new a.constructor(a.length),d=0;d<a.length;d++)c[d]=a[d];return c}return b.extend({},a)}return a}};return b}),e("qtek/core/Base",["require","./mixin/derive","./mixin/notifier","./util"],function(a){var b=a("./mixin/derive"),c=a("./mixin/notifier"),d=a("./util"),e=function(){this.__GUID__=d.genGUID()};return d.extend(e,b),d.extend(e.prototype,c),e}),e("qtek/physics/Collider",["require","qtek/core/Base"],function(a){var b=a("qtek/core/Base"),c=b.derive({name:"",collisionObject:null,sceneNode:null,physicsMaterial:null,isKinematic:!1,isStatic:!1,isGhostObject:!1,group:1,collisionMask:1,_dirty:!0,_collisionHasCallback:!1},{on:function(a,c,d){b.prototype.on.call(this,a,c,d),this._collisionHasCallback=!0,this._dirty=!0},off:function(a,c){b.prototype.off.call(this,a,c)},hasCollisionCallback:function(){return this._collisionHasCallback}});return c.events=["collision"],c}),function(a){var b={};"undefined"==typeof exports?"function"==typeof e&&"object"==typeof e.amd&&e.amd?(b.exports={},e("glmatrix",[],function(){return b.exports})):b.exports="undefined"!=typeof window?window:a:b.exports=exports,function(a){if(!b)var b=1e-6;if(!c)var c="undefined"!=typeof Float32Array?Float32Array:Array;if(!d)var d=Math.random;var e={};e.setMatrixArrayType=function(a){c=a},"undefined"!=typeof a&&(a.glMatrix=e);var f=Math.PI/180;e.toRadian=function(a){return a*f};var g={};g.create=function(){var a=new c(2);return a[0]=0,a[1]=0,a},g.clone=function(a){var b=new c(2);return b[0]=a[0],b[1]=a[1],b},g.fromValues=function(a,b){var d=new c(2);return d[0]=a,d[1]=b,d},g.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a},g.set=function(a,b,c){return a[0]=b,a[1]=c,a},g.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a},g.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a},g.sub=g.subtract,g.multiply=function(a,b,c){return a[0]=b[0]*c[0],a[1]=b[1]*c[1],a},g.mul=g.multiply,g.divide=function(a,b,c){return a[0]=b[0]/c[0],a[1]=b[1]/c[1],a},g.div=g.divide,g.min=function(a,b,c){return a[0]=Math.min(b[0],c[0]),a[1]=Math.min(b[1],c[1]),a},g.max=function(a,b,c){return a[0]=Math.max(b[0],c[0]),a[1]=Math.max(b[1],c[1]),a},g.scale=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a},g.scaleAndAdd=function(a,b,c,d){return a[0]=b[0]+c[0]*d,a[1]=b[1]+c[1]*d,a},g.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1];return Math.sqrt(c*c+d*d)},g.dist=g.distance,g.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1];return c*c+d*d},g.sqrDist=g.squaredDistance,g.length=function(a){var b=a[0],c=a[1];return Math.sqrt(b*b+c*c)},g.len=g.length,g.squaredLength=function(a){var b=a[0],c=a[1];return b*b+c*c},g.sqrLen=g.squaredLength,g.negate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a},g.normalize=function(a,b){var c=b[0],d=b[1],e=c*c+d*d;return e>0&&(e=1/Math.sqrt(e),a[0]=b[0]*e,a[1]=b[1]*e),a},g.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]},g.cross=function(a,b,c){var d=b[0]*c[1]-b[1]*c[0];return a[0]=a[1]=0,a[2]=d,a},g.lerp=function(a,b,c,d){var e=b[0],f=b[1];return a[0]=e+d*(c[0]-e),a[1]=f+d*(c[1]-f),a},g.random=function(a,b){b=b||1;var c=2*d()*Math.PI;return a[0]=Math.cos(c)*b,a[1]=Math.sin(c)*b,a},g.transformMat2=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[2]*e,a[1]=c[1]*d+c[3]*e,a},g.transformMat2d=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[2]*e+c[4],a[1]=c[1]*d+c[3]*e+c[5],a},g.transformMat3=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[3]*e+c[6],a[1]=c[1]*d+c[4]*e+c[7],a},g.transformMat4=function(a,b,c){var d=b[0],e=b[1];return a[0]=c[0]*d+c[4]*e+c[12],a[1]=c[1]*d+c[5]*e+c[13],a},g.forEach=function(){var a=g.create();return function(b,c,d,e,f,g){var h,i;for(c||(c=2),d||(d=0),i=e?Math.min(e*c+d,b.length):b.length,h=d;i>h;h+=c)a[0]=b[h],a[1]=b[h+1],f(a,a,g),b[h]=a[0],b[h+1]=a[1];return b}}(),g.str=function(a){return"vec2("+a[0]+", "+a[1]+")"},"undefined"!=typeof a&&(a.vec2=g);var h={};h.create=function(){var a=new c(3);return a[0]=0,a[1]=0,a[2]=0,a},h.clone=function(a){var b=new c(3);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b},h.fromValues=function(a,b,d){var e=new c(3);return e[0]=a,e[1]=b,e[2]=d,e},h.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a},h.set=function(a,b,c,d){return a[0]=b,a[1]=c,a[2]=d,a},h.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a[2]=b[2]+c[2],a},h.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a[2]=b[2]-c[2],a},h.sub=h.subtract,h.multiply=function(a,b,c){return a[0]=b[0]*c[0],a[1]=b[1]*c[1],a[2]=b[2]*c[2],a},h.mul=h.multiply,h.divide=function(a,b,c){return a[0]=b[0]/c[0],a[1]=b[1]/c[1],a[2]=b[2]/c[2],a},h.div=h.divide,h.min=function(a,b,c){return a[0]=Math.min(b[0],c[0]),a[1]=Math.min(b[1],c[1]),a[2]=Math.min(b[2],c[2]),a},h.max=function(a,b,c){return a[0]=Math.max(b[0],c[0]),a[1]=Math.max(b[1],c[1]),a[2]=Math.max(b[2],c[2]),a},h.scale=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*c,a},h.scaleAndAdd=function(a,b,c,d){return a[0]=b[0]+c[0]*d,a[1]=b[1]+c[1]*d,a[2]=b[2]+c[2]*d,a},h.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2];return Math.sqrt(c*c+d*d+e*e)},h.dist=h.distance,h.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2];return c*c+d*d+e*e},h.sqrDist=h.squaredDistance,h.length=function(a){var b=a[0],c=a[1],d=a[2];return Math.sqrt(b*b+c*c+d*d)},h.len=h.length,h.squaredLength=function(a){var b=a[0],c=a[1],d=a[2];return b*b+c*c+d*d},h.sqrLen=h.squaredLength,h.negate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a},h.normalize=function(a,b){var c=b[0],d=b[1],e=b[2],f=c*c+d*d+e*e;return f>0&&(f=1/Math.sqrt(f),a[0]=b[0]*f,a[1]=b[1]*f,a[2]=b[2]*f),a},h.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]},h.cross=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[0],h=c[1],i=c[2];return a[0]=e*i-f*h,a[1]=f*g-d*i,a[2]=d*h-e*g,a},h.lerp=function(a,b,c,d){var e=b[0],f=b[1],g=b[2];return a[0]=e+d*(c[0]-e),a[1]=f+d*(c[1]-f),a[2]=g+d*(c[2]-g),a},h.random=function(a,b){b=b||1;var c=2*d()*Math.PI,e=2*d()-1,f=Math.sqrt(1-e*e)*b;return a[0]=Math.cos(c)*f,a[1]=Math.sin(c)*f,a[2]=e*b,a},h.transformMat4=function(a,b,c){var d=b[0],e=b[1],f=b[2];return a[0]=c[0]*d+c[4]*e+c[8]*f+c[12],a[1]=c[1]*d+c[5]*e+c[9]*f+c[13],a[2]=c[2]*d+c[6]*e+c[10]*f+c[14],a},h.transformMat3=function(a,b,c){var d=b[0],e=b[1],f=b[2];return a[0]=d*c[0]+e*c[3]+f*c[6],a[1]=d*c[1]+e*c[4]+f*c[7],a[2]=d*c[2]+e*c[5]+f*c[8],a},h.transformQuat=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[0],h=c[1],i=c[2],j=c[3],k=j*d+h*f-i*e,l=j*e+i*d-g*f,m=j*f+g*e-h*d,n=-g*d-h*e-i*f;return a[0]=k*j+n*-g+l*-i-m*-h,a[1]=l*j+n*-h+m*-g-k*-i,a[2]=m*j+n*-i+k*-h-l*-g,a},h.forEach=function(){var a=h.create();return function(b,c,d,e,f,g){var h,i;for(c||(c=3),d||(d=0),i=e?Math.min(e*c+d,b.length):b.length,h=d;i>h;h+=c)a[0]=b[h],a[1]=b[h+1],a[2]=b[h+2],f(a,a,g),b[h]=a[0],b[h+1]=a[1],b[h+2]=a[2];return b}}(),h.str=function(a){return"vec3("+a[0]+", "+a[1]+", "+a[2]+")"},"undefined"!=typeof a&&(a.vec3=h);var i={};i.create=function(){var a=new c(4);return a[0]=0,a[1]=0,a[2]=0,a[3]=0,a},i.clone=function(a){var b=new c(4);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b},i.fromValues=function(a,b,d,e){var f=new c(4);return f[0]=a,f[1]=b,f[2]=d,f[3]=e,f},i.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a},i.set=function(a,b,c,d,e){return a[0]=b,a[1]=c,a[2]=d,a[3]=e,a},i.add=function(a,b,c){return a[0]=b[0]+c[0],a[1]=b[1]+c[1],a[2]=b[2]+c[2],a[3]=b[3]+c[3],a},i.subtract=function(a,b,c){return a[0]=b[0]-c[0],a[1]=b[1]-c[1],a[2]=b[2]-c[2],a[3]=b[3]-c[3],a},i.sub=i.subtract,i.multiply=function(a,b,c){return a[0]=b[0]*c[0],a[1]=b[1]*c[1],a[2]=b[2]*c[2],a[3]=b[3]*c[3],a},i.mul=i.multiply,i.divide=function(a,b,c){return a[0]=b[0]/c[0],a[1]=b[1]/c[1],a[2]=b[2]/c[2],a[3]=b[3]/c[3],a},i.div=i.divide,i.min=function(a,b,c){return a[0]=Math.min(b[0],c[0]),a[1]=Math.min(b[1],c[1]),a[2]=Math.min(b[2],c[2]),a[3]=Math.min(b[3],c[3]),a},i.max=function(a,b,c){return a[0]=Math.max(b[0],c[0]),a[1]=Math.max(b[1],c[1]),a[2]=Math.max(b[2],c[2]),a[3]=Math.max(b[3],c[3]),a},i.scale=function(a,b,c){return a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*c,a[3]=b[3]*c,a},i.scaleAndAdd=function(a,b,c,d){return a[0]=b[0]+c[0]*d,a[1]=b[1]+c[1]*d,a[2]=b[2]+c[2]*d,a[3]=b[3]+c[3]*d,a},i.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2],f=b[3]-a[3];return Math.sqrt(c*c+d*d+e*e+f*f)},i.dist=i.distance,i.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1],e=b[2]-a[2],f=b[3]-a[3];return c*c+d*d+e*e+f*f},i.sqrDist=i.squaredDistance,i.length=function(a){var b=a[0],c=a[1],d=a[2],e=a[3];return Math.sqrt(b*b+c*c+d*d+e*e)},i.len=i.length,i.squaredLength=function(a){var b=a[0],c=a[1],d=a[2],e=a[3];return b*b+c*c+d*d+e*e},i.sqrLen=i.squaredLength,i.negate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a[3]=-b[3],a},i.normalize=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c*c+d*d+e*e+f*f;return g>0&&(g=1/Math.sqrt(g),a[0]=b[0]*g,a[1]=b[1]*g,a[2]=b[2]*g,a[3]=b[3]*g),a},i.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]},i.lerp=function(a,b,c,d){var e=b[0],f=b[1],g=b[2],h=b[3];return a[0]=e+d*(c[0]-e),a[1]=f+d*(c[1]-f),a[2]=g+d*(c[2]-g),a[3]=h+d*(c[3]-h),a},i.random=function(a,b){return b=b||1,a[0]=d(),a[1]=d(),a[2]=d(),a[3]=d(),i.normalize(a,a),i.scale(a,a,b),a},i.transformMat4=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3];return a[0]=c[0]*d+c[4]*e+c[8]*f+c[12]*g,a[1]=c[1]*d+c[5]*e+c[9]*f+c[13]*g,a[2]=c[2]*d+c[6]*e+c[10]*f+c[14]*g,a[3]=c[3]*d+c[7]*e+c[11]*f+c[15]*g,a},i.transformQuat=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=c[0],h=c[1],i=c[2],j=c[3],k=j*d+h*f-i*e,l=j*e+i*d-g*f,m=j*f+g*e-h*d,n=-g*d-h*e-i*f;return a[0]=k*j+n*-g+l*-i-m*-h,a[1]=l*j+n*-h+m*-g-k*-i,a[2]=m*j+n*-i+k*-h-l*-g,a},i.forEach=function(){var a=i.create();return function(b,c,d,e,f,g){var h,i;for(c||(c=4),d||(d=0),i=e?Math.min(e*c+d,b.length):b.length,h=d;i>h;h+=c)a[0]=b[h],a[1]=b[h+1],a[2]=b[h+2],a[3]=b[h+3],f(a,a,g),b[h]=a[0],b[h+1]=a[1],b[h+2]=a[2],b[h+3]=a[3];return b}}(),i.str=function(a){return"vec4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"},"undefined"!=typeof a&&(a.vec4=i);var j={};j.create=function(){var a=new c(4);return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a},j.clone=function(a){var b=new c(4);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b},j.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a},j.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a},j.transpose=function(a,b){if(a===b){var c=b[1];a[1]=b[2],a[2]=c}else a[0]=b[0],a[1]=b[2],a[2]=b[1],a[3]=b[3];return a},j.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c*f-e*d;return g?(g=1/g,a[0]=f*g,a[1]=-d*g,a[2]=-e*g,a[3]=c*g,a):null},j.adjoint=function(a,b){var c=b[0];return a[0]=b[3],a[1]=-b[1],a[2]=-b[2],a[3]=c,a},j.determinant=function(a){return a[0]*a[3]-a[2]*a[1]},j.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=c[0],i=c[1],j=c[2],k=c[3];return a[0]=d*h+e*j,a[1]=d*i+e*k,a[2]=f*h+g*j,a[3]=f*i+g*k,a},j.mul=j.multiply,j.rotate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i+e*h,a[1]=d*-h+e*i,a[2]=f*i+g*h,a[3]=f*-h+g*i,a},j.scale=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=c[0],i=c[1];return a[0]=d*h,a[1]=e*i,a[2]=f*h,a[3]=g*i,a},j.str=function(a){return"mat2("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"},"undefined"!=typeof a&&(a.mat2=j);var k={};k.create=function(){var a=new c(6);return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a[4]=0,a[5]=0,a},k.clone=function(a){var b=new c(6);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b},k.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a},k.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=1,a[4]=0,a[5]=0,a},k.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=c*f-d*e;return i?(i=1/i,a[0]=f*i,a[1]=-d*i,a[2]=-e*i,a[3]=c*i,a[4]=(e*h-f*g)*i,a[5]=(d*g-c*h)*i,a):null},k.determinant=function(a){return a[0]*a[3]-a[1]*a[2]},k.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=c[0],k=c[1],l=c[2],m=c[3],n=c[4],o=c[5];return a[0]=d*j+e*l,a[1]=d*k+e*m,a[2]=f*j+g*l,a[3]=f*k+g*m,a[4]=j*h+l*i+n,a[5]=k*h+m*i+o,a},k.mul=k.multiply,k.rotate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=Math.sin(c),k=Math.cos(c);return a[0]=d*k+e*j,a[1]=-d*j+e*k,a[2]=f*k+g*j,a[3]=-f*j+k*g,a[4]=k*h+j*i,a[5]=k*i-j*h,a},k.scale=function(a,b,c){var d=c[0],e=c[1];return a[0]=b[0]*d,a[1]=b[1]*e,a[2]=b[2]*d,a[3]=b[3]*e,a[4]=b[4]*d,a[5]=b[5]*e,a},k.translate=function(a,b,c){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4]+c[0],a[5]=b[5]+c[1],a},k.str=function(a){return"mat2d("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+")"},"undefined"!=typeof a&&(a.mat2d=k);var l={};l.create=function(){var a=new c(9);return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=1,a[5]=0,a[6]=0,a[7]=0,a[8]=1,a},l.fromMat4=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[4],a[4]=b[5],a[5]=b[6],a[6]=b[8],a[7]=b[9],a[8]=b[10],a},l.clone=function(a){var b=new c(9);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b},l.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a},l.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=1,a[5]=0,a[6]=0,a[7]=0,a[8]=1,a},l.transpose=function(a,b){if(a===b){var c=b[1],d=b[2],e=b[5];a[1]=b[3],a[2]=b[6],a[3]=c,a[5]=b[7],a[6]=d,a[7]=e}else a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8];return a},l.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=k*g-h*j,m=-k*f+h*i,n=j*f-g*i,o=c*l+d*m+e*n;return o?(o=1/o,a[0]=l*o,a[1]=(-k*d+e*j)*o,a[2]=(h*d-e*g)*o,a[3]=m*o,a[4]=(k*c-e*i)*o,a[5]=(-h*c+e*f)*o,a[6]=n*o,a[7]=(-j*c+d*i)*o,a[8]=(g*c-d*f)*o,a):null},l.adjoint=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8];return a[0]=g*k-h*j,a[1]=e*j-d*k,a[2]=d*h-e*g,a[3]=h*i-f*k,a[4]=c*k-e*i,a[5]=e*f-c*h,a[6]=f*j-g*i,a[7]=d*i-c*j,a[8]=c*g-d*f,a},l.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*(j*f-g*i)+c*(-j*e+g*h)+d*(i*e-f*h)},l.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=c[0],n=c[1],o=c[2],p=c[3],q=c[4],r=c[5],s=c[6],t=c[7],u=c[8];return a[0]=m*d+n*g+o*j,a[1]=m*e+n*h+o*k,a[2]=m*f+n*i+o*l,a[3]=p*d+q*g+r*j,a[4]=p*e+q*h+r*k,a[5]=p*f+q*i+r*l,a[6]=s*d+t*g+u*j,a[7]=s*e+t*h+u*k,a[8]=s*f+t*i+u*l,a},l.mul=l.multiply,l.translate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=c[0],n=c[1];return a[0]=d,a[1]=e,a[2]=f,a[3]=g,a[4]=h,a[5]=i,a[6]=m*d+n*g+j,a[7]=m*e+n*h+k,a[8]=m*f+n*i+l,a},l.rotate=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=Math.sin(c),n=Math.cos(c);return a[0]=n*d+m*g,a[1]=n*e+m*h,a[2]=n*f+m*i,a[3]=n*g-m*d,a[4]=n*h-m*e,a[5]=n*i-m*f,a[6]=j,a[7]=k,a[8]=l,a},l.scale=function(a,b,c){var d=c[0],e=c[1];return a[0]=d*b[0],a[1]=d*b[1],a[2]=d*b[2],a[3]=e*b[3],a[4]=e*b[4],a[5]=e*b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a},l.fromMat2d=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=0,a[3]=b[2],a[4]=b[3],a[5]=0,a[6]=b[4],a[7]=b[5],a[8]=1,a},l.fromQuat=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c+c,h=d+d,i=e+e,j=c*g,k=d*g,l=d*h,m=e*g,n=e*h,o=e*i,p=f*g,q=f*h,r=f*i;return a[0]=1-l-o,a[3]=k-r,a[6]=m+q,a[1]=k+r,a[4]=1-j-o,a[7]=n-p,a[2]=m-q,a[5]=n+p,a[8]=1-j-l,a},l.normalFromMat4=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=b[9],m=b[10],n=b[11],o=b[12],p=b[13],q=b[14],r=b[15],s=c*h-d*g,t=c*i-e*g,u=c*j-f*g,v=d*i-e*h,w=d*j-f*h,x=e*j-f*i,y=k*p-l*o,z=k*q-m*o,A=k*r-n*o,B=l*q-m*p,C=l*r-n*p,D=m*r-n*q,E=s*D-t*C+u*B+v*A-w*z+x*y;return E?(E=1/E,a[0]=(h*D-i*C+j*B)*E,a[1]=(i*A-g*D-j*z)*E,a[2]=(g*C-h*A+j*y)*E,a[3]=(e*C-d*D-f*B)*E,a[4]=(c*D-e*A+f*z)*E,a[5]=(d*A-c*C-f*y)*E,a[6]=(p*x-q*w+r*v)*E,a[7]=(q*u-o*x-r*t)*E,a[8]=(o*w-p*u+r*s)*E,a):null},l.str=function(a){return"mat3("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+")"},"undefined"!=typeof a&&(a.mat3=l);var m={};m.create=function(){var a=new c(16);return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=1,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=1,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,a},m.clone=function(a){var b=new c(16);return b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15],b},m.copy=function(a,b){return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},m.identity=function(a){return a[0]=1,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=1,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=1,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,a},m.transpose=function(a,b){if(a===b){var c=b[1],d=b[2],e=b[3],f=b[6],g=b[7],h=b[11];a[1]=b[4],a[2]=b[8],a[3]=b[12],a[4]=c,a[6]=b[9],a[7]=b[13],a[8]=d,a[9]=f,a[11]=b[14],a[12]=e,a[13]=g,a[14]=h}else a[0]=b[0],a[1]=b[4],a[2]=b[8],a[3]=b[12],a[4]=b[1],a[5]=b[5],a[6]=b[9],a[7]=b[13],a[8]=b[2],a[9]=b[6],a[10]=b[10],a[11]=b[14],a[12]=b[3],a[13]=b[7],a[14]=b[11],a[15]=b[15];return a},m.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=b[9],m=b[10],n=b[11],o=b[12],p=b[13],q=b[14],r=b[15],s=c*h-d*g,t=c*i-e*g,u=c*j-f*g,v=d*i-e*h,w=d*j-f*h,x=e*j-f*i,y=k*p-l*o,z=k*q-m*o,A=k*r-n*o,B=l*q-m*p,C=l*r-n*p,D=m*r-n*q,E=s*D-t*C+u*B+v*A-w*z+x*y;return E?(E=1/E,a[0]=(h*D-i*C+j*B)*E,a[1]=(e*C-d*D-f*B)*E,a[2]=(p*x-q*w+r*v)*E,a[3]=(m*w-l*x-n*v)*E,a[4]=(i*A-g*D-j*z)*E,a[5]=(c*D-e*A+f*z)*E,a[6]=(q*u-o*x-r*t)*E,a[7]=(k*x-m*u+n*t)*E,a[8]=(g*C-h*A+j*y)*E,a[9]=(d*A-c*C-f*y)*E,a[10]=(o*w-p*u+r*s)*E,a[11]=(l*u-k*w-n*s)*E,a[12]=(h*z-g*B-i*y)*E,a[13]=(c*B-d*z+e*y)*E,a[14]=(p*t-o*v-q*s)*E,a[15]=(k*v-l*t+m*s)*E,a):null},m.adjoint=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=b[8],l=b[9],m=b[10],n=b[11],o=b[12],p=b[13],q=b[14],r=b[15];return a[0]=h*(m*r-n*q)-l*(i*r-j*q)+p*(i*n-j*m),a[1]=-(d*(m*r-n*q)-l*(e*r-f*q)+p*(e*n-f*m)),a[2]=d*(i*r-j*q)-h*(e*r-f*q)+p*(e*j-f*i),a[3]=-(d*(i*n-j*m)-h*(e*n-f*m)+l*(e*j-f*i)),a[4]=-(g*(m*r-n*q)-k*(i*r-j*q)+o*(i*n-j*m)),a[5]=c*(m*r-n*q)-k*(e*r-f*q)+o*(e*n-f*m),a[6]=-(c*(i*r-j*q)-g*(e*r-f*q)+o*(e*j-f*i)),a[7]=c*(i*n-j*m)-g*(e*n-f*m)+k*(e*j-f*i),a[8]=g*(l*r-n*p)-k*(h*r-j*p)+o*(h*n-j*l),a[9]=-(c*(l*r-n*p)-k*(d*r-f*p)+o*(d*n-f*l)),a[10]=c*(h*r-j*p)-g*(d*r-f*p)+o*(d*j-f*h),a[11]=-(c*(h*n-j*l)-g*(d*n-f*l)+k*(d*j-f*h)),a[12]=-(g*(l*q-m*p)-k*(h*q-i*p)+o*(h*m-i*l)),a[13]=c*(l*q-m*p)-k*(d*q-e*p)+o*(d*m-e*l),a[14]=-(c*(h*q-i*p)-g*(d*q-e*p)+o*(d*i-e*h)),a[15]=c*(h*m-i*l)-g*(d*m-e*l)+k*(d*i-e*h),a},m.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],r=b*g-c*f,s=b*h-d*f,t=b*i-e*f,u=c*h-d*g,v=c*i-e*g,w=d*i-e*h,x=j*o-k*n,y=j*p-l*n,z=j*q-m*n,A=k*p-l*o,B=k*q-m*o,C=l*q-m*p;return r*C-s*B+t*A+u*z-v*y+w*x},m.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=b[9],n=b[10],o=b[11],p=b[12],q=b[13],r=b[14],s=b[15],t=c[0],u=c[1],v=c[2],w=c[3];return a[0]=t*d+u*h+v*l+w*p,a[1]=t*e+u*i+v*m+w*q,a[2]=t*f+u*j+v*n+w*r,a[3]=t*g+u*k+v*o+w*s,t=c[4],u=c[5],v=c[6],w=c[7],a[4]=t*d+u*h+v*l+w*p,a[5]=t*e+u*i+v*m+w*q,a[6]=t*f+u*j+v*n+w*r,a[7]=t*g+u*k+v*o+w*s,t=c[8],u=c[9],v=c[10],w=c[11],a[8]=t*d+u*h+v*l+w*p,a[9]=t*e+u*i+v*m+w*q,a[10]=t*f+u*j+v*n+w*r,a[11]=t*g+u*k+v*o+w*s,t=c[12],u=c[13],v=c[14],w=c[15],a[12]=t*d+u*h+v*l+w*p,a[13]=t*e+u*i+v*m+w*q,a[14]=t*f+u*j+v*n+w*r,a[15]=t*g+u*k+v*o+w*s,a},m.mul=m.multiply,m.translate=function(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t=c[0],u=c[1],v=c[2];return d=b[0],e=b[1],f=b[2],g=b[3],h=b[4],i=b[5],j=b[6],k=b[7],l=b[8],m=b[9],n=b[10],o=b[11],p=b[12],q=b[13],r=b[14],s=b[15],a[0]=d+g*t,a[1]=e+g*u,a[2]=f+g*v,a[3]=g,a[4]=h+k*t,a[5]=i+k*u,a[6]=j+k*v,a[7]=k,a[8]=l+o*t,a[9]=m+o*u,a[10]=n+o*v,a[11]=o,a[12]=p+s*t,a[13]=q+s*u,a[14]=r+s*v,a[15]=s,a},m.scale=function(a,b,c){var d=c[0],e=c[1],f=c[2];return a[0]=b[0]*d,a[1]=b[1]*d,a[2]=b[2]*d,a[3]=b[3]*d,a[4]=b[4]*e,a[5]=b[5]*e,a[6]=b[6]*e,a[7]=b[7]*e,a[8]=b[8]*f,a[9]=b[9]*f,a[10]=b[10]*f,a[11]=b[11]*f,a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},m.rotate=function(a,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=e[0],E=e[1],F=e[2],G=Math.sqrt(D*D+E*E+F*F);return Math.abs(G)<b?null:(G=1/G,D*=G,E*=G,F*=G,f=Math.sin(d),g=Math.cos(d),h=1-g,i=c[0],j=c[1],k=c[2],l=c[3],m=c[4],n=c[5],o=c[6],p=c[7],q=c[8],r=c[9],s=c[10],t=c[11],u=D*D*h+g,v=E*D*h+F*f,w=F*D*h-E*f,x=D*E*h-F*f,y=E*E*h+g,z=F*E*h+D*f,A=D*F*h+E*f,B=E*F*h-D*f,C=F*F*h+g,a[0]=i*u+m*v+q*w,a[1]=j*u+n*v+r*w,a[2]=k*u+o*v+s*w,a[3]=l*u+p*v+t*w,a[4]=i*x+m*y+q*z,a[5]=j*x+n*y+r*z,a[6]=k*x+o*y+s*z,a[7]=l*x+p*y+t*z,a[8]=i*A+m*B+q*C,a[9]=j*A+n*B+r*C,a[10]=k*A+o*B+s*C,a[11]=l*A+p*B+t*C,c!==a&&(a[12]=c[12],a[13]=c[13],a[14]=c[14],a[15]=c[15]),a)},m.rotateX=function(a,b,c){var d=Math.sin(c),e=Math.cos(c),f=b[4],g=b[5],h=b[6],i=b[7],j=b[8],k=b[9],l=b[10],m=b[11];return b!==a&&(a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15]),a[4]=f*e+j*d,a[5]=g*e+k*d,a[6]=h*e+l*d,a[7]=i*e+m*d,a[8]=j*e-f*d,a[9]=k*e-g*d,a[10]=l*e-h*d,a[11]=m*e-i*d,a},m.rotateY=function(a,b,c){var d=Math.sin(c),e=Math.cos(c),f=b[0],g=b[1],h=b[2],i=b[3],j=b[8],k=b[9],l=b[10],m=b[11];return b!==a&&(a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15]),a[0]=f*e-j*d,a[1]=g*e-k*d,a[2]=h*e-l*d,a[3]=i*e-m*d,a[8]=f*d+j*e,a[9]=g*d+k*e,a[10]=h*d+l*e,a[11]=i*d+m*e,a},m.rotateZ=function(a,b,c){var d=Math.sin(c),e=Math.cos(c),f=b[0],g=b[1],h=b[2],i=b[3],j=b[4],k=b[5],l=b[6],m=b[7];return b!==a&&(a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15]),a[0]=f*e+j*d,a[1]=g*e+k*d,a[2]=h*e+l*d,a[3]=i*e+m*d,a[4]=j*e-f*d,a[5]=k*e-g*d,a[6]=l*e-h*d,a[7]=m*e-i*d,a},m.fromRotationTranslation=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=d+d,i=e+e,j=f+f,k=d*h,l=d*i,m=d*j,n=e*i,o=e*j,p=f*j,q=g*h,r=g*i,s=g*j;return a[0]=1-(n+p),a[1]=l+s,a[2]=m-r,a[3]=0,a[4]=l-s,a[5]=1-(k+p),a[6]=o+q,a[7]=0,a[8]=m+r,a[9]=o-q,a[10]=1-(k+n),a[11]=0,a[12]=c[0],a[13]=c[1],a[14]=c[2],a[15]=1,a},m.fromQuat=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c+c,h=d+d,i=e+e,j=c*g,k=d*g,l=d*h,m=e*g,n=e*h,o=e*i,p=f*g,q=f*h,r=f*i;return a[0]=1-l-o,a[1]=k+r,a[2]=m-q,a[3]=0,a[4]=k-r,a[5]=1-j-o,a[6]=n+p,a[7]=0,a[8]=m+q,a[9]=n-p,a[10]=1-j-l,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,a},m.frustum=function(a,b,c,d,e,f,g){var h=1/(c-b),i=1/(e-d),j=1/(f-g);return a[0]=2*f*h,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2*f*i,a[6]=0,a[7]=0,a[8]=(c+b)*h,a[9]=(e+d)*i,a[10]=(g+f)*j,a[11]=-1,a[12]=0,a[13]=0,a[14]=g*f*2*j,a[15]=0,a},m.perspective=function(a,b,c,d,e){var f=1/Math.tan(b/2),g=1/(d-e);return a[0]=f/c,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=f,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=(e+d)*g,a[11]=-1,a[12]=0,a[13]=0,a[14]=2*e*d*g,a[15]=0,a},m.ortho=function(a,b,c,d,e,f,g){var h=1/(b-c),i=1/(d-e),j=1/(f-g);return a[0]=-2*h,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=-2*i,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=2*j,a[11]=0,a[12]=(b+c)*h,a[13]=(e+d)*i,a[14]=(g+f)*j,a[15]=1,a},m.lookAt=function(a,c,d,e){var f,g,h,i,j,k,l,n,o,p,q=c[0],r=c[1],s=c[2],t=e[0],u=e[1],v=e[2],w=d[0],x=d[1],y=d[2];return Math.abs(q-w)<b&&Math.abs(r-x)<b&&Math.abs(s-y)<b?m.identity(a):(l=q-w,n=r-x,o=s-y,p=1/Math.sqrt(l*l+n*n+o*o),l*=p,n*=p,o*=p,f=u*o-v*n,g=v*l-t*o,h=t*n-u*l,p=Math.sqrt(f*f+g*g+h*h),p?(p=1/p,f*=p,g*=p,h*=p):(f=0,g=0,h=0),i=n*h-o*g,j=o*f-l*h,k=l*g-n*f,p=Math.sqrt(i*i+j*j+k*k),p?(p=1/p,i*=p,j*=p,k*=p):(i=0,j=0,k=0),a[0]=f,a[1]=i,a[2]=l,a[3]=0,a[4]=g,a[5]=j,a[6]=n,a[7]=0,a[8]=h,a[9]=k,a[10]=o,a[11]=0,a[12]=-(f*q+g*r+h*s),a[13]=-(i*q+j*r+k*s),a[14]=-(l*q+n*r+o*s),a[15]=1,a)},m.str=function(a){return"mat4("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+")"},"undefined"!=typeof a&&(a.mat4=m);var n={};n.create=function(){var a=new c(4);return a[0]=0,a[1]=0,a[2]=0,a[3]=1,a},n.rotationTo=function(){var a=h.create(),b=h.fromValues(1,0,0),c=h.fromValues(0,1,0);return function(d,e,f){var g=h.dot(e,f);return-.999999>g?(h.cross(a,b,e),h.length(a)<1e-6&&h.cross(a,c,e),h.normalize(a,a),n.setAxisAngle(d,a,Math.PI),d):g>.999999?(d[0]=0,d[1]=0,d[2]=0,d[3]=1,d):(h.cross(a,e,f),d[0]=a[0],d[1]=a[1],d[2]=a[2],d[3]=1+g,n.normalize(d,d))}}(),n.setAxes=function(){var a=l.create();return function(b,c,d,e){return a[0]=d[0],a[3]=d[1],a[6]=d[2],a[1]=e[0],a[4]=e[1],a[7]=e[2],a[2]=-c[0],a[5]=-c[1],a[8]=-c[2],n.normalize(b,n.fromMat3(b,a))}}(),n.clone=i.clone,n.fromValues=i.fromValues,n.copy=i.copy,n.set=i.set,n.identity=function(a){return a[0]=0,a[1]=0,a[2]=0,a[3]=1,a},n.setAxisAngle=function(a,b,c){c=.5*c;var d=Math.sin(c);return a[0]=d*b[0],a[1]=d*b[1],a[2]=d*b[2],a[3]=Math.cos(c),a},n.add=i.add,n.multiply=function(a,b,c){var d=b[0],e=b[1],f=b[2],g=b[3],h=c[0],i=c[1],j=c[2],k=c[3];return a[0]=d*k+g*h+e*j-f*i,a[1]=e*k+g*i+f*h-d*j,a[2]=f*k+g*j+d*i-e*h,a[3]=g*k-d*h-e*i-f*j,a
},n.mul=n.multiply,n.scale=i.scale,n.rotateX=function(a,b,c){c*=.5;var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i+g*h,a[1]=e*i+f*h,a[2]=f*i-e*h,a[3]=g*i-d*h,a},n.rotateY=function(a,b,c){c*=.5;var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i-f*h,a[1]=e*i+g*h,a[2]=f*i+d*h,a[3]=g*i-e*h,a},n.rotateZ=function(a,b,c){c*=.5;var d=b[0],e=b[1],f=b[2],g=b[3],h=Math.sin(c),i=Math.cos(c);return a[0]=d*i+e*h,a[1]=e*i-d*h,a[2]=f*i+g*h,a[3]=g*i-f*h,a},n.calculateW=function(a,b){var c=b[0],d=b[1],e=b[2];return a[0]=c,a[1]=d,a[2]=e,a[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e)),a},n.dot=i.dot,n.lerp=i.lerp,n.slerp=function(a,b,c,d){var e,f,g,h,i,j=b[0],k=b[1],l=b[2],m=b[3],n=c[0],o=c[1],p=c[2],q=c[3];return f=j*n+k*o+l*p+m*q,0>f&&(f=-f,n=-n,o=-o,p=-p,q=-q),1-f>1e-6?(e=Math.acos(f),g=Math.sin(e),h=Math.sin((1-d)*e)/g,i=Math.sin(d*e)/g):(h=1-d,i=d),a[0]=h*j+i*n,a[1]=h*k+i*o,a[2]=h*l+i*p,a[3]=h*m+i*q,a},n.invert=function(a,b){var c=b[0],d=b[1],e=b[2],f=b[3],g=c*c+d*d+e*e+f*f,h=g?1/g:0;return a[0]=-c*h,a[1]=-d*h,a[2]=-e*h,a[3]=f*h,a},n.conjugate=function(a,b){return a[0]=-b[0],a[1]=-b[1],a[2]=-b[2],a[3]=b[3],a},n.length=i.length,n.len=n.length,n.squaredLength=i.squaredLength,n.sqrLen=n.squaredLength,n.normalize=i.normalize,n.fromMat3=function(a,b){var c,d=b[0]+b[4]+b[8];if(d>0)c=Math.sqrt(d+1),a[3]=.5*c,c=.5/c,a[0]=(b[7]-b[5])*c,a[1]=(b[2]-b[6])*c,a[2]=(b[3]-b[1])*c;else{var e=0;b[4]>b[0]&&(e=1),b[8]>b[3*e+e]&&(e=2);var f=(e+1)%3,g=(e+2)%3;c=Math.sqrt(b[3*e+e]-b[3*f+f]-b[3*g+g]+1),a[e]=.5*c,c=.5/c,a[3]=(b[3*g+f]-b[3*f+g])*c,a[f]=(b[3*f+e]+b[3*e+f])*c,a[g]=(b[3*g+e]+b[3*e+g])*c}return a},n.str=function(a){return"quat("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+")"},"undefined"!=typeof a&&(a.quat=n)}(b.exports)}(this),e("qtek/math/Vector3",["require","glmatrix"],function(a){var b=a("glmatrix"),c=b.vec3,d=function(a,b,d){a=a||0,b=b||0,d=d||0,this._array=c.fromValues(a,b,d),this._dirty=!0};return d.prototype={constructor:d,get x(){return this._array[0]},set x(a){this._array[0]=a,this._dirty=!0},get y(){return this._array[1]},set y(a){this._array[1]=a,this._dirty=!0},get z(){return this._array[2]},set z(a){this._array[2]=a,this._dirty=!0},add:function(a){return c.add(this._array,this._array,a._array),this._dirty=!0,this},set:function(a,b,c){return this._array[0]=a,this._array[1]=b,this._array[2]=c,this._dirty=!0,this},setArray:function(a){return this._array[0]=a[0],this._array[1]=a[1],this._array[2]=a[2],this._dirty=!0,this},clone:function(){return new d(this.x,this.y,this.z)},copy:function(a){return c.copy(this._array,a._array),this._dirty=!0,this},cross:function(a,b){return c.cross(a._array,this._array,b._array),this},dist:function(a){return c.dist(this._array,a._array)},distance:function(a){return c.distance(this._array,a._array)},div:function(a){return c.div(this._array,this._array,a._array),this._dirty=!0,this},divide:function(a){return c.divide(this._array,this._array,a._array),this._dirty=!0,this},dot:function(a){return c.dot(this._array,a._array)},len:function(){return c.len(this._array)},length:function(){return c.length(this._array)},lerp:function(a,b,d){return c.lerp(this._array,a._array,b._array,d),this._dirty=!0,this},min:function(a){return vec2.min(this._array,this._array,a._array),this._dirty=!0,this},max:function(a){return vec2.max(this._array,this._array,a._array),this._dirty=!0,this},mul:function(a){return c.mul(this._array,this._array,a._array),this._dirty=!0,this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this._dirty=!0,this},negate:function(){return c.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return c.normalize(this._array,this._array),this._dirty=!0,this},random:function(a){return c.random(this._array,a),this._dirty=!0,this},scale:function(a){return c.scale(this._array,this._array,a),this._dirty=!0,this},scaleAndAdd:function(a,b){return c.scaleAndAdd(this._array,this._array,a._array,b),this._dirty=!0,this},sqrDist:function(a){return c.sqrDist(this._array,a._array)},squaredDistance:function(a){return c.squaredDistance(this._array,a._array)},sqrLen:function(){return c.sqrLen(this._array)},squaredLength:function(){return c.squaredLength(this._array)},sub:function(a){return c.sub(this._array,this._array,a._array),this._dirty=!0,this},subtract:function(a){return c.subtract(this._array,this._array,a._array),this._dirty=!0,this},transformMat3:function(a){return c.transformMat3(this._array,this._array,a._array),this._dirty=!0,this},transformMat4:function(a){return c.transformMat4(this._array,this._array,a._array),this._dirty=!0,this},transformQuat:function(a){return c.transformQuat(this._array,this._array,a._array),this._dirty=!0,this},applyProjection:function(a){var b=this._array;if(a=a._array,0===a[15]){var c=-1/b[2];b[0]=a[0]*b[0]*c,b[1]=a[5]*b[1]*c,b[2]=(a[10]*b[2]+a[14])*c}else b[0]=a[0]*b[0]+a[12],b[1]=a[5]*b[1]+a[13],b[2]=a[10]*b[2]+a[14];return this._dirty=!0,this},setEulerFromQuaternion:function(){},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.add=function(a,b,d){return c.add(a._array,b._array,d._array),a._dirty=!0,a},d.set=function(a,b,d,e){c.set(a._array,b,d,e),a._dirty=!0},d.copy=function(a,b){return c.copy(a._array,b._array),a._dirty=!0,a},d.cross=function(a,b,d){return c.cross(a._array,b._array,d._array),a._dirty=!0,a},d.dist=function(a,b){return c.distance(a._array,b._array)},d.distance=d.dist,d.div=function(a,b,d){return c.divide(a._array,b._array,d._array),a._dirty=!0,a},d.divide=d.div,d.dot=function(a,b){return c.dot(a._array,b._array)},d.len=function(a){return c.length(a._array)},d.lerp=function(a,b,d,e){return c.lerp(a._array,b._array,d._array,e),a._dirty=!0,a},d.min=function(a,b,d){return c.min(a._array,b._array,d._array),a._dirty=!0,a},d.max=function(a,b,d){return c.max(a._array,b._array,d._array),a._dirty=!0,a},d.mul=function(a,b,d){return c.multiply(a._array,b._array,d._array),a._dirty=!0,a},d.multiply=d.mul,d.negate=function(a,b){return c.negate(a._array,b._array),a._dirty=!0,a},d.normalize=function(a,b){return c.normalize(a._array,b._array),a._dirty=!0,a},d.random=function(a,b){return c.random(a._array,b),a._dirty=!0,a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d),a._dirty=!0,a},d.scaleAndAdd=function(a,b,d,e){return c.scale(a._array,b._array,d._array,e),a._dirty=!0,a},d.sqrDist=function(a,b){return c.sqrDist(a._array,b._array)},d.squaredDistance=d.sqrDist,d.sqrLen=function(a){return c.sqrLen(a._array)},d.squaredLength=d.sqrLen,d.sub=function(a,b,d){return c.subtract(a._array,b._array,d._array),a._dirty=!0,a},d.subtract=d.sub,d.transformMat3=function(a,b,d){return c.transformMat3(a._array,b._array,d._array),a._dirty=!0,a},d.transformMat4=function(a,b,d){return c.transformMat4(a._array,b._array,d._array),a._dirty=!0,a},d.transformQuat=function(a,b){return c.transformQuat(a._array,b._array,m._array),a._dirty=!0,a},d.POSITIVE_X=new d(1,0,0),d.NEGATIVE_X=new d(-1,0,0),d.POSITIVE_Y=new d(0,1,0),d.NEGATIVE_Y=new d(0,-1,0),d.POSITIVE_Z=new d(0,0,1),d.NEGATIVE_Z=new d(0,0,-1),d.UP=new d(0,1,0),d.ZERO=new d(0,0,0),d}),e("qtek/physics/ContactPoint",["require","qtek/math/Vector3"],function(){var a=d("qtek/math/Vector3"),b=function(){this.thisPoint=new a,this.otherPoint=new a,this.otherCollider=null,this.thisCollider=null,this.normal=new a};return b}),e("qtek/physics/AmmoEngineConfig.js",[],function(){return"'use strict';\n\n// Data format\n// Command are transferred in batches\n// ncmd - [cmd chunk][cmd chunk]...\n// Add rigid body :\n//      ------header------ \n//      cmdtype(1)\n//      idx(1)\n//      32 bit mask(1)\n//          But because it is stored in Float, so it can only use at most 24 bit (TODO)\n//      -------body-------\n//      collision flag(1)\n//      ...\n//      collision shape guid(1)\n//      shape type(1)\n//      ...\n// Remove rigid body:\n//      cmdtype(1)\n//      idx(1)\n//      \n// Mod rigid body :\n//      ------header------\n//      cmdtype(1)\n//      idx(1)\n//      32 bit mask(1)\n//      -------body-------\n//      ...\n//      \n// Step\n//      cmdtype(1)\n//      timeStep(1)\n//      maxSubSteps(1)\n//      fixedTimeStep(1)\n\nthis.CMD_ADD_COLLIDER = 1;\nthis.CMD_REMOVE_COLLIDER = 2;\nthis.CMD_MOD_COLLIDER = 3;\nthis.CMD_SYNC_MOTION_STATE = 4;\nthis.CMD_STEP_TIME = 5;\nthis.CMD_COLLISION_CALLBACK = 6;\n\nthis.CMD_SYNC_INERTIA_TENSOR = 7;\n\n// Step\nthis.CMD_STEP = 10;\n// Ray test\nthis.CMD_RAYTEST_CLOSEST = 11;\nthis.CMD_RAYTEST_ALL = 12;\n\n// Shape types\nthis.SHAPE_BOX = 0;\nthis.SHAPE_SPHERE = 1;\nthis.SHAPE_CYLINDER = 2;\nthis.SHAPE_CONE = 3;\nthis.SHAPE_CAPSULE = 4;\nthis.SHAPE_CONVEX_TRIANGLE_MESH = 5;\nthis.SHAPE_CONVEX_HULL = 6;\nthis.SHAPE_STATIC_PLANE = 7;\nthis.SHAPE_BVH_TRIANGLE_MESH = 8;\nthis.SHAPE_COMPOUND = 9;\n\n// Rigid Body properties and bit mask\n// 1. Property name\n// 2. Property size\n// 3. Mod bit mask, to check if part of rigid body needs update\nthis.RIGID_BODY_PROPS = [\n    ['linearVelocity', 3, 0x1],\n    ['angularVelocity', 3, 0x2],\n    ['linearFactor', 3, 0x4],\n    ['angularFactor', 3, 0x8],\n    ['centerOfMass', 3, 0x10],\n    ['localInertia', 3, 0x20],\n    ['massAndDamping', 3, 0x40],\n    ['totalForce', 3, 0x80],\n    ['totalTorque', 3, 0x100]\n];\n\nthis.RIGID_BODY_PROP_MOD_BIT = {};\nthis.RIGID_BODY_PROPS.forEach(function(item) {\n    this.RIGID_BODY_PROP_MOD_BIT[item[0]] = item[2];\n}, this);\n\nthis.SHAPE_MOD_BIT = 0x200;\nthis.MATERIAL_MOD_BIT = 0x400;\nthis.COLLISION_FLAG_MOD_BIT = 0x800;\n\nthis.MOTION_STATE_MOD_BIT = 0x1000;\n\nthis.MATERIAL_PROPS = [\n    ['friction', 1],\n    ['bounciness', 1],\n];\n\n// Collision Flags\nthis.COLLISION_FLAG_STATIC = 0x1;\nthis.COLLISION_FLAG_KINEMATIC = 0x2;\nthis.COLLISION_FLAG_GHOST_OBJECT = 0x4;\n\nthis.COLLISION_FLAG_HAS_CALLBACK = 0x200;\n\n// Collision Status\nthis.COLLISION_STATUS_ENTER = 1;\nthis.COLLISION_STATUS_STAY = 2;\nthis.COLLISION_STATUS_LEAVE = 3;\n"}),e("qtek/physics/AmmoEngineWorker.js",[],function(){return"'use strict';\n\n// TODO\n// Memory leak\n\n/********************************************\n            Global Objects\n ********************************************/\n\nfunction PhysicsObject(collisionObject, transform) {\n\n    this.__idx__ = 0;\n\n    this.collisionObject = collisionObject || null;\n    this.transform = transform || null;\n\n    this.collisionStatus = [];\n\n    this.isGhostObject = false;\n    this.hasCallback = false;\n}\n\nvar g_objectsList = [];\nvar g_shapes = {};\n    \n// Map to store the ammo objects which key is the ptr of body\nvar g_ammoPtrIdxMap = {};\n\n// World objects\nvar g_dispatcher = null;\nvar g_world = null;\nvar g_ghostPairCallback = null;\n\n/********************************************\n            Buffer Object\n ********************************************/\n\n function g_Buffer() {\n\n    this.array = [];\n    this.offset = 0;\n}\n\ng_Buffer.prototype = {\n\n    constructor : g_Buffer,\n    \n    packScalar : function(scalar) {\n        this.array[this.offset++] = scalar;\n    },\n\n    packVector2 : function(vector) {\n        this.array[this.offset++] = vector.getX();\n        this.array[this.offset++] = vector.getY();\n    },\n\n    packVector3 : function(vector) {\n        this.array[this.offset++] = vector.getX();\n        this.array[this.offset++] = vector.getY();\n        this.array[this.offset++] = vector.getZ();\n    },\n\n    packVector4 : function(vector) {\n        this.array[this.offset++] = vector.getX();\n        this.array[this.offset++] = vector.getY();\n        this.array[this.offset++] = vector.getZ();\n        this.array[this.offset++] = vector.getW();\n    },\n\n    packMatrix3x3 : function(m3x3) {\n        this.packVector3(m3x3.getColumn(0));\n        this.packVector3(m3x3.getColumn(1));\n        this.packVector3(m3x3.getColumn(2));\n    },\n\n    toFloat32Array : function() {\n        this.array.length = this.offset;\n        return new Float32Array(this.array);\n    }\n}\n\nvar g_stepBuffer = new g_Buffer();\nvar g_inertiaTensorBuffer = new g_Buffer();\nvar g_rayTestBuffer = new g_Buffer();\n\n\n/********************************************\n            Message Dispatcher\n ********************************************/\n\nonmessage = function(e) {\n    // Init the word\n    if (e.data.__init__) {\n        cmd_InitAmmo(e.data.ammoUrl, e.data.gravity);\n        return;\n    }\n\n    var buffer = new Float32Array(e.data);\n    \n    var nChunk = buffer[0];\n\n    var offset = 1;\n    var haveStep = false;\n    var stepTime, maxSubSteps, fixedTimeStep;\n    var addedCollisonObjects = [];\n    for (var i = 0; i < nChunk; i++) {\n        var cmdType = buffer[offset++];\n        // Dispatch\n        switch(cmdType) {\n            case CMD_ADD_COLLIDER:\n                offset = cmd_AddCollisionObject(buffer, offset, addedCollisonObjects);\n                break;\n            case CMD_REMOVE_COLLIDER:\n                offset = cmd_RemoveCollisionObject(buffer, offset);\n                break;\n            case CMD_MOD_COLLIDER:\n                offset = cmd_ModCollisionObject(buffer, offset);\n                break;\n            case CMD_STEP:\n                haveStep = true;\n                stepTime = buffer[offset++];\n                maxSubSteps = buffer[offset++];\n                fixedTimeStep = buffer[offset++];\n                break;\n            case CMD_RAYTEST_ALL:\n            case CMD_RAYTEST_CLOSEST:\n                offset = cmd_Raytest(buffer, offset, cmdType === CMD_RAYTEST_CLOSEST);\n                break;\n            default:\n        }\n    }\n\n    // Sync back inertia tensor\n    // Calculating torque needs this stuff\n    if (addedCollisonObjects.length > 0) { \n        g_inertiaTensorBuffer.offset = 0;\n        g_inertiaTensorBuffer.packScalar(1); // nChunk\n        g_inertiaTensorBuffer.packScalar(CMD_SYNC_INERTIA_TENSOR);   // Command\n        g_inertiaTensorBuffer.packScalar(0); // nBody\n        var nBody = 0;\n        for (var i = 0; i < addedCollisonObjects.length; i++) {\n            var co = addedCollisonObjects[i];\n            var body = co.collisionObject;\n            if (body.getInvInertiaTensorWorld) {\n                var m3x3 = body.getInvInertiaTensorWorld();\n                g_inertiaTensorBuffer.packScalar(co.__idx__);\n                g_inertiaTensorBuffer.packMatrix3x3(m3x3);\n                nBody++;\n            }\n        }\n        g_inertiaTensorBuffer.array[2] = nBody;\n        var array = g_inertiaTensorBuffer.toFloat32Array();\n        postMessage(array.buffer, [array.buffer]);\n    }\n\n    // Lazy execute\n    if (haveStep) {\n        g_stepBuffer.offset = 0;\n        cmd_Step(stepTime, maxSubSteps, fixedTimeStep);\n    }\n}\n\n/********************************************\n            Util Functions\n ********************************************/\n\nfunction _unPackVector3(buffer, offset) {\n    return new Ammo.btVector3(buffer[offset++], buffer[offset++], buffer[offset]);\n}\n\nfunction _setVector3(vec, buffer, offset) {\n    vec.setValue(buffer[offset++], buffer[offset++], buffer[offset++]);\n    return offset;\n}\n\nfunction _setVector4(vec, buffer, offset) {\n    vec.setValue(buffer[offset++], buffer[offset++], buffer[offset++], buffer[offset++]);\n    return offset;\n}\n\nfunction _unPackShape(buffer, offset) {\n    // Shape\n    var shapeId = buffer[offset++];\n    var shapeType = buffer[offset++];\n    var shape = g_shapes[shapeId];\n    var isCreate;\n    if (!shape) {\n        isCreate = true;\n        switch(shapeType) {\n            case SHAPE_SPHERE:\n                shape = new Ammo.btSphereShape(buffer[offset++]);\n                break;\n            case SHAPE_BOX:\n                shape = new Ammo.btBoxShape(_unPackVector3(buffer, offset));\n                offset += 3;\n                break;\n            case SHAPE_CYLINDER:\n                shape = new Ammo.btCylinderShape(_unPackVector3(buffer, offset));\n                offset += 3;\n                break;\n            case SHAPE_CONE:\n                shape = new Ammo.btConeShape(buffer[offset++], buffer[offset++]);\n                break;\n            case SHAPE_CAPSULE:\n                shape = new Ammo.btCapsuleShape(buffer[offset++], buffer[offset++]);\n                break;\n            case SHAPE_CONVEX_TRIANGLE_MESH:\n            case SHAPE_BVH_TRIANGLE_MESH:\n                var nTriangles = buffer[offset++];\n                var nVertices = buffer[offset++];\n                var indexStride = 3 * 4;\n                var vertexStride = 3 * 4;\n                \n                var triangleIndices = buffer.subarray(offset, offset + nTriangles * 3);\n                offset += nTriangles * 3;\n                var indicesPtr = Ammo.allocate(indexStride * nTriangles, 'i32', Ammo.ALLOC_NORMAL);\n                for (var i = 0; i < triangleIndices.length; i++) {\n                    Ammo.setValue(indicesPtr + i * 4, triangleIndices[i], 'i32');\n                }\n\n                var vertices = buffer.subarray(offset, offset + nVertices * 3);\n                offset += nVertices * 3;\n                var verticesPtr = Ammo.allocate(vertexStride * nVertices, 'float', Ammo.ALLOC_NORMAL);\n                for (var i = 0; i < vertices.length; i++) {\n                    Ammo.setValue(verticesPtr + i * 4, vertices[i], 'float');\n                }\n\n                var indexVertexArray = new Ammo.btTriangleIndexVertexArray(nTriangles, indicesPtr, indexStride, nVertices, verticesPtr, vertexStride);\n                // TODO Cal AABB ?\n                if (shapeType === SHAPE_CONVEX_TRIANGLE_MESH) {\n                    shape = new Ammo.btConvexTriangleMeshShape(indexVertexArray, true);\n                } else {\n                    shape = new Ammo.btBvhTriangleMeshShape(indexVertexArray, true, true);\n                }\n                break;\n            case SHAPE_CONVEX_HULL:\n                var nPoints = buffer[offset++];\n                var stride = 3 * 4;\n                var points = buffer.subarray(offset, offset + nPoints * 3);\n                offset += nPoints * 3;\n                var pointsPtr = Ammo.allocate(stride * nPoints, 'float', Ammo.ALLOC_NORMAL);\n                for (var i = 0; i < points.length; i++) {\n                    Ammo.setValue(pointsPtr + i * 4, points[i], 'float');\n                }\n\n                shape = new Ammo.btConvexHullShape(pointsPtr, nPoints, stride);\n                break;\n            case SHAPE_STATIC_PLANE:\n                var normal = _unPackVector3(buffer, offset);\n                offset+=3;\n                shape = new Ammo.btStaticPlaneShape(normal, buffer[offset++]);\n                break;\n            case SHAPE_COMPOUND:\n                var nChildren = buffer[offset++];\n                var shape = new Ammo.btCompoundShape();\n                for (var i = 0; i < nChildren; i++) {\n                    var origin = new Ammo.btVector3(buffer[offset++], buffer[offset++], buffer[offset++]);\n                    var rotation = new Ammo.btQuaternion(buffer[offset++], buffer[offset++], buffer[offset++], buffer[offset++]);\n                    var res = _unPackShape(buffer, offset);\n                    var childShape = res[0];\n                    offset = res[1];\n                    var transform = new Ammo.btTransform(rotation, origin);\n                    shape.addChildShape(transform, childShape);\n                }\n                break;\n            default:\n                throw new Error('Unknown type ' + shapeType);\n                break;\n        }\n\n        g_shapes[shapeId] = shape;\n    } else {\n        isCreate = false;\n        switch(shapeType) {\n            case SHAPE_SPHERE:\n                offset++;\n                break;\n            case SHAPE_BOX:\n            case SHAPE_CYLINDER:\n                offset += 3;\n                break;\n            case SHAPE_CONE:\n            case SHAPE_CAPSULE:\n                offset += 2;\n                break;\n            case SHAPE_CONVEX_TRIANGLE_MESH:\n            case SHAPE_BVH_TRIANGLE_MESH:\n                var nTriangles = buffer[offset++];\n                var nVertices = buffer[offset++];\n                offset += nTriangles * 3 + nVertices * 3;\n                break;\n            case SHAPE_CONVEX_HULL:\n                var nPoints = buffer[offset++];\n                offset += nPoints * 3;\n                break;\n            case SHAPE_STATIC_PLANE:\n                offset += 4;\n                break;\n            case SHAPE_COMPOUND:\n                // TODO when children are changed\n                var nChildren = buffer[offset++];\n                for (var i = 0; i < nChildren; i++) {\n                    offset += 7;\n                    var res = _unPackShape(buffer, offset);\n                    var childShape = res[0];\n                    offset = res[1];\n                }\n                break;\n            default:\n                throw new Error('Unknown type ' + shapeType);\n                break;\n        }\n    }\n\n    return [shape, offset, isCreate];\n}\n\n/********************************************\n                COMMANDS\n ********************************************/\n\nfunction cmd_InitAmmo(ammoUrl, gravity) {\n    importScripts(ammoUrl);\n    if (!gravity) {\n        gravity = [0, -10, 0];\n    }\n\n    var broadphase = new Ammo.btDbvtBroadphase();\n    var collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();\n    g_dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration);\n    var solver = new Ammo.btSequentialImpulseConstraintSolver();\n    g_world = new Ammo.btDiscreteDynamicsWorld(g_dispatcher, broadphase, solver, collisionConfiguration);\n    g_world.setGravity(new Ammo.btVector3(gravity[0], gravity[1], gravity[2]));\n\n    postMessage({\n        __init__ : true\n    });\n}\n\nfunction cmd_AddCollisionObject(buffer, offset, out) {\n    var idx = buffer[offset++];\n    var bitMask = buffer[offset++];\n\n    var collisionFlags = buffer[offset++];\n    var isGhostObject = COLLISION_FLAG_GHOST_OBJECT & collisionFlags;\n    var hasCallback = COLLISION_FLAG_HAS_CALLBACK & collisionFlags;\n\n    var group = buffer[offset++];\n    var collisionMask = buffer[offset++];\n\n    if (MOTION_STATE_MOD_BIT & bitMask) {\n        var origin = new Ammo.btVector3(buffer[offset++], buffer[offset++], buffer[offset++]);\n        var quat = new Ammo.btQuaternion(buffer[offset++], buffer[offset++], buffer[offset++], buffer[offset++]);\n        var transform = new Ammo.btTransform(quat, origin);\n    } else {\n        var transform = new Ammo.btTransform();\n    }\n\n    if (!isGhostObject) {\n        var motionState = new Ammo.btDefaultMotionState(transform);\n\n        if (RIGID_BODY_PROP_MOD_BIT.linearVelocity & bitMask) {\n            var linearVelocity = _unPackVector3(buffer, offset);\n            offset += 3;\n        }\n        if (RIGID_BODY_PROP_MOD_BIT.angularVelocity & bitMask) {\n            var angularVelocity = _unPackVector3(buffer, offset);\n            offset += 3;\n        }\n        if (RIGID_BODY_PROP_MOD_BIT.linearFactor & bitMask) {\n            var linearFactor = _unPackVector3(buffer, offset);\n            offset += 3;\n        }\n        if (RIGID_BODY_PROP_MOD_BIT.angularFactor & bitMask) {\n            var angularFactor = _unPackVector3(buffer, offset);\n            offset += 3;\n        }\n        if (RIGID_BODY_PROP_MOD_BIT.centerOfMass & bitMask) {\n            // TODO\n            // centerOfMass = _unPackVector3(buffer, offset);\n            offset += 3;\n        }\n        if (RIGID_BODY_PROP_MOD_BIT.localInertia & bitMask) {\n            var localInertia = _unPackVector3(buffer, offset);\n            offset += 3;\n        }\n        if (RIGID_BODY_PROP_MOD_BIT.massAndDamping & bitMask) {\n            var massAndDamping = _unPackVector3(buffer, offset);\n            offset += 3;\n        }\n        if (RIGID_BODY_PROP_MOD_BIT.totalForce & bitMask) {\n            var totalForce = _unPackVector3(buffer, offset);\n            offset += 3;\n        }\n        if (RIGID_BODY_PROP_MOD_BIT.totalTorque & bitMask) {\n            var totalTorque = _unPackVector3(buffer, offset);\n            offset += 3;\n        }\n    }\n\n    var res = _unPackShape(buffer, offset);\n    var shape = res[0];\n    offset = res[1];\n\n    if (massAndDamping) {\n        var mass = massAndDamping.getX();\n    } else {\n        var mass = 0;\n    }\n\n    var physicsObject;\n    if (!isGhostObject) {\n        if (!localInertia) {\n            localInertia = new Ammo.btVector3(0, 0, 0);\n            if (mass !== 0) { // Is dynamic\n                shape.calculateLocalInertia(mass, localInertia);\n            }\n        }\n        var rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(mass, motionState, shape, localInertia);\n        var rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\n\n        rigidBody.setCollisionFlags(collisionFlags);\n\n        linearVelocity && rigidBody.setLinearVelocity(linearVelocity);\n        angularVelocity && rigidBody.setAngularVelocity(angularVelocity);\n        linearFactor && rigidBody.setLinearFactor(linearFactor);\n        angularFactor && rigidBody.setAngularFactor(angularFactor);\n        if (massAndDamping) {\n            rigidBody.setDamping(massAndDamping.getY(), massAndDamping.getZ());\n        }\n        totalForce && rigidBody.applyCentralForce(totalForce);\n        totalTorque && rigidBody.applyTorque(totalTorque);\n\n        rigidBody.setFriction(buffer[offset++]);\n        rigidBody.setRestitution(buffer[offset++]);\n\n        physicsObject = new PhysicsObject(rigidBody, transform);\n        physicsObject.hasCallback = hasCallback;\n        g_objectsList[idx] = physicsObject;\n        g_ammoPtrIdxMap[rigidBody.ptr] = idx;\n        // TODO\n        // g_world.addRigidBody(rigidBody, group, collisionMask);\n        g_world.addRigidBody(rigidBody);\n    } else {\n        // TODO What's the difference of Pair Caching Ghost Object ?\n        var ghostObject = new Ammo.btPairCachingGhostObject();\n        ghostObject.setCollisionShape(shape);\n        ghostObject.setWorldTransform(transform);\n\n        physicsObject = new PhysicsObject(ghostObject, transform);\n        physicsObject.hasCallback = hasCallback;\n        physicsObject.isGhostObject = true;\n        g_objectsList[idx] = physicsObject;\n        // TODO\n        // g_world.addCollisionObject(ghostObject, group, collisionMask);\n        g_world.addCollisionObject(ghostObject);\n\n        g_ammoPtrIdxMap[ghostObject.ptr] = idx;\n        // TODO\n        if (!g_ghostPairCallback) {\n            g_ghostPairCallback = new Ammo.btGhostPairCallback();\n            g_world.getPairCache().setInternalGhostPairCallback(g_ghostPairCallback);\n        }\n    }\n\n    physicsObject.__idx__ = idx;\n    out.push(physicsObject);\n\n    return offset;\n}\n\n\nfunction cmd_RemoveCollisionObject(buffer, offset) {\n    var idx = buffer[offset++];\n    var obj = g_objectsList[idx];\n    g_objectsList[idx] = null;\n    if (obj.isGhostObject) {\n        g_world.removeCollisionObject(obj.collisionObject);\n    } else {\n        g_world.removeRigidBody(obj.collisionObject);\n    }\n    // TODO destroy ?\n    Ammo.destroy(obj.collisionObject);\n    return offset;\n}\n\nfunction cmd_ModCollisionObject(buffer, offset) {\n    var idx = buffer[offset++];\n    var bitMask = buffer[offset++];\n\n    var obj = g_objectsList[idx];\n    var collisionObject = obj.collisionObject;\n    var bodyNeedsActive = false;\n\n    if (COLLISION_FLAG_MOD_BIT & bitMask) {\n        var collisionFlags = buffer[offset++];\n        collisionObject.setCollisionFlags(collisionFlags);\n\n        obj.hasCallback = collisionFlags & COLLISION_FLAG_HAS_CALLBACK;\n        obj.isGhostObject = collisionFlags & COLLISION_FLAG_GHOST_OBJECT;\n    }\n    if (MOTION_STATE_MOD_BIT & bitMask) {\n        var motionState = collisionObject.getMotionState();\n        var transform = obj.transform;\n        motionState.getWorldTransform(transform);\n        offset = _setVector3(transform.getOrigin(), buffer, offset);\n        offset = _setVector4(transform.getRotation(), buffer, offset);\n        motionState.setWorldTransform(transform);\n    }\n\n    if (RIGID_BODY_PROP_MOD_BIT.linearVelocity & bitMask) {\n        offset = _setVector3(collisionObject.getLinearVelocity(), buffer, offset);\n        bodyNeedsActive = true;\n    }\n    if (RIGID_BODY_PROP_MOD_BIT.angularVelocity & bitMask) {\n        offset = _setVector3(collisionObject.getAngularVelocity(), buffer, offset);\n        bodyNeedsActive = true;\n    }\n    if (RIGID_BODY_PROP_MOD_BIT.linearFactor & bitMask) {\n        offset = _setVector3(collisionObject.getLinearFactor(), buffer, offset);\n    }\n    if (RIGID_BODY_PROP_MOD_BIT.angularFactor & bitMask) {\n        offset = _setVector3(collisionObject.getAngularFactor(), buffer, offset);\n    }\n    if (RIGID_BODY_PROP_MOD_BIT.centerOfMass & bitMask) {\n        // TODO\n        offset += 3;\n    }\n    if (RIGID_BODY_PROP_MOD_BIT.localInertia & bitMask) {\n        // TODO\n        offset += 3;\n    }\n    if (RIGID_BODY_PROP_MOD_BIT.massAndDamping & bitMask) {\n        // TODO MASS\n        var mass = buffer[offset++];\n        collisionObject.setDamping(buffer[offset++], buffer[offset++]);\n    }\n    if (RIGID_BODY_PROP_MOD_BIT.totalForce & bitMask) {\n        offset = _setVector3(collisionObject.getTotalForce(), buffer, offset);\n        bodyNeedsActive = true;\n    }\n    if (RIGID_BODY_PROP_MOD_BIT.totalTorque & bitMask) {\n        offset = _setVector3(collisionObject.getTotalTorque(), buffer, offset);\n        bodyNeedsActive = true;\n    }\n\n    if (bodyNeedsActive) {\n        collisionObject.activate();\n    }\n\n    // Shape\n    if (SHAPE_MOD_BIT & bitMask) {\n        // TODO\n        // destroy child shapes of compound shape\n        var shapeId = buffer[offset];\n        var shape = g_shapes[shapeId];\n        Ammo.destroy(shape);\n        g_shapes[shapeId] = null;\n\n        var res = _unPackShape(buffer, offset);\n        var shape = res[0];\n        offset = res[1];\n        collisionObject.setCollisionShape(shape);\n    }\n    if (MATERIAL_MOD_BIT & bitMask) {\n        collisionObject.setFriction(buffer[offset++]);\n        collisionObject.setRestitution(buffer[offset++]);\n    }\n \n    return offset;\n}\n\nfunction cmd_Step(timeStep, maxSubSteps, fixedTimeStep) {\n\n    var startTime = new Date().getTime();\n    g_world.stepSimulation(timeStep, maxSubSteps, fixedTimeStep);\n    var stepTime = new Date().getTime() - startTime;\n\n    var nChunk = 3;\n    g_stepBuffer.packScalar(nChunk);\n\n    // Sync Motion State\n    g_stepBuffer.packScalar(CMD_SYNC_MOTION_STATE);\n    var nObjects = 0;\n    var nObjectsOffset = g_stepBuffer.offset;\n    g_stepBuffer.packScalar(nObjects);\n\n    for (var i = 0; i < g_objectsList.length; i++) {\n        var obj = g_objectsList[i];\n        if (!obj) {\n            continue;\n        }\n        var collisionObject = obj.collisionObject;\n        if (collisionObject.isStaticOrKinematicObject()) {\n            continue;\n        }\n        // Idx\n        g_stepBuffer.packScalar(i);\n        var motionState = collisionObject.getMotionState();\n        motionState.getWorldTransform(obj.transform);\n\n        g_stepBuffer.packVector3(obj.transform.getOrigin());\n        g_stepBuffer.packVector4(obj.transform.getRotation());\n        nObjects++;\n    }\n    g_stepBuffer.array[nObjectsOffset] = nObjects;\n\n    // Return step time\n    g_stepBuffer.packScalar(CMD_STEP_TIME);\n    g_stepBuffer.packScalar(stepTime);\n\n    // Tick callback\n    _tickCallback(g_world);\n\n    var array = g_stepBuffer.toFloat32Array();\n\n    postMessage(array.buffer, [array.buffer]);\n}\n\n// nmanifolds - [idxA - idxB - ncontacts - [pA - pB - normal]... ]...\nfunction _tickCallback(world) {\n\n    g_stepBuffer.packScalar(CMD_COLLISION_CALLBACK);\n\n    var nManifolds = g_dispatcher.getNumManifolds();\n    var nCollision = 0;\n    var tickCmdOffset = g_stepBuffer.offset;\n    g_stepBuffer.packScalar(0);  //nManifolds place holder\n\n    for (var i = 0; i < nManifolds; i++) {\n        var contactManifold = g_dispatcher.getManifoldByIndexInternal(i);\n        var obAPtr = contactManifold.getBody0();\n        var obBPtr = contactManifold.getBody1();\n\n        var nContacts = contactManifold.getNumContacts();\n\n        if (nContacts > 0) {\n            var obAIdx = g_ammoPtrIdxMap[obAPtr];\n            var obBIdx = g_ammoPtrIdxMap[obBPtr];\n\n            var obA = g_objectsList[obAIdx];\n            var obB = g_objectsList[obBIdx];\n\n            if (obA.hasCallback || obB.hasCallback) {\n                var chunkStartOffset = g_stepBuffer.offset;\n                if (_packContactManifold(contactManifold, chunkStartOffset, obAIdx, obBIdx)) {\n                    nCollision++;\n                }\n            }\n        }\n    }\n\n    g_stepBuffer.array[tickCmdOffset] = nCollision;\n}\n\nfunction _packContactManifold(contactManifold, offset, obAIdx, obBIdx) {\n    // place holder for idxA, idxB, nContacts\n    g_stepBuffer.offset += 3;\n    var nActualContacts = 0;\n    var nContacts = contactManifold.getNumContacts();\n    for (var j = 0; j < nContacts; j++) {\n        var cp = contactManifold.getContactPoint(j);\n\n        if (cp.getDistance() <= 0) {\n            var pA = cp.getPositionWorldOnA();\n            var pB = cp.getPositionWorldOnB();\n            var normal = cp.get_m_normalWorldOnB();\n\n            g_stepBuffer.packVector3(pA);\n            g_stepBuffer.packVector3(pB);\n            g_stepBuffer.packVector3(normal);\n            nActualContacts++;\n        }\n    }\n\n    if (nActualContacts > 0) {\n        g_stepBuffer.array[offset] = obAIdx;\n        g_stepBuffer.array[offset+1] = obBIdx;\n        g_stepBuffer.array[offset+2] = nActualContacts;\n\n        return true;\n    } else {\n        g_stepBuffer.offset -= 3;\n        return false;\n    }\n}\n\nvar rayStart = null;\nvar rayEnd = null;\nfunction cmd_Raytest(buffer, offset, isClosest) {\n    if (!rayStart) {\n        rayStart = new Ammo.btVector3();\n        rayEnd = new Ammo.btVector3();\n    }\n    var cbIdx = buffer[offset++];\n    rayStart.setValue(buffer[offset++], buffer[offset++], buffer[offset++]);\n    rayEnd.setValue(buffer[offset++], buffer[offset++], buffer[offset++]);\n\n    g_rayTestBuffer.offset = 0;\n    g_rayTestBuffer.packScalar(1);\n    g_rayTestBuffer.packScalar(isClosest ? CMD_RAYTEST_CLOSEST : CMD_RAYTEST_ALL);\n    g_rayTestBuffer.packScalar(cbIdx);\n\n    if (isClosest) {\n        var callback = new Module.ClosestRayResultCallback(rayStart, rayEnd);\n        var colliderIdx = -1;\n        g_world.rayTest(rayStart, rayEnd, callback);\n        if (callback.hasHit()) {\n            var co = callback.get_m_collisionObject();\n            colliderIdx = g_ammoPtrIdxMap[co.ptr];\n            g_rayTestBuffer.packScalar(colliderIdx);\n            // hit point\n            g_rayTestBuffer.packVector3(callback.get_m_hitPointWorld());\n            // hit normal\n            g_rayTestBuffer.packVector3(callback.get_m_hitNormalWorld());\n        }\n\n        var array = g_rayTestBuffer.toFloat32Array();\n        postMessage(array.buffer, [array.buffer]);\n    } else {\n        var callback = new Module.AllHitsRayResultCallback(rayStart, rayEnd);\n        g_world.rayTest(rayStart, rayEnd, callback);\n        if (callback.hasHit()) {\n            // TODO\n        }\n    }\n\n    return offset;\n}"
}),e("qtek/physics/Shape",["require","qtek/core/Base"],function(a){var b=a("qtek/core/Base"),c=b.derive({},{dirty:function(){this._dirty=!0}});return c}),e("qtek/physics/shape/Box",["require","../Shape","qtek/math/Vector3"],function(a){var b=a("../Shape"),c=a("qtek/math/Vector3"),d=b.derive({halfExtents:null},function(){this.halfExtents||(this.halfExtents=new c(1,1,1))});return Object.defineProperty(d.prototype,"width",{get:function(){return 2*this.halfExtents._array[0]},set:function(a){this.halfExtents._array[0]=a/2,this.halfExtents._dirty=!0}}),Object.defineProperty(d.prototype,"height",{get:function(){return 2*this.halfExtents._array[1]},set:function(a){this.halfExtents._array[1]=a/2,this.halfExtents._dirty=!0}}),Object.defineProperty(d.prototype,"depth",{get:function(){return 2*this.halfExtents._array[2]},set:function(a){this.halfExtents._array[2]=a/2,this.halfExtents._dirty=!0}}),d}),e("qtek/physics/shape/Capsule",["require","../Shape","qtek/math/Vector3"],function(a){var b=a("../Shape"),c=(a("qtek/math/Vector3"),b.derive({_radius:1,_height:1,_dirty:!0}));return Object.defineProperty(c.prototype,"radius",{get:function(){return this._radius},set:function(a){this._radius=a,this._dirty=!0}}),Object.defineProperty(c.prototype,"height",{get:function(){return this._height},set:function(a){this._height=a,this._dirty=!0}}),Object.defineProperty(c.prototype,"halfHeight",{get:function(){return this._height/2},set:function(a){this._height=2*a,this._dirty=!0}}),c}),e("qtek/physics/shape/Cone",["require","../Shape","qtek/math/Vector3"],function(a){var b=a("../Shape"),c=(a("qtek/math/Vector3"),b.derive({_radius:1,_height:1,_dirty:!0}));return Object.defineProperty(c.prototype,"radius",{get:function(){return this._radius},set:function(a){this._radius=a,this._dirty=!0}}),Object.defineProperty(c.prototype,"height",{get:function(){return this._height},set:function(a){this._height=a,this._dirty=!0}}),c}),e("qtek/physics/shape/Cylinder",["require","../Shape","qtek/math/Vector3"],function(a){var b=a("../Shape"),c=a("qtek/math/Vector3"),d=b.derive({halfExtents:null,_upAxis:1,_dirty:!0,_radiusIdx:0,_heightIdx:1},function(){this.halfExtents||(this.halfExtents=new c(1,1,1))});return Object.defineProperty(d.prototype,"radius",{get:function(){return this.halfExtents._array[this._radiusIdx]},set:function(a){this.halfExtents._array[this._radiusIdx]=a,this.halfExtents._dirty=!0}}),Object.defineProperty(d.prototype,"height",{get:function(){return 2*this.halfExtents._array[this._heightIdx]},set:function(a){this.halfExtents._array[this._heightIdx]=a/2,this.halfExtents._dirty=!0}}),Object.defineProperty(d.prototype,"upAxis",{set:function(a){switch(a){case 0:this._radiusIdx=1,this._heightIdx=0;break;case 2:this._radiusIdx=0,this._heightIdx=2;break;default:this._radiusIdx=0,this._heightIdx=1}this._upAxis=a,this._dirty=!0},get:function(){return this._upAxis}}),d}),e("qtek/physics/shape/Sphere",["require","../Shape"],function(a){var b=a("../Shape"),c=b.derive({_radius:1,_dirty:!0});return Object.defineProperty(c.prototype,"radius",{get:function(){return this._radius},set:function(a){this._radius=a,this._dirty=!0}}),c}),e("qtek/math/Plane",["require","./Vector3","glmatrix"],function(a){var b=a("./Vector3"),c=a("glmatrix"),d=c.vec3,e=c.mat4,f=c.vec4,g=function(a,c){this.normal=a||new b(0,1,0),this.distance=c||0};return g.prototype={constructor:g,distanceToPoint:function(a){return d.dot(a._array,this.normal._array)-this.distance},projectPoint:function(a,c){c||(c=new b);var e=this.distanceToPoint(a);return d.scaleAndAdd(c._array,a._array,this.normal._array,-e),c._dirty=!0,c},normalize:function(){var a=1/d.len(this.normal._array);return d.scale(this.normal._array,a),this.distance*=a,this},intersectFrustum:function(a){for(var b=a.vertices,c=this.normal._array,e=d.dot(b[0]._array,c)>this.distance,f=1;8>f;f++)if(d.dot(b[f]._array,c)>this.distance!=e)return!0},intersectLine:function(){var a=d.create();return function(c,e,f){var g=this.distanceToPoint(c),h=this.distanceToPoint(e);if(g>0&&h>0||0>g&&0>h)return null;var i=this.normal._array,j=this.distance,k=c._array;d.sub(a,e._array,c._array),d.normalize(a,a);var l=d.dot(i,a);if(0==l)return null;f||(f=new b);var m=(d.dot(i,k)-j)/l;return d.scaleAndAdd(f._array,k,a,-m),f._dirty=!0,f}}(),applyTransform:function(){var a=e.create(),b=f.create(),c=f.create();return c[3]=1,function(g){return g=g._array,d.scale(c,this.normal._array,this.distance),f.transformMat4(c,c,g),this.distance=d.dot(c,this.normal._array),e.invert(a,g),e.transpose(a,a),b[3]=0,d.copy(b,this.normal._array),f.transformMat4(b,b,a),d.copy(this.normal._array,b),this}}(),copy:function(a){return d.copy(this.normal._array,a.normal._array),this.normal._dirty=!0,this.distance=a.distance,this},clone:function(){var a=new g;return a.copy(this),a}},g}),e("qtek/physics/shape/StaticPlane",["require","../Shape","qtek/math/Plane"],function(a){var b=a("../Shape"),c=a("qtek/math/Plane"),d=b.derive({_dirty:!1},function(){this.plane||(this.plane=new c,this.plane.normal.set(0,0,1),this.plane.distance=0)});return d}),e("qtek/physics/shape/ConvexTriangleMesh",["require","../Shape"],function(a){var b=a("../Shape"),c=b.derive({geometry:null});return c}),e("qtek/physics/shape/BvhTriangleMesh",["require","../Shape"],function(a){var b=a("../Shape"),c=b.derive({geometry:null});return c}),e("qtek/physics/shape/ConvexHull",["require","../Shape"],function(a){var b=a("../Shape"),c=b.derive({geometry:null});return c}),e("qtek/math/Quaternion",["require","glmatrix"],function(b){var c=b("glmatrix"),d=c.quat,e=function(a,b,c,e){a=a||0,b=b||0,c=c||0,e=void 0===e?1:e,this._array=d.fromValues(a,b,c,e),this._dirty=!0};return e.prototype={constructor:e,get x(){return this._array[0]},set x(a){this._array[0]=a,this._dirty=!0},get y(){this._array[1]=value,this._dirty=!0},set y(a){return this._array[1]},get z(){return this._array[2]},set z(a){this._array[2]=a,this._dirty=!0},get w(){return this._array[3]},set w(a){this._array[3]=a,this._dirty=!0},add:function(a){return d.add(this._array,this._array,a._array),this._dirty=!0,this},calculateW:function(){return d.calculateW(this._array,this._array),this._dirty=!0,this},set:function(a,b,c,d){return this._array[0]=a,this._array[1]=b,this._array[2]=c,this._array[3]=d,this._dirty=!0,this},setArray:function(a){return this._array[0]=a[0],this._array[1]=a[1],this._array[2]=a[2],this._array[3]=a[3],this._dirty=!0,this},clone:function(){return new e(this.x,this.y,this.z,this.w)},conjugate:function(){return d.conjugate(this._array,this._array),this._dirty=!0,this},copy:function(a){return d.copy(this._array,a._array),this._dirty=!0,this},dot:function(a){return d.dot(this._array,a._array)},fromMat3:function(a){return d.fromMat3(this._array,a._array),this._dirty=!0,this},fromMat4:function(){var a=c.mat3,b=a.create();return function(c){return a.fromMat4(b,c._array),a.transpose(b,b),d.fromMat3(this._array,b),this._dirty=!0,this}}(),identity:function(){return d.identity(this._array),this._dirty=!0,this},invert:function(){return d.invert(this._array,this._array),this._dirty=!0,this},len:function(){return d.len(this._array)},length:function(){return d.length(this._array)},lerp:function(a,b,c){return d.lerp(this._array,a._array,b._array,c),this._dirty=!0,this},mul:function(a){return d.mul(this._array,this._array,a._array),this._dirty=!0,this},mulLeft:function(){return d.multiply(this._array,a._array,this._array),this._dirty=!0,this},multiply:function(a){return d.multiply(this._array,this._array,a._array),this._dirty=!0,this},multiplyLeft:function(a){return d.multiply(this._array,a._array,this._array),this._dirty=!0,this},normalize:function(){return d.normalize(this._array,this._array),this._dirty=!0,this},rotateX:function(a){return d.rotateX(this._array,this._array,a),this._dirty=!0,this},rotateY:function(a){return d.rotateY(this._array,this._array,a),this._dirty=!0,this},rotateZ:function(a){return d.rotateZ(this._array,this._array,a),this._dirty=!0,this},rotationTo:function(a,b){return d.rotationTo(this._array,a._array,b._array),this._dirty=!0,this},setAxes:function(a,b,c){return d.setAxes(this._array,a._array,b._array,c._array),this._dirty=!0,this},setAxisAngle:function(a,b){return d.setAxisAngle(this._array,a._array,b),this._dirty=!0,this},slerp:function(a,b,c){return d.slerp(this._array,a._array,b._array,c),this._dirty=!0,this},sqrLen:function(){return d.sqrLen(this._array)},squaredLength:function(){return d.squaredLength(this._array)},setFromEuler:function(){},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},e.add=function(a,b,c){return d.add(a._array,b._array,c._array),a._dirty=!0,a},e.set=function(a,b,c,e,f){d.set(a._array,b,c,e,f),a._dirty=!0},e.copy=function(a,b){return d.copy(a._array,b._array),a._dirty=!0,a},e.calculateW=function(a,b){return d.calculateW(a._array,b._array),a._dirty=!0,a},e.conjugate=function(a,b){return d.conjugate(a._array,b._array),a._dirty=!0,a},e.identity=function(a){return d.identity(a._array),a._dirty=!0,a},e.invert=function(a,b){return d.invert(a._array,b._array),a._dirty=!0,a},e.dot=function(a,b){return d.dot(a._array,b._array)},e.len=function(a){return d.length(a._array)},e.lerp=function(a,b,c,e){return d.lerp(a._array,b._array,c._array,e),a._dirty=!0,a},e.slerp=function(a,b,c,e){return d.slerp(a._array,b._array,c._array,e),a._dirty=!0,a},e.mul=function(a,b,c){return d.multiply(a._array,b._array,c._array),a._dirty=!0,a},e.multiply=e.mul,e.rotateX=function(a,b,c){return d.rotateX(a._array,b._array,c),a._dirty=!0,a},e.rotateY=function(a,b,c){return d.rotateY(a._array,b._array,c),a._dirty=!0,a},e.rotateZ=function(a,b,c){return d.rotateZ(a._array,b._array,c),a._dirty=!0,a},e.setAxisAngle=function(a,b,c){return d.setAxisAngle(a._array,b._array,c),a._dirty=!0,a},e.normalize=function(a,b){return d.normalize(a._array,b._array),a._dirty=!0,a},e.sqrLen=function(a){return d.sqrLen(a._array)},e.squaredLength=e.sqrLen,e.fromMat3=function(a,b){return d.fromMat3(a._array,b._array),a._dirty=!0,a},e.setAxes=function(a,b,c,e){return d.setAxes(a._array,b._array,c._array,e._array),a._dirty=!0,a},e.rotationTo=function(a,b,c){return d.rotationTo(a._array,b._array,c._array),a._dirty=!0,a},e}),e("qtek/physics/shape/Compound",["require","../Shape","qtek/math/Vector3","qtek/math/Quaternion"],function(a){var b=a("../Shape"),c=a("qtek/math/Vector3"),d=a("qtek/math/Quaternion"),e=function(a,b,e){this.shape=a,this.position=b||new c,this.rotation=e||new d},f=b.derive({_dirty:!1},function(){this._children=[]},{addChildShape:function(a,b,c){this.removeChildShape(a);var d=new e(a,b,c);return this._children.push(d),this._dirty=!0,d},removeChildShape:function(a){for(var b=0;b<this._children.length;b++)if(this._children[b].shape===a)return this._children.splice(b,1),void(this._dirty=!0)},getChildShape:function(a){for(var b=0;b<this._children.length;b++)if(this._children[b].shape===a)return this._children[b]},getChildShapeAt:function(a){return this._children[a]}});return f}),e("qtek/physics/Pool",["require"],function(){function a(){this._size=0,this._data=[],this._empties=[]}return a.prototype.add=function(a){var b;return this._empties.length>0?(b=this._empties.pop(),this._data[b]=a):(b=this._data.length,this._data.push(a)),this._size++,b},a.prototype.remove=function(a){var b=this._data.indexOf(a);this.removeAt(b),this._size--},a.prototype.removeAt=function(a){this._data[a]=null,this._empties.push(a)},a.prototype.removeAll=function(){this._data=[],this._empties=[],this._size=0},a.prototype.getAt=function(a){return this._data[a]},a.prototype.getIndex=function(a){return this._data.indexOf(a)},a.prototype.getAll=function(){return this._data},a.prototype.refresh=function(){for(var a=[],b=0;b<this._data.length;b++)null!==this._data[b]&&a.push(this._data[b]);this._data=a},a.prototype.each=function(a,b){for(var c=0;c<this._data.length;c++)null!==this._data[c]&&a.call(b||this,this._data[c],c);this._data=newData},a}),e("qtek/physics/Engine",["require","qtek/core/Base","qtek/core/util","./AmmoEngineConfig.js","./AmmoEngineWorker.js","./shape/Box","./shape/Capsule","./shape/Cone","./shape/Cylinder","./shape/Sphere","./shape/StaticPlane","./shape/ConvexTriangleMesh","./shape/BvhTriangleMesh","./shape/ConvexHull","./shape/Compound","./Buffer","./Pool","./ContactPoint","qtek/math/Vector3"],function(a){var b=a("qtek/core/Base"),c=a("qtek/core/util"),d=a("./AmmoEngineConfig.js"),e=a("./AmmoEngineWorker.js"),f=[d,e].join("\n"),g=new Blob([f]);f=null,e=null;var h=a("./shape/Box"),i=a("./shape/Capsule"),j=a("./shape/Cone"),k=a("./shape/Cylinder"),l=a("./shape/Sphere"),m=a("./shape/StaticPlane"),n=a("./shape/ConvexTriangleMesh"),o=a("./shape/BvhTriangleMesh"),p=a("./shape/ConvexHull"),q=a("./shape/Compound"),r=a("./Buffer"),s=a("./Pool"),t=a("./ContactPoint"),u=a("qtek/math/Vector3"),v=new Function(d),w=new v,x=b.derive(function(){return{ammoUrl:"",gravity:new u(0,-10,0),maxSubSteps:3,fixedTimeStep:1/60,_stepTime:0,_isWorkerInited:!1,_isWorkerFree:!0,_accumalatedTime:0,_colliders:new s,_collidersToAdd:[],_collidersToRemove:[],_contacts:[],_callbacks:new s,_cmdBuffer:new r,_rayTestBuffer:new r}},{init:function(){var a=window.URL.createObjectURL(g);this._engineWorker=new Worker(a);var b=this.ammoUrl;0!=b.indexOf("http")&&(b=c.relative2absolute(this.ammoUrl,window.location.href.split("/").slice(0,-1).join("/"))),this._engineWorker.postMessage({__init__:!0,ammoUrl:b,gravity:[this.gravity.x,this.gravity.y,this.gravity.z]});var d=this;this._engineWorker.onmessage=function(a){if(a.data.__init__)return void(d._isWorkerInited=!0);for(var b=new Float32Array(a.data),c=b[0],e=1,f=0;c>f;f++){var g=b[e++];switch(g){case w.CMD_SYNC_MOTION_STATE:e=d._syncMotionState(b,e);break;case w.CMD_STEP_TIME:d._stepTime=b[e++];break;case w.CMD_COLLISION_CALLBACK:e=d._dispatchCollisionCallback(b,e);break;case w.CMD_SYNC_INERTIA_TENSOR:e=d._syncInertiaTensor(b,e);break;case w.CMD_RAYTEST_ALL:case w.CMD_RAYTEST_CLOSEST:e=d._rayTestCallback(b,e,g===w.CMD_RAYTEST_CLOSEST)}}d._isWorkerFree=!0,d.trigger("afterstep")}},step:function(a){if(this._isWorkerInited){if(!this._isWorkerFree)return void(this._accumalatedTime+=a);this._accumalatedTime=a;var b=0;this._cmdBuffer.setOffset(0),this._cmdBuffer.packScalar(0),b+=this._doModCollider(),b+=this._doRemoveCollider(),b+=this._doAddCollider(),this._cmdBuffer.packValues(w.CMD_STEP,this._accumalatedTime,this.maxSubSteps,this.fixedTimeStep),b++,this._cmdBuffer.set(0,b);var c=this._cmdBuffer.toFloat32Array();this._engineWorker.postMessage(c.buffer,[c.buffer]);for(var d=this._colliders.getAll(),e=0;e<d.length;e++){var f=d[e];if(null!==f&&!(f.isStatic||f.isKinematic||f.isGhostObject)){var g=f.collisionObject;g.totalForce._array[0]=0,g.totalForce._array[1]=0,g.totalForce._array[2]=0,g.totalTorque._array[0]=0,g.totalTorque._array[1]=0,g.totalTorque._array[2]=0}}this._isWorkerFree=!1}},addCollider:function(a){this._collidersToAdd.push(a)},removeCollider:function(a){var b=this._colliders.indexOf(a);b>=0&&this._collidersToRemove.push(b)},rayTest:function(a,b,c,d){var e=this._callbacks.add(c);this._rayTestBuffer.setOffset(0),this._rayTestBuffer.packScalar(1),this._rayTestBuffer.packScalar(d||void 0===d?w.CMD_RAYTEST_CLOSEST:w.CMD_RAYTEST_ALL),this._rayTestBuffer.packScalar(e),this._rayTestBuffer.packVector3(a),this._rayTestBuffer.packVector3(b);var f=this._rayTestBuffer.toFloat32Array();this._engineWorker.postMessage(f.buffer,[f.buffer])},dispose:function(){this._colliders.removeAll(),this._callbacks.removeAll(),this._collidersToAdd=[],this._collidersToRemove=[],this._contacts=[],this._engineWorker=null,this._isWorkerInited=!1},_rayTestCallback:function(a,b){var c=a[b++],d=this._callbacks.getAt(c),e=a[b++],f=null,g=null,h=null;if(e>=0)var f=this._colliders.getAt(e),g=new u(a[b++],a[b++],a[b++]),h=new u(a[b++],a[b++],a[b++]);return d&&d(f,g,h),this._callbacks.removeAt(c),b},_doAddCollider:function(){for(var a=0,b=0;b<this._collidersToAdd.length;b++){var c=this._collidersToAdd[b],d=this._colliders.add(c);this._cmdBuffer.packValues(w.CMD_ADD_COLLIDER,d);var e=this._cmdBuffer._offset++,f=this._packCollider(c,!0);this._cmdBuffer.set(e,f),a++}return this._collidersToAdd.length=0,a},_doRemoveCollider:function(){for(var a=0,b=0;b<this._collidersToRemove.length;b++){var c=this._collidersToRemove[b];this._colliders.removeAt(c),this._cmdBuffer.packValues(w.CMD_REMOVE_COLLIDER,c),a++}return this._collidersToRemove.length=0,a},_doModCollider:function(){for(var a=0,b=this._colliders.getAll(),c=0;c<b.length;c++){var d=b[c];if(null!==d){var e=this._cmdBuffer._offset;this._cmdBuffer._offset+=3;var f=this._packCollider(d);0!==f?(this._cmdBuffer.set(e,w.CMD_MOD_COLLIDER),this._cmdBuffer.set(e+1,c),this._cmdBuffer.set(e+2,f),a++):this._cmdBuffer._offset-=3}}return a},_packCollider:function(a,b){var c=0;if(b||a._dirty){var d=0;a.isStatic&&(d|=w.COLLISION_FLAG_STATIC),a.isKinematic&&(d|=w.COLLISION_FLAG_KINEMATIC),a.isGhostObject&&(d|=w.COLLISION_FLAG_GHOST_OBJECT),a._collisionHasCallback&&(d|=w.COLLISION_FLAG_HAS_CALLBACK),this._cmdBuffer.packScalar(d),c|=w.COLLISION_FLAG_MOD_BIT,a._dirty=!1}b&&(this._cmdBuffer.packScalar(a.group),this._cmdBuffer.packScalar(a.collisionMask)),(b||a.isKinematic)&&(this._cmdBuffer.packVector3(a.sceneNode.position),this._cmdBuffer.packVector4(a.sceneNode.rotation),c|=w.MOTION_STATE_MOD_BIT);var e=a.collisionObject;if(!a.isGhostObject)for(var f=0;f<w.RIGID_BODY_PROPS.length;f++){var g=w.RIGID_BODY_PROPS[f],h=g[0],i=e[h],j=g[1];void 0!==i&&null!==i&&(j>1?(i._dirty||b)&&(3===j?this._cmdBuffer.packVector3(i):4===j&&this._cmdBuffer.packVector4(i),c|=g[2],i._dirty=!1):console.warn("TODO"))}var k=this._packShape(e.shape,b);if(k&&(c|=w.SHAPE_MOD_BIT),!a.isGhostObject){var l=a.physicsMaterial;if(l._dirty||b){c|=w.MATERIAL_MOD_BIT;for(var f=0;f<w.MATERIAL_PROPS.length;f++){var g=w.MATERIAL_PROPS[f],h=g[0],i=l[h],j=g[1];1===j&&this._cmdBuffer.packScalar(i)}l._dirty=!1}}return c},_packShape:function(a,b){if(!(b||a.halfExtents&&a.halfExtents._dirty&&!a._dirty))return!1;if(this._cmdBuffer.packScalar(a.__GUID__),a instanceof h)this._cmdBuffer.packScalar(w.SHAPE_BOX),this._cmdBuffer.packVector3(a.halfExtents);else if(a instanceof l)this._cmdBuffer.packScalar(w.SHAPE_SPHERE),this._cmdBuffer.packScalar(a._radius);else if(a instanceof k)this._cmdBuffer.packScalar(w.SHAPE_CYLINDER),this._cmdBuffer.packVector3(a.halfExtents);else if(a instanceof j)this._cmdBuffer.packScalar(w.SHAPE_CONE),this._cmdBuffer.packScalar(a._radius),this._cmdBuffer.packScalar(a._height);else if(a instanceof i)this._cmdBuffer.packScalar(w.SHAPE_CAPSULE),this._cmdBuffer.packScalar(a._radius),this._cmdBuffer.packScalar(a._height);else if(a instanceof m)this._cmdBuffer.packScalar(w.SHAPE_STATIC_PLANE),this._cmdBuffer.packVector3(a.plane.normal),this._cmdBuffer.packScalar(a.plane.distance);else if(a instanceof n||a instanceof o){this._cmdBuffer.packScalar(a instanceof n?w.SHAPE_CONVEX_TRIANGLE_MESH:w.SHAPE_BVH_TRIANGLE_MESH);var c=a.geometry;if(this._cmdBuffer.packScalar(c.getFaceNumber()),this._cmdBuffer.packScalar(c.getVertexNumber()),c.isStatic())this._cmdBuffer.packArray(c.faces),this._cmdBuffer.packArray(c.attributes.position.value);else{for(var d=0;d<c.faces.length;d++)this._cmdBuffer.packArray(c.faces[d]);for(var d=0;d<c.attributes.position.value.length;d++)this._cmdBuffer.packArray(c.attributes.position.value[d])}}else if(a instanceof p){this._cmdBuffer.packScalar(w.SHAPE_CONVEX_HULL);var c=a.geometry;if(this._cmdBuffer.packScalar(c.getVertexNumber()),c.isStatic())this._cmdBuffer.packArray(c.attributes.position.value);else for(var d=0;d<c.attributes.position.value.length;d++)this._cmdBuffer.packArray(c.attributes.position.value[d])}else if(a instanceof q){this._cmdBuffer.packScalar(w.SHAPE_COMPOUND),this._cmdBuffer.packScalar(a._children.length);for(var d=0;d<a._children.length;d++){var e=a._children[d];this._cmdBuffer.packVector3(e.position),this._cmdBuffer.packVector4(e.rotation),this._packShape(e.shape,!0)}}return a.halfExtents&&(a.halfExtents._dirty=!1),a._dirty=!1,!0},_syncMotionState:function(a,b){for(var c=a[b++],d=0;c>d;d++){var e=a[b++],f=this._colliders.getAt(e),g=f.sceneNode;g&&(g.position.set(a[b++],a[b++],a[b++]),g.rotation.set(a[b++],a[b++],a[b++],a[b++]))}return b},_dispatchCollisionCallback:function(a,b){for(var c=a[b++],d=0;d<this._contacts.length;d++)this._contacts[d]&&(this._contacts[d].length=0);for(var d=0;c>d;d++){var e=a[b++],f=a[b++],g=this._colliders.getAt(e),h=this._colliders.getAt(f);this._contacts[e]||(this._contacts[e]=[]),this._contacts[f]||(this._contacts[f]=[]);for(var i,j,k=a[b++],l=0;k>l;l++){if(g.hasCollisionCallback()){var i=new t;i.thisPoint.set(a[b++],a[b++],a[b++]),i.otherPoint.set(a[b++],a[b++],a[b++]),i.normal.set(a[b++],a[b++],a[b++]),i.otherCollider=h,i.thisCollider=g,this._contacts[e].push(i)}else i=null;if(h.hasCollisionCallback()){var j=new t;i?(j.thisPoint.copy(i.otherPoint),j.otherPoint.copy(i.thisPoint),j.normal.copy(i.normal).negate()):(j.thisPoint.set(a[b++],a[b++],a[b++]),j.otherPoint.set(a[b++],a[b++],a[b++]),j.normal.set(a[b++],a[b++],a[b++])),j.thisCollider=h,j.otherCollider=g,this._contacts[f].push(j)}}for(var d=0;d<this._contacts.length;d++){var m=this._contacts[d];if(m&&m.length){var n=this._colliders.getAt(d);n.trigger("collision",m)}}}return b},_syncInertiaTensor:function(a,b){for(var c=a[b++],d=0;c>d;d++)for(var e=a[b++],f=this._colliders.getAt(e),g=f.collisionObject,h=g.invInertiaTensorWorld._array,i=0;9>i;i++)h[i]=a[b++];return b}});return x}),e("qtek/physics/GhostObject",["require","qtek/core/Base"],function(a){var b=a("qtek/core/Base"),c=b.derive({shape:null},{clone:function(){return new c({shape:this.shape})}});return c}),e("qtek/physics/Material",["require","qtek/core/Base"],function(a){var b=a("qtek/core/Base"),c=b.derive({_friction:.5,_bounciness:.3,_dirty:!0});return Object.defineProperty(c.prototype,"friction",{get:function(){return this._friction},set:function(a){this._friction=a,this._dirty=!0}}),Object.defineProperty(c.prototype,"bounciness",{get:function(){return this._bounciness},set:function(a){this._friction=a,this._dirty=!0}}),c}),e("qtek/math/Matrix3",["require","glmatrix"],function(a){var b=a("glmatrix"),c=b.mat3,d=function(){this._array=c.create()};return d.prototype={constructor:d,adjoint:function(){return c.adjoint(this._array,this._array),this},clone:function(){return(new d).copy(this)},copy:function(a){return c.copy(this._array,a._array),this},determinant:function(){return c.determinant(this._array)},fromMat2d:function(a){return c.fromMat2d(this._array,a._array)},fromMat4:function(a){return c.fromMat4(this._array,a._array)},fromQuat:function(a){return c.fromQuat(this._array,a._array),this},identity:function(){return c.identity(this._array),this},invert:function(){return c.invert(this._array,this._array),this},mul:function(a){return c.mul(this._array,this._array,a._array),this},mulLeft:function(a){return c.mul(this._array,a._array,this._array),this},multiply:function(a){return c.multiply(this._array,this._array,a._array),this},multiplyLeft:function(a){return c.multiply(this._array,a._array,this._array),this},normalFromMat4:function(a){return c.normalFromMat4(this._array,a._array),this},transpose:function(){return c.transpose(this._array,this._array),this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"}},d.adjoint=function(a,b){return c.adjoint(a._array,b._array),a},d.copy=function(a,b){return c.copy(a._array,b._array),a},d.determinant=function(a){return c.determinant(a._array)},d.identity=function(a){return c.identity(a._array),a},d.invert=function(a,b){return c.invert(a._array,b._array),a},d.mul=function(a,b,d){return c.mul(a._array,b._array,d._array),a},d.multiply=d.mul,d.fromMat2d=function(a,b){return c.fromMat2d(a._array,b._array),a},d.fromMat4=function(a,b){return c.fromMat4(a._array,b._array),a},d.fromQuat=function(a,b){return c.fromQuat(a._array,b._array),a},d.normalFromMat4=function(a,b){return c.normalFromMat4(a._array,b._array),a},d.rotate=function(a,b,d){return c.rotate(a._array,b._array,d),a},d.scale=function(a,b,d){return c.scale(a._array,b._array,d._array),a},d.transpose=function(a,b){return c.transpose(a._array,b._array),a},d.translate=function(a,b,d){return c.translate(a._array,b._array,d._array),a},d}),e("qtek/physics/RigidBody",["require","qtek/core/Base","qtek/math/Vector3","qtek/math/Quaternion","glmatrix","qtek/math/Matrix3"],function(a){var b=a("qtek/core/Base"),c=a("qtek/math/Vector3"),d=(a("qtek/math/Quaternion"),a("glmatrix")),e=d.vec3,f=a("qtek/math/Matrix3"),g=b.derive(function(){return{shape:null,linearVelocity:new c,angularVelocity:new c,localInertia:null,centerOfMass:null,linearFactor:new c(1,1,1),angularFactor:new c(1,1,1),totalForce:new c(0,0,0),totalTorque:new c(0,0,0),massAndDamping:new c,invInertiaTensorWorld:new f}},{applyForce:function(){var a=new c,b=new c;return function(c,d){e.mul(b._array,c._array,this.linearFactor._array),this.totalForce.add(b),d&&(e.cross(a._array,d._array,b._array),this.applyTorque(a))}}(),applyTorque:function(){var a=new c;return function(b){e.mul(a._array,b._array,this.angularFactor._array),this.totalTorque.add(a)}}(),applyImpulse:function(){var a=new c,b=new c;return function(c,d){0!==this.mass&&(e.mul(b._array,c._array,this.linearFactor._array),this.linearVelocity.scaleAndAdd(b,1/this.mass),d&&(e.cross(a._array,d._array,b._array),this.applyTorqueImpulse(a)))}}(),applyTorqueImpulse:function(){var a=new c;return function(b){e.mul(a._array,b._array,this.angularFactor._array),e.transformMat3(this.angularVelocity._array,a._array,this.invInertiaTensorWorld._array),this.angularVelocity._dirty=!0}}(),clearForces:function(){this.totalForce.set(0,0,0),this.totalTorque.set(0,0,0)},clone:function(){var a=new g;return a.shape=this.shape,a.linearFactor.copy(this.linearFactor),a.angularFactor.copy(this.angularFactor),a.massAndDamping.copy(this.massAndDamping),a}});return Object.defineProperty(g.prototype,"mass",{get:function(){return this.massAndDamping._array[0]},set:function(a){this.massAndDamping._array[0]=a,this.massAndDamping._dirty=!0}}),Object.defineProperty(g.prototype,"linearDamping",{get:function(){return this.massAndDamping._array[1]},set:function(a){this.massAndDamping._array[1]=a,this.massAndDamping._dirty=!0}}),Object.defineProperty(g.prototype,"angularDamping",{get:function(){return this.massAndDamping._array[2]},set:function(a){this.massAndDamping._array[2]=a,this.massAndDamping._dirty=!0}}),g}),e("qtek/physics/qtek-physics",["require","qtek/physics/Buffer","qtek/physics/Collider","qtek/physics/ContactPoint","qtek/physics/Engine","qtek/physics/GhostObject","qtek/physics/Material","qtek/physics/Pool","qtek/physics/RigidBody","qtek/physics/Shape","qtek/physics/shape/Box","qtek/physics/shape/BvhTriangleMesh","qtek/physics/shape/Capsule","qtek/physics/shape/Compound","qtek/physics/shape/Cone","qtek/physics/shape/ConvexHull","qtek/physics/shape/ConvexTriangleMesh","qtek/physics/shape/Cylinder","qtek/physics/shape/Sphere","qtek/physics/shape/StaticPlane"],function(a){var b={Buffer:a("qtek/physics/Buffer"),Collider:a("qtek/physics/Collider"),ContactPoint:a("qtek/physics/ContactPoint"),Engine:a("qtek/physics/Engine"),GhostObject:a("qtek/physics/GhostObject"),Material:a("qtek/physics/Material"),Pool:a("qtek/physics/Pool"),RigidBody:a("qtek/physics/RigidBody"),Shape:a("qtek/physics/Shape"),shape:{Box:a("qtek/physics/shape/Box"),BvhTriangleMesh:a("qtek/physics/shape/BvhTriangleMesh"),Capsule:a("qtek/physics/shape/Capsule"),Compound:a("qtek/physics/shape/Compound"),Cone:a("qtek/physics/shape/Cone"),ConvexHull:a("qtek/physics/shape/ConvexHull"),ConvexTriangleMesh:a("qtek/physics/shape/ConvexTriangleMesh"),Cylinder:a("qtek/physics/shape/Cylinder"),Sphere:a("qtek/physics/shape/Sphere"),StaticPlane:a("qtek/physics/shape/StaticPlane")}};return b}),qtekPhysics=d("qtek/physics/qtek-physics");for(var f in qtekPhysics)b[f]=qtekPhysics[f]});