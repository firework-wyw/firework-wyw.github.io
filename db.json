{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next-7.8.0/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next-7.8.0/source/404.html","path":"404.html","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/What-is-JWT.md","hash":"1f1b01654d2858a408fee7de1a02c8b1d3e1435a","modified":1627458457157},{"_id":"source/_posts/fix-bug.md","hash":"756d348e3d6c330902e81162eb5c1c920f09897d","modified":1627458457158},{"_id":"source/_posts/next-bug.md","hash":"3d637a85e431d7465547cbfdb7cb07879c9e84da","modified":1627458457160},{"_id":"source/_posts/rbac.md","hash":"bcd2daf35d5d6e78920d6bfc952ac92fa52ca8f4","modified":1627458457161},{"_id":"source/_posts/regex.md","hash":"1408a4045e51de0c7715730521420e22e8faf53d","modified":1627458457161},{"_id":"source/_posts/regex2.md","hash":"59c06d51e3f84898a7ac0b602c9d26074ee4c8d3","modified":1627458457162},{"_id":"source/_posts/swagger-bug.md","hash":"a3b77af7a7dd08bf40027e611e3e2e46dd73ef75","modified":1627458457163},{"_id":"source/_posts/web-security.md","hash":"05b4d07808c1b59b628c8a14ca378012c378772e","modified":1627458457164},{"_id":"source/categories/index.md","hash":"7cb82d78baeb55fdfb7104390e950607609b0cca","modified":1627458457165},{"_id":"themes/next-7.8.0/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1627458457447},{"_id":"themes/next-7.8.0/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1627458457449},{"_id":"themes/next-7.8.0/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1627458457448},{"_id":"themes/next-7.8.0/.gitignore","hash":"d9021ac0041b511356fc7044cb02c6e0e567d706","modified":1627458457457},{"_id":"themes/next-7.8.0/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1627458457457},{"_id":"themes/next-7.8.0/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1627458457458},{"_id":"themes/next-7.8.0/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1627458457458},{"_id":"themes/next-7.8.0/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1627458457459},{"_id":"themes/next-7.8.0/_config.yml","hash":"68ec158271a4aca2461cb5ecf07b2c0fc6287890","modified":1627458457459},{"_id":"themes/next-7.8.0/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1627458457471},{"_id":"themes/next-7.8.0/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1627458457459},{"_id":"themes/next-7.8.0/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1627458457512},{"_id":"themes/next-7.8.0/.github/CODE_OF_CONDUCT.md","hash":"778b7e052993ed59f21ed266ba7119ee2e5253fb","modified":1627458457450},{"_id":"themes/next-7.8.0/.github/CONTRIBUTING.md","hash":"5ddde54fb50d11dc08cec899a3588addb56aa386","modified":1627458457451},{"_id":"themes/next-7.8.0/.github/PULL_REQUEST_TEMPLATE.md","hash":"d2f8e6b65783e31787feb05d2ccea86151f53f35","modified":1627458457454},{"_id":"themes/next-7.8.0/.github/config.yml","hash":"df3d970700e6b409edc3d23be8d553db78d5ba3f","modified":1627458457454},{"_id":"themes/next-7.8.0/.github/issue-close-app.yml","hash":"b14756e65546eb9ecc9d4393f0c9a84a3dac1824","modified":1627458457455},{"_id":"themes/next-7.8.0/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1627458457455},{"_id":"themes/next-7.8.0/.github/lock.yml","hash":"3ce3d0a26030a1cd52b273cc6a6d444d7c8d85c2","modified":1627458457456},{"_id":"themes/next-7.8.0/.github/mergeable.yml","hash":"1c1cb77a62df1e3654b151c2da34b4a10d351170","modified":1627458457456},{"_id":"themes/next-7.8.0/.github/release-drafter.yml","hash":"09c3352b2d643acdc6839601ceb38abc38ab97c5","modified":1627458457456},{"_id":"themes/next-7.8.0/.github/stale.yml","hash":"590b65aca710e0fba75d3cf5361a64d13b6b0f63","modified":1627458457457},{"_id":"themes/next-7.8.0/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1627458457457},{"_id":"themes/next-7.8.0/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1627458457461},{"_id":"themes/next-7.8.0/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1627458457462},{"_id":"themes/next-7.8.0/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1627458457462},{"_id":"themes/next-7.8.0/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1627458457462},{"_id":"themes/next-7.8.0/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1627458457463},{"_id":"themes/next-7.8.0/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1627458457463},{"_id":"themes/next-7.8.0/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1627458457463},{"_id":"themes/next-7.8.0/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1627458457464},{"_id":"themes/next-7.8.0/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1627458457464},{"_id":"themes/next-7.8.0/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1627458457471},{"_id":"themes/next-7.8.0/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1627458457472},{"_id":"themes/next-7.8.0/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1585668906000},{"_id":"themes/next-7.8.0/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1627458457472},{"_id":"themes/next-7.8.0/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1627458457473},{"_id":"themes/next-7.8.0/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1627458457473},{"_id":"themes/next-7.8.0/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1627458457473},{"_id":"themes/next-7.8.0/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1627458457473},{"_id":"themes/next-7.8.0/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1627458457474},{"_id":"themes/next-7.8.0/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1627458457474},{"_id":"themes/next-7.8.0/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1627458457474},{"_id":"themes/next-7.8.0/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1627458457475},{"_id":"themes/next-7.8.0/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1627458457475},{"_id":"themes/next-7.8.0/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1627458457476},{"_id":"themes/next-7.8.0/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1627458457476},{"_id":"themes/next-7.8.0/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1627458457476},{"_id":"themes/next-7.8.0/languages/tr.yml","hash":"46e09f2119cbfbcf93fb8dbd267dccabeb8b0cda","modified":1627458457477},{"_id":"themes/next-7.8.0/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1627458457477},{"_id":"themes/next-7.8.0/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1627458457478},{"_id":"themes/next-7.8.0/languages/zh-CN.yml","hash":"81d73e21402dad729053a3041390435f43136a68","modified":1627458457478},{"_id":"themes/next-7.8.0/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1627458457478},{"_id":"themes/next-7.8.0/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1627458457479},{"_id":"themes/next-7.8.0/layout/_layout.swig","hash":"9554bd0f5c5a0438aa7b64065be5561c374d260e","modified":1627458457479},{"_id":"themes/next-7.8.0/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1627458457509},{"_id":"themes/next-7.8.0/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1627458457510},{"_id":"themes/next-7.8.0/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1627458457510},{"_id":"themes/next-7.8.0/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1627458457510},{"_id":"themes/next-7.8.0/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1627458457511},{"_id":"themes/next-7.8.0/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1627458457511},{"_id":"themes/next-7.8.0/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1627458457523},{"_id":"themes/next-7.8.0/.github/ISSUE_TEMPLATE/bug-report.md","hash":"e67146befddec3a0dc47dc80d1109070c71d5d04","modified":1627458457452},{"_id":"themes/next-7.8.0/.github/ISSUE_TEMPLATE/feature-request.md","hash":"6beeca0f45a429cd932b6e648617f548ff64c27c","modified":1627458457452},{"_id":"themes/next-7.8.0/.github/ISSUE_TEMPLATE/other.md","hash":"d5aa1a3323639a36bcd9a401484b67537043cd3c","modified":1627458457453},{"_id":"themes/next-7.8.0/.github/ISSUE_TEMPLATE/question.md","hash":"59275aa0582f793fee7be67904dcf52ad33a7181","modified":1627458457453},{"_id":"themes/next-7.8.0/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1627458457465},{"_id":"themes/next-7.8.0/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1627458457466},{"_id":"themes/next-7.8.0/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1627458457466},{"_id":"themes/next-7.8.0/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1627458457467},{"_id":"themes/next-7.8.0/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1627458457467},{"_id":"themes/next-7.8.0/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1627458457467},{"_id":"themes/next-7.8.0/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1627458457468},{"_id":"themes/next-7.8.0/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1627458457469},{"_id":"themes/next-7.8.0/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1627458457469},{"_id":"themes/next-7.8.0/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1627458457469},{"_id":"themes/next-7.8.0/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1627458457470},{"_id":"themes/next-7.8.0/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1627458457470},{"_id":"themes/next-7.8.0/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1627458457470},{"_id":"themes/next-7.8.0/layout/_macro/post-collapse.swig","hash":"c459531bba73a11ce84435d2c91f105ecd0e310a","modified":1627458457480},{"_id":"themes/next-7.8.0/layout/_macro/post.swig","hash":"60d4ab526812d93ad17e44e51ddaf5d7d4e06475","modified":1627458457480},{"_id":"themes/next-7.8.0/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1627458457481},{"_id":"themes/next-7.8.0/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1627458457481},{"_id":"themes/next-7.8.0/layout/_partials/footer.swig","hash":"a76355d230792e924ea3beb3094bad4b51567419","modified":1627458457482},{"_id":"themes/next-7.8.0/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1627458457485},{"_id":"themes/next-7.8.0/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1627458457486},{"_id":"themes/next-7.8.0/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1627458457490},{"_id":"themes/next-7.8.0/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1627458457491},{"_id":"themes/next-7.8.0/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1627458457492},{"_id":"themes/next-7.8.0/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1627458457493},{"_id":"themes/next-7.8.0/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1627458457496},{"_id":"themes/next-7.8.0/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1627458457496},{"_id":"themes/next-7.8.0/layout/_third-party/baidu-push.swig","hash":"bd9ba0bf60cc3008ee14339fa395ee6af188e879","modified":1627458457499},{"_id":"themes/next-7.8.0/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1627458457503},{"_id":"themes/next-7.8.0/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1627458457504},{"_id":"themes/next-7.8.0/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1627458457505},{"_id":"themes/next-7.8.0/scripts/events/index.js","hash":"7baf362743b3d30626066614d877891fc140c502","modified":1627458457513},{"_id":"themes/next-7.8.0/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1627458457519},{"_id":"themes/next-7.8.0/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1627458457519},{"_id":"themes/next-7.8.0/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1627458457520},{"_id":"themes/next-7.8.0/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1627458457520},{"_id":"themes/next-7.8.0/scripts/filters/post.js","hash":"cf5b0db0a9271687f7a21bc581ae87addd8f0767","modified":1627458457521},{"_id":"themes/next-7.8.0/scripts/helpers/engine.js","hash":"6abda91b431c9b6f6cd2adfa665e694cfdb171be","modified":1627458457521},{"_id":"themes/next-7.8.0/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1627458457522},{"_id":"themes/next-7.8.0/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1627458457522},{"_id":"themes/next-7.8.0/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1627458457522},{"_id":"themes/next-7.8.0/scripts/tags/button.js","hash":"178d3efb8d2c1aca606181894c352fc65c40c32a","modified":1627458457523},{"_id":"themes/next-7.8.0/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1627458457524},{"_id":"themes/next-7.8.0/scripts/tags/center-quote.js","hash":"e11a738ee77c4304add79c964bdec3715c45653a","modified":1627458457524},{"_id":"themes/next-7.8.0/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1627458457524},{"_id":"themes/next-7.8.0/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1627458457525},{"_id":"themes/next-7.8.0/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1627458457525},{"_id":"themes/next-7.8.0/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1627458457525},{"_id":"themes/next-7.8.0/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1627458457526},{"_id":"themes/next-7.8.0/scripts/tags/tabs.js","hash":"72a5adbd8f300bee1d0c289367598ca06b2bed17","modified":1627458457526},{"_id":"themes/next-7.8.0/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1627458457526},{"_id":"themes/next-7.8.0/source/css/_colors.styl","hash":"9d65353ca8c634eb96142dcee1b36b6f1004522a","modified":1627458457527},{"_id":"themes/next-7.8.0/source/css/_mixins.styl","hash":"cf81a6731aa436e7bb8d9a743b01f62107e27dd3","modified":1627458457553},{"_id":"themes/next-7.8.0/source/css/main.styl","hash":"815ef30987d02f3d76dbe4b5ee3a72135a152678","modified":1627458457563},{"_id":"themes/next-7.8.0/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1627458457563},{"_id":"themes/next-7.8.0/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1585668906000},{"_id":"themes/next-7.8.0/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1585668906000},{"_id":"themes/next-7.8.0/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1627458457564},{"_id":"themes/next-7.8.0/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1627458457564},{"_id":"themes/next-7.8.0/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1627458457565},{"_id":"themes/next-7.8.0/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1627458457565},{"_id":"themes/next-7.8.0/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1627458457565},{"_id":"themes/next-7.8.0/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1627458457566},{"_id":"themes/next-7.8.0/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1627458457566},{"_id":"themes/next-7.8.0/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1585668906000},{"_id":"themes/next-7.8.0/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1585668906000},{"_id":"themes/next-7.8.0/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1627458457567},{"_id":"themes/next-7.8.0/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1627458457567},{"_id":"themes/next-7.8.0/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1627458457567},{"_id":"themes/next-7.8.0/source/js/algolia-search.js","hash":"f0cee802b4d48d5e78ba88d77d4257cb8a88dd6e","modified":1627458457568},{"_id":"themes/next-7.8.0/source/js/bookmark.js","hash":"2268bfcab8cf9019e590e2d356b08a3d4a0cf791","modified":1627458457569},{"_id":"themes/next-7.8.0/source/js/local-search.js","hash":"8f046860139f8dc7d1b445290a19e391800ff322","modified":1627458457569},{"_id":"themes/next-7.8.0/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1627458457569},{"_id":"themes/next-7.8.0/source/js/next-boot.js","hash":"509c5b02446d4989a6ef3081cafeb9497cdde4e5","modified":1627458457571},{"_id":"themes/next-7.8.0/source/js/utils.js","hash":"212349738695f0c5dffcf26f6a3d33ce912e4ed4","modified":1627458457572},{"_id":"themes/next-7.8.0/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1627458457573},{"_id":"themes/next-7.8.0/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1627458457482},{"_id":"themes/next-7.8.0/layout/_partials/head/head.swig","hash":"ca1b16202403515550f57b51dccb19afcb10ccf1","modified":1627458457483},{"_id":"themes/next-7.8.0/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1627458457484},{"_id":"themes/next-7.8.0/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1627458457484},{"_id":"themes/next-7.8.0/layout/_partials/header/menu-item.swig","hash":"11acd6b585eeb823358e642c7dde7d637fda706f","modified":1627458457484},{"_id":"themes/next-7.8.0/layout/_partials/header/menu.swig","hash":"6a3901962ad7e698640a288be627947de90de1f6","modified":1627458457485},{"_id":"themes/next-7.8.0/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1627458457485},{"_id":"themes/next-7.8.0/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1627458457486},{"_id":"themes/next-7.8.0/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1627458457486},{"_id":"themes/next-7.8.0/layout/_partials/post/post-copyright.swig","hash":"5fd5ba53962aefccb43b1d2b306a534add2373e1","modified":1627458457487},{"_id":"themes/next-7.8.0/layout/_partials/post/post-followme.swig","hash":"deffa919e72da6c2cdc2f32d403c809916bd36d1","modified":1627458457487},{"_id":"themes/next-7.8.0/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1627458457488},{"_id":"themes/next-7.8.0/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1627458457488},{"_id":"themes/next-7.8.0/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1627458457489},{"_id":"themes/next-7.8.0/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1627458457489},{"_id":"themes/next-7.8.0/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1627458457489},{"_id":"themes/next-7.8.0/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1627458457490},{"_id":"themes/next-7.8.0/layout/_partials/sidebar/site-overview.swig","hash":"d1b9a43bdfaf2b151cce1a74d23e65c2e488e41b","modified":1627458457490},{"_id":"themes/next-7.8.0/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1627458457493},{"_id":"themes/next-7.8.0/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1627458457494},{"_id":"themes/next-7.8.0/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1627458457494},{"_id":"themes/next-7.8.0/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1627458457495},{"_id":"themes/next-7.8.0/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1627458457495},{"_id":"themes/next-7.8.0/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1627458457497},{"_id":"themes/next-7.8.0/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1627458457497},{"_id":"themes/next-7.8.0/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1627458457498},{"_id":"themes/next-7.8.0/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1627458457498},{"_id":"themes/next-7.8.0/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1627458457499},{"_id":"themes/next-7.8.0/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1627458457500},{"_id":"themes/next-7.8.0/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1627458457501},{"_id":"themes/next-7.8.0/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1627458457501},{"_id":"themes/next-7.8.0/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1627458457502},{"_id":"themes/next-7.8.0/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1627458457502},{"_id":"themes/next-7.8.0/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1627458457502},{"_id":"themes/next-7.8.0/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1627458457502},{"_id":"themes/next-7.8.0/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1627458457503},{"_id":"themes/next-7.8.0/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1627458457504},{"_id":"themes/next-7.8.0/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1627458457504},{"_id":"themes/next-7.8.0/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1627458457505},{"_id":"themes/next-7.8.0/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1627458457506},{"_id":"themes/next-7.8.0/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1627458457507},{"_id":"themes/next-7.8.0/layout/_third-party/statistics/busuanzi-counter.swig","hash":"5b5618c2f6ad1d7971e6db257222fce89aa56565","modified":1627458457507},{"_id":"themes/next-7.8.0/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1627458457508},{"_id":"themes/next-7.8.0/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1627458457508},{"_id":"themes/next-7.8.0/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1627458457508},{"_id":"themes/next-7.8.0/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1627458457508},{"_id":"themes/next-7.8.0/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1627458457509},{"_id":"themes/next-7.8.0/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1627458457509},{"_id":"themes/next-7.8.0/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1627458457513},{"_id":"themes/next-7.8.0/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1627458457513},{"_id":"themes/next-7.8.0/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1627458457514},{"_id":"themes/next-7.8.0/scripts/filters/comment/changyan.js","hash":"d002c9eea7e7dd31b64a4172012d4294489974d5","modified":1627458457515},{"_id":"themes/next-7.8.0/scripts/filters/comment/common.js","hash":"31a6c8fbdfa16112b0b099727437b9df7641d421","modified":1627458457515},{"_id":"themes/next-7.8.0/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1627458457516},{"_id":"themes/next-7.8.0/scripts/filters/comment/disqus.js","hash":"14917c0f9ac76b50296e64437316cba0966c61d1","modified":1627458457516},{"_id":"themes/next-7.8.0/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1627458457518},{"_id":"themes/next-7.8.0/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1627458457518},{"_id":"themes/next-7.8.0/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1627458457519},{"_id":"themes/next-7.8.0/scripts/filters/comment/valine.js","hash":"7ff11f64f4315d06ba585928fc9a8bc3761894a5","modified":1627458457519},{"_id":"themes/next-7.8.0/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1627458457561},{"_id":"themes/next-7.8.0/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1627458457561},{"_id":"themes/next-7.8.0/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1627458457562},{"_id":"themes/next-7.8.0/source/css/_variables/Pisces.styl","hash":"93625aa12a40482fe911e350758f9b4abe4546ff","modified":1627458457562},{"_id":"themes/next-7.8.0/source/css/_variables/base.styl","hash":"fa086b75ff09268e22adf6cb36b2b6720306d824","modified":1627458457562},{"_id":"themes/next-7.8.0/source/js/schemes/muse.js","hash":"78c77614b9fe0d7d97aa08468c6cffbcbda96b75","modified":1627458457571},{"_id":"themes/next-7.8.0/source/js/schemes/pisces.js","hash":"1a9741145938e2c754a808381350723cbebf43c5","modified":1627458457572},{"_id":"themes/next-7.8.0/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1627458457573},{"_id":"themes/next-7.8.0/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1627458457574},{"_id":"themes/next-7.8.0/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1627458457574},{"_id":"themes/next-7.8.0/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1627458457574},{"_id":"themes/next-7.8.0/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1627458457575},{"_id":"themes/next-7.8.0/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1627458457582},{"_id":"themes/next-7.8.0/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1627458457582},{"_id":"themes/next-7.8.0/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1627458457528},{"_id":"themes/next-7.8.0/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1627458457528},{"_id":"themes/next-7.8.0/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1627458457529},{"_id":"themes/next-7.8.0/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1627458457536},{"_id":"themes/next-7.8.0/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1627458457542},{"_id":"themes/next-7.8.0/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1627458457542},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/base.styl","hash":"6471369bd120986f4afad25ad1216f9c4e8405d5","modified":1627458457545},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1627458457546},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1627458457547},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1627458457549},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1627458457549},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1627458457549},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/tables.styl","hash":"7ed4733240206d1aa729c835e69a85f8f3c73cd6","modified":1627458457549},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1627458457552},{"_id":"themes/next-7.8.0/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1627458457554},{"_id":"themes/next-7.8.0/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1627458457554},{"_id":"themes/next-7.8.0/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1627458457554},{"_id":"themes/next-7.8.0/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1627458457555},{"_id":"themes/next-7.8.0/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1627458457556},{"_id":"themes/next-7.8.0/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1627458457556},{"_id":"themes/next-7.8.0/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1627458457556},{"_id":"themes/next-7.8.0/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1627458457557},{"_id":"themes/next-7.8.0/source/css/_schemes/Muse/_menu.styl","hash":"83b7104a319cfbf6af3548f354240eb07dd73d38","modified":1627458457557},{"_id":"themes/next-7.8.0/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1627458457557},{"_id":"themes/next-7.8.0/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1627458457557},{"_id":"themes/next-7.8.0/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1627458457557},{"_id":"themes/next-7.8.0/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1627458457558},{"_id":"themes/next-7.8.0/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1627458457558},{"_id":"themes/next-7.8.0/source/css/_schemes/Pisces/_menu.styl","hash":"315eea625a90a19421b6d6413322ae40bb5ad4c6","modified":1627458457558},{"_id":"themes/next-7.8.0/source/css/_schemes/Pisces/_sidebar.styl","hash":"919068c7db32bfee26238e3a783efe14b3060d63","modified":1627458457560},{"_id":"themes/next-7.8.0/source/css/_schemes/Pisces/_sub-menu.styl","hash":"c9df5ee78b46f4a2926e6e88fbe1ba1a9a75aecc","modified":1627458457560},{"_id":"themes/next-7.8.0/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1627458457560},{"_id":"themes/next-7.8.0/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1627458457576},{"_id":"themes/next-7.8.0/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1627458457576},{"_id":"themes/next-7.8.0/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1627458457577},{"_id":"themes/next-7.8.0/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1627458457529},{"_id":"themes/next-7.8.0/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1627458457529},{"_id":"themes/next-7.8.0/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1627458457530},{"_id":"themes/next-7.8.0/source/css/_common/components/pages/schedule.styl","hash":"66001b7624ca044f9c06e75036f0e6e4b091b094","modified":1627458457531},{"_id":"themes/next-7.8.0/source/css/_common/components/pages/tag-cloud.styl","hash":"a22c639cdf1073c9d060af62233125991ddf4dd5","modified":1627458457531},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-collapse.styl","hash":"5912a1676a973b6d9291b43aec6aeeef6871d1ed","modified":1627458457532},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1627458457532},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1627458457533},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1627458457533},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1627458457533},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1627458457534},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-header.styl","hash":"44749e3f07a328d81a959708316494d3d737ab57","modified":1627458457534},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-nav.styl","hash":"81b2bbd6fb590101a089bc390ed4934f5c462215","modified":1627458457534},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-reward.styl","hash":"82a275ca74086a46b8e82d5ebf78c7a807cd9c8b","modified":1627458457534},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1627458457535},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1627458457535},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1627458457535},{"_id":"themes/next-7.8.0/source/css/_common/components/post/post.styl","hash":"fcd64c23d17775b3635325f6758b648d932e79b5","modified":1627458457536},{"_id":"themes/next-7.8.0/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1627458457537},{"_id":"themes/next-7.8.0/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1627458457536},{"_id":"themes/next-7.8.0/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1627458457537},{"_id":"themes/next-7.8.0/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1627458457538},{"_id":"themes/next-7.8.0/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1627458457538},{"_id":"themes/next-7.8.0/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1627458457539},{"_id":"themes/next-7.8.0/source/css/_common/outline/header/bookmark.styl","hash":"f7977cfacaca9db6fab4d154486ad57ec4b0fde9","modified":1627458457539},{"_id":"themes/next-7.8.0/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1627458457540},{"_id":"themes/next-7.8.0/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1627458457540},{"_id":"themes/next-7.8.0/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1627458457540},{"_id":"themes/next-7.8.0/source/css/_common/outline/header/menu.styl","hash":"73c578914052e11392cd4364af9075b66832b793","modified":1627458457541},{"_id":"themes/next-7.8.0/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1627458457541},{"_id":"themes/next-7.8.0/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1627458457541},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1627458457542},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1627458457542},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1627458457543},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"0812ae7ecd1d8c60ec4290f506ec10881ed0fca8","modified":1627458457543},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1627458457543},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1627458457544},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1627458457544},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1627458457544},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1627458457544},{"_id":"themes/next-7.8.0/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1627458457545},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1627458457547},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1627458457547},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1627458457548},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1627458457548},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"8c318a485c56dbdcdb22fd00781484ecc151bf8a","modified":1627458457550},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1627458457550},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1627458457551},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/tags/note.styl","hash":"9d1f42d01f6e346b61f83cdd4f5fbd3bf8e44968","modified":1627458457551},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1627458457551},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1627458457552},{"_id":"themes/next-7.8.0/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1627458457552},{"_id":"themes/next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1585668906000},{"_id":"themes/next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1585668906000},{"_id":"themes/next-7.8.0/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1585668906000},{"_id":"public/search.xml","hash":"ff5fccdda422006d7ca3110011a1172096be526b","modified":1626143966059},{"_id":"public/categories/index.html","hash":"32fe68cc5933bb925928bef7072e0d5f614694fa","modified":1626143966059},{"_id":"public/2021/07/13/next-bug/index.html","hash":"6202f6286d603104d768fe0db3f9d6437b93b14b","modified":1626143966059},{"_id":"public/2021/07/08/swagger-bug/index.html","hash":"9336628f6e8bfe1953502295188166f97a21279c","modified":1626143966059},{"_id":"public/2021/07/07/rbac/index.html","hash":"bb6e9c49e3f784c159b52102b50db952b14b9f6d","modified":1626143966059},{"_id":"public/2021/07/06/What-is-JWT/index.html","hash":"0906249417c3b5299531a017d08a7c75809fecc4","modified":1626143966059},{"_id":"public/2021/07/06/web-security/index.html","hash":"b6ab40177b2bc7409397b8c32723372dcd4ba11d","modified":1626143966059},{"_id":"public/2021/07/05/regex2/index.html","hash":"a91efc76bf2f2b7d20309fa4b0794ed4451df392","modified":1626143966059},{"_id":"public/2021/07/05/regex/index.html","hash":"12c49913c7c56f286c1e70e73c16fc8b788b8478","modified":1626143966059},{"_id":"public/2021/07/02/fix-bug/index.html","hash":"3baf946f49c7bbad0fba0cd220c3a447e8c9b7cc","modified":1626143966059},{"_id":"public/archives/index.html","hash":"d7b73d50c11b6d6fe3ca6d7f0ce3aa1a50e632e1","modified":1626143966059},{"_id":"public/archives/2021/index.html","hash":"95f129345a20ed6151a2efeb525402ddeffa33df","modified":1626143966059},{"_id":"public/archives/2021/07/index.html","hash":"d5933fee8d46ee494ad3432ad5ef24ff7f0d118b","modified":1626143966059},{"_id":"public/categories/Bug/index.html","hash":"56dc2783181eab969704deb1ca572a512460c883","modified":1626143966059},{"_id":"public/categories/计算机基础/index.html","hash":"4f7efb3ef9b100e4087f6992952ca03ef0fe82ab","modified":1626143966059},{"_id":"public/index.html","hash":"4b3dcebfac9447b2c0603de1371f659ee12bd0a0","modified":1626143966059},{"_id":"public/tags/计算机基础/index.html","hash":"17b3d888d2ed430d946d7558080c2e626e2e1b81","modified":1626143966059},{"_id":"public/tags/Bug/index.html","hash":"cd3770ed99194d240af0672877e4cb0694adc9e0","modified":1626143966059},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1626143966059},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1626143966059},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1626143966059},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1626143966059},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1626143966059},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1626143966059},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1626143966059},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1626143966059},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1626143966059},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1626143966059},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1626143966059},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1626143966059},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1626143966059},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1626143966059},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1626143966059},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1626143966059},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1626143966059},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1626143966059},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1626143966059},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1626143966059},{"_id":"public/css/main.css","hash":"85b5fc7e7d856c8ae7e2cbf558693e61123bb9af","modified":1626143966059},{"_id":"public/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1626143966059},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1626143966059},{"_id":"public/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1626143966059},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1626143966059},{"_id":"public/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1626143966059},{"_id":"public/js/utils.js","hash":"95c5d37aa06521675afcf8619cfc5dbba3d2e18a","modified":1626143966059},{"_id":"public/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1626143966059},{"_id":"public/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1626143966059},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1626143966059},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1626143966059},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1626143966059},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1626143966059},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1626143966059},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1626143966059},{"_id":"themes/next-7.8.0/source/404.html","hash":"9ce7edc47cd7f94f374ea3d93b31e1906e15d64f","modified":1627458457527},{"_id":"source/_posts/gitment.md","hash":"a1eb555608010a86a7eaf95f22ebc7000b9821b6","modified":1627458457158},{"_id":"source/_posts/attention-bug.md","hash":"ffdf6e990bb2610f8f9c5d2739f7a3a60d3a7640","modified":1627458457157},{"_id":"source/_posts/nosniff.md","hash":"4cb9ead5eff883b2fc8280ffc8c65fb4f9f63e9a","modified":1627458457160},{"_id":"source/_posts/spring-bean.md","hash":"a31ea07f4052eba5921bd76056f9cf9f89379955","modified":1627458457162},{"_id":"source/_posts/constructor.md","hash":"b38d27294428e9477b6aabd3f2df5c00b7d45d08","modified":1627461300067},{"_id":"source/imgs/idea错误输出 2021-07-28 151332.png","hash":"25b764ec1cc91b5acff827bb767e9781e93ce111","modified":1627456498693},{"_id":"source/imgs/实体类 2021-07-28 151529.png","hash":"668b4be8f2be4ce00ae667c222e6377acd065a3a","modified":1627456553940},{"_id":"source/imgs/数据 2021-07-28 160235.png","hash":"aa9a90002cfc223740a9531695414de9fba3785e","modified":1627459368346},{"_id":"source/imgs/正确实体类 2021-07-28 152603.png","hash":"75d4524362905535265a4db10ed140582b43cb09","modified":1627457171833},{"_id":"source/_posts/constructor/idea错误输出 2021-07-28 151332.png","hash":"25b764ec1cc91b5acff827bb767e9781e93ce111","modified":1627456498693},{"_id":"source/_posts/constructor/实体类 2021-07-28 151529.png","hash":"668b4be8f2be4ce00ae667c222e6377acd065a3a","modified":1627456553940},{"_id":"source/_posts/constructor/数据 2021-07-28 160235.png","hash":"aa9a90002cfc223740a9531695414de9fba3785e","modified":1627459368346},{"_id":"source/_posts/constructor/正确实体类 2021-07-28 152603.png","hash":"75d4524362905535265a4db10ed140582b43cb09","modified":1627457171833},{"_id":"source/_posts/constructor/idea错误输出.png","hash":"25b764ec1cc91b5acff827bb767e9781e93ce111","modified":1627456498693},{"_id":"source/_posts/constructor/数据.png","hash":"aa9a90002cfc223740a9531695414de9fba3785e","modified":1627459368346},{"_id":"source/_posts/constructor/正确实体类.png","hash":"75d4524362905535265a4db10ed140582b43cb09","modified":1627457171833},{"_id":"source/_posts/constructor/错误实体类.png","hash":"668b4be8f2be4ce00ae667c222e6377acd065a3a","modified":1627456553940}],"Category":[{"name":"Bug","_id":"ckr1g4qxm0005msx5bdrmb88r"},{"name":"计算机基础","_id":"ckr1g4qxq000bmsx51t3f4wij"}],"Data":[],"Page":[{"title":"文章分类","date":"2021-07-06T06:24:10.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2021-07-06 14:24:10\ntype: categories\n---\n","updated":"2021-07-28T07:47:37.165Z","path":"categories/index.html","_id":"ckr1g4qxb0000msx5e3chddk6","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"什么是JWT","date":"2021-07-06T08:28:51.000Z","_content":"# 什么是JWT\n>JWT(Json web token)，用为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准。特别适用于分布式站点的单点登录场景。\n> JWT的声明一般被用来在用户和服务器之间传递被认证的用户身份信息，也可以增加一些额外的其他业务逻辑所必的声明信息。\n> 该token也可直接被用于认证，也可被加密\n# 为什么要用JWT\n* 基于Session的认证难以扩展\n* 基于Session认证的记录被保存在服务器中，随着认证用户的增多，服务端的开销会明显增大\n* 基于Cookie的认证容易受到CSRF攻击\n# 如何使用JWT\n基于Token的鉴权机制类似于http协议，也是无状态的，它不需要在服务器去保留用户的认证信息或会话信息。\n>## 流程是这样的\n> * 用户使用用户名、密码来请求服务器\n> * 服务器验证用户信息\n> * 服务器通过验证发送给用户一个token\n> * 客户端存储token，每次请求时附带token\n> * 服务器验证token的值，并返回数据\n\n>Tips:token的加密方式使验证不需要像上篇介绍的防范web攻击而每次请求最好带上随机字符\n\n# JWT长什么样\n```html\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n```\nJWT是由三段信息构成的，用<font color=\"red\">.</font>连接。\n## header\n包含两部分信息：\n* 声明类型，这里是jwt\n* 声明加密的算法\n```html\n{\n  'typ': 'JWT',\n  'alg': 'HS256'\n}\n```\n然后将头部进行base64加密（该加密是可以对称解密的），构成了第一部分\n```html\neyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9\n```\n## payload\n载荷就是存放有效信息的地方，包含三个部分：\n* 标准中注册的声明\n* 公开的声明\n* 私有的声明\n\n标准中注册的声明（建议但不强制使用）\n* iss:jwt签发者\n* sub:jwt所面向的用户\n* aud:接收jwt的一方\n* exp:jwt的过期时间，这个过期时间必须大于签发时间\n* nbf:定义在什么时间之前，该jwt都是不可用的\n* iat:jwt的签发时间\n* jti:jwt的唯一身份标识，主要用来作为一次性的token，从而回避重放攻击\n\n公有的声明：\n可以添加任何信息一般添加用户的相关信息或其他业务需要的必要信息，但不建议添加敏感信息，因为该部分在客户端可解密\n\n私有的声明：\n是提供者和消费真所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归为类明文信息\n\n定义一个payload:\n```html\n{\n  \"sub\": \"1234567890\",\n  \"name\": \"John Doe\",\n  \"admin\": true\n}\n```\n然后将其进行base64加密，得到jwt的第二部分\n```html\neyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9\n```\n\n## signature\njwt的第三部分是一个签证信息，这个签证信息由三部分组成：\n* header(base64后的)\n* payload(base64后的)\n* secret\n这个部分需要base64加密后的header和base64加密后的payload，使用<font color=\"red\">.</font>连接组成字符串，然后通过header中声明的加密方式进行加盐secret组合加密，就构成了jwt的第三部分\n  \n```html\n// javascript\nvar encodedString = base64UrlEncode(header) + '.' + base64UrlEncode(payload);\n\nvar signature = HMACSHA256(encodedString, 'secret'); // TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n```\n最终可连接为最终的jwt\n```html\n  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n```\n>Tips:secret是在服务器端的，jwt的签发生成也是在服务器端，secret是服务器端的私钥，用于进行jwt的签发和验证，所以任何场景都不应该把secret泄露出去\n\n#应用\n一般在请求头里加入Authorization，并加上Bearer标注：\n```html\nfetch('api/user/1', {\n  headers: {\n    'Authorization': 'Bearer ' + token\n  }\n})\n\n```\n\n转载自：\n1.[什么是JWT](https://www.jianshu.com/p/576dbf44b2ae)","source":"_posts/What-is-JWT.md","raw":"---\ntitle: 什么是JWT\ndate: 2021-07-06 16:28:51\ntags: 计算机基础\n---\n# 什么是JWT\n>JWT(Json web token)，用为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准。特别适用于分布式站点的单点登录场景。\n> JWT的声明一般被用来在用户和服务器之间传递被认证的用户身份信息，也可以增加一些额外的其他业务逻辑所必的声明信息。\n> 该token也可直接被用于认证，也可被加密\n# 为什么要用JWT\n* 基于Session的认证难以扩展\n* 基于Session认证的记录被保存在服务器中，随着认证用户的增多，服务端的开销会明显增大\n* 基于Cookie的认证容易受到CSRF攻击\n# 如何使用JWT\n基于Token的鉴权机制类似于http协议，也是无状态的，它不需要在服务器去保留用户的认证信息或会话信息。\n>## 流程是这样的\n> * 用户使用用户名、密码来请求服务器\n> * 服务器验证用户信息\n> * 服务器通过验证发送给用户一个token\n> * 客户端存储token，每次请求时附带token\n> * 服务器验证token的值，并返回数据\n\n>Tips:token的加密方式使验证不需要像上篇介绍的防范web攻击而每次请求最好带上随机字符\n\n# JWT长什么样\n```html\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n```\nJWT是由三段信息构成的，用<font color=\"red\">.</font>连接。\n## header\n包含两部分信息：\n* 声明类型，这里是jwt\n* 声明加密的算法\n```html\n{\n  'typ': 'JWT',\n  'alg': 'HS256'\n}\n```\n然后将头部进行base64加密（该加密是可以对称解密的），构成了第一部分\n```html\neyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9\n```\n## payload\n载荷就是存放有效信息的地方，包含三个部分：\n* 标准中注册的声明\n* 公开的声明\n* 私有的声明\n\n标准中注册的声明（建议但不强制使用）\n* iss:jwt签发者\n* sub:jwt所面向的用户\n* aud:接收jwt的一方\n* exp:jwt的过期时间，这个过期时间必须大于签发时间\n* nbf:定义在什么时间之前，该jwt都是不可用的\n* iat:jwt的签发时间\n* jti:jwt的唯一身份标识，主要用来作为一次性的token，从而回避重放攻击\n\n公有的声明：\n可以添加任何信息一般添加用户的相关信息或其他业务需要的必要信息，但不建议添加敏感信息，因为该部分在客户端可解密\n\n私有的声明：\n是提供者和消费真所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归为类明文信息\n\n定义一个payload:\n```html\n{\n  \"sub\": \"1234567890\",\n  \"name\": \"John Doe\",\n  \"admin\": true\n}\n```\n然后将其进行base64加密，得到jwt的第二部分\n```html\neyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9\n```\n\n## signature\njwt的第三部分是一个签证信息，这个签证信息由三部分组成：\n* header(base64后的)\n* payload(base64后的)\n* secret\n这个部分需要base64加密后的header和base64加密后的payload，使用<font color=\"red\">.</font>连接组成字符串，然后通过header中声明的加密方式进行加盐secret组合加密，就构成了jwt的第三部分\n  \n```html\n// javascript\nvar encodedString = base64UrlEncode(header) + '.' + base64UrlEncode(payload);\n\nvar signature = HMACSHA256(encodedString, 'secret'); // TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n```\n最终可连接为最终的jwt\n```html\n  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n```\n>Tips:secret是在服务器端的，jwt的签发生成也是在服务器端，secret是服务器端的私钥，用于进行jwt的签发和验证，所以任何场景都不应该把secret泄露出去\n\n#应用\n一般在请求头里加入Authorization，并加上Bearer标注：\n```html\nfetch('api/user/1', {\n  headers: {\n    'Authorization': 'Bearer ' + token\n  }\n})\n\n```\n\n转载自：\n1.[什么是JWT](https://www.jianshu.com/p/576dbf44b2ae)","slug":"What-is-JWT","published":1,"updated":"2021-07-28T07:47:37.157Z","_id":"ckr1g4qxe0001msx5755386a8","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"什么是JWT\"><a href=\"#什么是JWT\" class=\"headerlink\" title=\"什么是JWT\"></a>什么是JWT</h1><blockquote>\n<p>JWT(Json web token)，用为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准。特别适用于分布式站点的单点登录场景。<br>JWT的声明一般被用来在用户和服务器之间传递被认证的用户身份信息，也可以增加一些额外的其他业务逻辑所必的声明信息。<br>该token也可直接被用于认证，也可被加密</p>\n</blockquote>\n<h1 id=\"为什么要用JWT\"><a href=\"#为什么要用JWT\" class=\"headerlink\" title=\"为什么要用JWT\"></a>为什么要用JWT</h1><ul>\n<li>基于Session的认证难以扩展</li>\n<li>基于Session认证的记录被保存在服务器中，随着认证用户的增多，服务端的开销会明显增大</li>\n<li>基于Cookie的认证容易受到CSRF攻击<h1 id=\"如何使用JWT\"><a href=\"#如何使用JWT\" class=\"headerlink\" title=\"如何使用JWT\"></a>如何使用JWT</h1>基于Token的鉴权机制类似于http协议，也是无状态的，它不需要在服务器去保留用户的认证信息或会话信息。<blockquote>\n<h2 id=\"流程是这样的\"><a href=\"#流程是这样的\" class=\"headerlink\" title=\"流程是这样的\"></a>流程是这样的</h2><ul>\n<li>用户使用用户名、密码来请求服务器</li>\n<li>服务器验证用户信息</li>\n<li>服务器通过验证发送给用户一个token</li>\n<li>客户端存储token，每次请求时附带token</li>\n<li>服务器验证token的值，并返回数据</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>Tips:token的加密方式使验证不需要像上篇介绍的防范web攻击而每次请求最好带上随机字符</p>\n</blockquote>\n<h1 id=\"JWT长什么样\"><a href=\"#JWT长什么样\" class=\"headerlink\" title=\"JWT长什么样\"></a>JWT长什么样</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span><br></pre></td></tr></table></figure>\n<p>JWT是由三段信息构成的，用<font color=\"red\">.</font>连接。</p>\n<h2 id=\"header\"><a href=\"#header\" class=\"headerlink\" title=\"header\"></a>header</h2><p>包含两部分信息：</p>\n<ul>\n<li>声明类型，这里是jwt</li>\n<li>声明加密的算法<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &#x27;typ&#x27;: &#x27;JWT&#x27;,</span><br><span class=\"line\">  &#x27;alg&#x27;: &#x27;HS256&#x27;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n然后将头部进行base64加密（该加密是可以对称解密的），构成了第一部分<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</span><br></pre></td></tr></table></figure>\n<h2 id=\"payload\"><a href=\"#payload\" class=\"headerlink\" title=\"payload\"></a>payload</h2>载荷就是存放有效信息的地方，包含三个部分：</li>\n<li>标准中注册的声明</li>\n<li>公开的声明</li>\n<li>私有的声明</li>\n</ul>\n<p>标准中注册的声明（建议但不强制使用）</p>\n<ul>\n<li>iss:jwt签发者</li>\n<li>sub:jwt所面向的用户</li>\n<li>aud:接收jwt的一方</li>\n<li>exp:jwt的过期时间，这个过期时间必须大于签发时间</li>\n<li>nbf:定义在什么时间之前，该jwt都是不可用的</li>\n<li>iat:jwt的签发时间</li>\n<li>jti:jwt的唯一身份标识，主要用来作为一次性的token，从而回避重放攻击</li>\n</ul>\n<p>公有的声明：<br>可以添加任何信息一般添加用户的相关信息或其他业务需要的必要信息，但不建议添加敏感信息，因为该部分在客户端可解密</p>\n<p>私有的声明：<br>是提供者和消费真所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归为类明文信息</p>\n<p>定义一个payload:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;sub&quot;: &quot;1234567890&quot;,</span><br><span class=\"line\">  &quot;name&quot;: &quot;John Doe&quot;,</span><br><span class=\"line\">  &quot;admin&quot;: true</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后将其进行base64加密，得到jwt的第二部分</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"signature\"><a href=\"#signature\" class=\"headerlink\" title=\"signature\"></a>signature</h2><p>jwt的第三部分是一个签证信息，这个签证信息由三部分组成：</p>\n<ul>\n<li>header(base64后的)</li>\n<li>payload(base64后的)</li>\n<li>secret<br>这个部分需要base64加密后的header和base64加密后的payload，使用<font color=\"red\">.</font>连接组成字符串，然后通过header中声明的加密方式进行加盐secret组合加密，就构成了jwt的第三部分</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// javascript</span><br><span class=\"line\">var encodedString = base64UrlEncode(header) + &#x27;.&#x27; + base64UrlEncode(payload);</span><br><span class=\"line\"></span><br><span class=\"line\">var signature = HMACSHA256(encodedString, &#x27;secret&#x27;); // TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span><br></pre></td></tr></table></figure>\n<p>最终可连接为最终的jwt</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Tips:secret是在服务器端的，jwt的签发生成也是在服务器端，secret是服务器端的私钥，用于进行jwt的签发和验证，所以任何场景都不应该把secret泄露出去</p>\n</blockquote>\n<p>#应用<br>一般在请求头里加入Authorization，并加上Bearer标注：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fetch(&#x27;api/user/1&#x27;, &#123;</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    &#x27;Authorization&#x27;: &#x27;Bearer &#x27; + token</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>转载自：<br>1.<a href=\"https://www.jianshu.com/p/576dbf44b2ae\">什么是JWT</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"什么是JWT\"><a href=\"#什么是JWT\" class=\"headerlink\" title=\"什么是JWT\"></a>什么是JWT</h1><blockquote>\n<p>JWT(Json web token)，用为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准。特别适用于分布式站点的单点登录场景。<br>JWT的声明一般被用来在用户和服务器之间传递被认证的用户身份信息，也可以增加一些额外的其他业务逻辑所必的声明信息。<br>该token也可直接被用于认证，也可被加密</p>\n</blockquote>\n<h1 id=\"为什么要用JWT\"><a href=\"#为什么要用JWT\" class=\"headerlink\" title=\"为什么要用JWT\"></a>为什么要用JWT</h1><ul>\n<li>基于Session的认证难以扩展</li>\n<li>基于Session认证的记录被保存在服务器中，随着认证用户的增多，服务端的开销会明显增大</li>\n<li>基于Cookie的认证容易受到CSRF攻击<h1 id=\"如何使用JWT\"><a href=\"#如何使用JWT\" class=\"headerlink\" title=\"如何使用JWT\"></a>如何使用JWT</h1>基于Token的鉴权机制类似于http协议，也是无状态的，它不需要在服务器去保留用户的认证信息或会话信息。<blockquote>\n<h2 id=\"流程是这样的\"><a href=\"#流程是这样的\" class=\"headerlink\" title=\"流程是这样的\"></a>流程是这样的</h2><ul>\n<li>用户使用用户名、密码来请求服务器</li>\n<li>服务器验证用户信息</li>\n<li>服务器通过验证发送给用户一个token</li>\n<li>客户端存储token，每次请求时附带token</li>\n<li>服务器验证token的值，并返回数据</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>Tips:token的加密方式使验证不需要像上篇介绍的防范web攻击而每次请求最好带上随机字符</p>\n</blockquote>\n<h1 id=\"JWT长什么样\"><a href=\"#JWT长什么样\" class=\"headerlink\" title=\"JWT长什么样\"></a>JWT长什么样</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span><br></pre></td></tr></table></figure>\n<p>JWT是由三段信息构成的，用<font color=\"red\">.</font>连接。</p>\n<h2 id=\"header\"><a href=\"#header\" class=\"headerlink\" title=\"header\"></a>header</h2><p>包含两部分信息：</p>\n<ul>\n<li>声明类型，这里是jwt</li>\n<li>声明加密的算法<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &#x27;typ&#x27;: &#x27;JWT&#x27;,</span><br><span class=\"line\">  &#x27;alg&#x27;: &#x27;HS256&#x27;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n然后将头部进行base64加密（该加密是可以对称解密的），构成了第一部分<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</span><br></pre></td></tr></table></figure>\n<h2 id=\"payload\"><a href=\"#payload\" class=\"headerlink\" title=\"payload\"></a>payload</h2>载荷就是存放有效信息的地方，包含三个部分：</li>\n<li>标准中注册的声明</li>\n<li>公开的声明</li>\n<li>私有的声明</li>\n</ul>\n<p>标准中注册的声明（建议但不强制使用）</p>\n<ul>\n<li>iss:jwt签发者</li>\n<li>sub:jwt所面向的用户</li>\n<li>aud:接收jwt的一方</li>\n<li>exp:jwt的过期时间，这个过期时间必须大于签发时间</li>\n<li>nbf:定义在什么时间之前，该jwt都是不可用的</li>\n<li>iat:jwt的签发时间</li>\n<li>jti:jwt的唯一身份标识，主要用来作为一次性的token，从而回避重放攻击</li>\n</ul>\n<p>公有的声明：<br>可以添加任何信息一般添加用户的相关信息或其他业务需要的必要信息，但不建议添加敏感信息，因为该部分在客户端可解密</p>\n<p>私有的声明：<br>是提供者和消费真所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归为类明文信息</p>\n<p>定义一个payload:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;sub&quot;: &quot;1234567890&quot;,</span><br><span class=\"line\">  &quot;name&quot;: &quot;John Doe&quot;,</span><br><span class=\"line\">  &quot;admin&quot;: true</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后将其进行base64加密，得到jwt的第二部分</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"signature\"><a href=\"#signature\" class=\"headerlink\" title=\"signature\"></a>signature</h2><p>jwt的第三部分是一个签证信息，这个签证信息由三部分组成：</p>\n<ul>\n<li>header(base64后的)</li>\n<li>payload(base64后的)</li>\n<li>secret<br>这个部分需要base64加密后的header和base64加密后的payload，使用<font color=\"red\">.</font>连接组成字符串，然后通过header中声明的加密方式进行加盐secret组合加密，就构成了jwt的第三部分</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// javascript</span><br><span class=\"line\">var encodedString = base64UrlEncode(header) + &#x27;.&#x27; + base64UrlEncode(payload);</span><br><span class=\"line\"></span><br><span class=\"line\">var signature = HMACSHA256(encodedString, &#x27;secret&#x27;); // TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span><br></pre></td></tr></table></figure>\n<p>最终可连接为最终的jwt</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Tips:secret是在服务器端的，jwt的签发生成也是在服务器端，secret是服务器端的私钥，用于进行jwt的签发和验证，所以任何场景都不应该把secret泄露出去</p>\n</blockquote>\n<p>#应用<br>一般在请求头里加入Authorization，并加上Bearer标注：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fetch(&#x27;api/user/1&#x27;, &#123;</span><br><span class=\"line\">  headers: &#123;</span><br><span class=\"line\">    &#x27;Authorization&#x27;: &#x27;Bearer &#x27; + token</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>转载自：<br>1.<a href=\"https://www.jianshu.com/p/576dbf44b2ae\">什么是JWT</a></p>\n"},{"title":"与Bug的233","date":"2021-07-02T08:57:18.000Z","_content":"今天发现一个特棒的hexo主题[百度EFE](http://efe.baidu.com/)，想着换一下主题，在Github的上下载了这个主题，把主题放到我的项目里，修改了图片，文字等，折腾了老半天，终于好了，可以在本地运行，就推送的服务器上，于是问题出现了。\n\n刷新页面后显示空白，也没有报任何错误，Travis CI也正常运行，不明所以。\n\n---\n\n# 解决方案\n\n1.因为没有报任何错误，所以只能先百度看看，结果如下：好像是`db.json`问题，需要先`hexo clean`;\n\n`hexo server`然后再提交，很遗憾没用。\n\n2.`index.html`文件0字节，所以网页空白\n\n3.结合以上信息，意外发现本地项目里的efe主题并没有全部上传到服务器上，只上传了我添加的头像图片。问题解决了，所以写项目一定不要忘了`git add`\n\n\n\n","source":"_posts/fix-bug.md","raw":"---\ntitle: 与Bug的233\ndate: 2021-07-02 16:57:18\ntags: Bug\ncategories: Bug\n---\n今天发现一个特棒的hexo主题[百度EFE](http://efe.baidu.com/)，想着换一下主题，在Github的上下载了这个主题，把主题放到我的项目里，修改了图片，文字等，折腾了老半天，终于好了，可以在本地运行，就推送的服务器上，于是问题出现了。\n\n刷新页面后显示空白，也没有报任何错误，Travis CI也正常运行，不明所以。\n\n---\n\n# 解决方案\n\n1.因为没有报任何错误，所以只能先百度看看，结果如下：好像是`db.json`问题，需要先`hexo clean`;\n\n`hexo server`然后再提交，很遗憾没用。\n\n2.`index.html`文件0字节，所以网页空白\n\n3.结合以上信息，意外发现本地项目里的efe主题并没有全部上传到服务器上，只上传了我添加的头像图片。问题解决了，所以写项目一定不要忘了`git add`\n\n\n\n","slug":"fix-bug","published":1,"updated":"2021-07-28T07:47:37.158Z","_id":"ckr1g4qxh0002msx506hz5fz2","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天发现一个特棒的hexo主题<a href=\"http://efe.baidu.com/\">百度EFE</a>，想着换一下主题，在Github的上下载了这个主题，把主题放到我的项目里，修改了图片，文字等，折腾了老半天，终于好了，可以在本地运行，就推送的服务器上，于是问题出现了。</p>\n<p>刷新页面后显示空白，也没有报任何错误，Travis CI也正常运行，不明所以。</p>\n<hr>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>1.因为没有报任何错误，所以只能先百度看看，结果如下：好像是<code>db.json</code>问题，需要先<code>hexo clean</code>;</p>\n<p><code>hexo server</code>然后再提交，很遗憾没用。</p>\n<p>2.<code>index.html</code>文件0字节，所以网页空白</p>\n<p>3.结合以上信息，意外发现本地项目里的efe主题并没有全部上传到服务器上，只上传了我添加的头像图片。问题解决了，所以写项目一定不要忘了<code>git add</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天发现一个特棒的hexo主题<a href=\"http://efe.baidu.com/\">百度EFE</a>，想着换一下主题，在Github的上下载了这个主题，把主题放到我的项目里，修改了图片，文字等，折腾了老半天，终于好了，可以在本地运行，就推送的服务器上，于是问题出现了。</p>\n<p>刷新页面后显示空白，也没有报任何错误，Travis CI也正常运行，不明所以。</p>\n<hr>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>1.因为没有报任何错误，所以只能先百度看看，结果如下：好像是<code>db.json</code>问题，需要先<code>hexo clean</code>;</p>\n<p><code>hexo server</code>然后再提交，很遗憾没用。</p>\n<p>2.<code>index.html</code>文件0字节，所以网页空白</p>\n<p>3.结合以上信息，意外发现本地项目里的efe主题并没有全部上传到服务器上，只上传了我添加的头像图片。问题解决了，所以写项目一定不要忘了<code>git add</code></p>\n"},{"title":"修改为next主题的bug","date":"2021-07-13T02:08:47.000Z","_content":"# 问题出现\n为了给网站添加搜索功能，网上教程只需要3步：\n> 1.安装插件\n```html\nnpm install hexo-generator-searchdb --save\n```\n> 2.修改站点配置文件\n```yaml\nsearch:\n    path: search.xml\n    field: post\n    format: html\n    limit: 10000\n```\n> 3.修改主题配置文件\n```yaml\nlocal_search:\n  enable: true\n```\n# 解决方案\n> 由于是需要支持搜索的主题才能启用搜索，所以原先的百度efe主题只能弃用，Clone`next`主题。\n> 配置好后，运行\n```html\nhexo clean & hexo g & s\n```\n点击搜索后一直在载入，网上说可能资源文件被浏览器插件拦截了或第一次加载比较慢，然而本地看了一下，都不是也不能解决问题。\n发现控制器里提示`search.html 404`，查看配置文件发现`path: search.xml`错写成了`path: search.html`，由此问题解决\n\n\n\n<div id=\"container\"></div>\n\n# 参考链接\n1.[hexo 搜索功能](https://blog.csdn.net/ganzhilin520/article/details/79047983)","source":"_posts/next-bug.md","raw":"---\ntitle: 修改为next主题的bug\ndate: 2021-07-13 10:08:47\ntags: Bug\n---\n# 问题出现\n为了给网站添加搜索功能，网上教程只需要3步：\n> 1.安装插件\n```html\nnpm install hexo-generator-searchdb --save\n```\n> 2.修改站点配置文件\n```yaml\nsearch:\n    path: search.xml\n    field: post\n    format: html\n    limit: 10000\n```\n> 3.修改主题配置文件\n```yaml\nlocal_search:\n  enable: true\n```\n# 解决方案\n> 由于是需要支持搜索的主题才能启用搜索，所以原先的百度efe主题只能弃用，Clone`next`主题。\n> 配置好后，运行\n```html\nhexo clean & hexo g & s\n```\n点击搜索后一直在载入，网上说可能资源文件被浏览器插件拦截了或第一次加载比较慢，然而本地看了一下，都不是也不能解决问题。\n发现控制器里提示`search.html 404`，查看配置文件发现`path: search.xml`错写成了`path: search.html`，由此问题解决\n\n\n\n<div id=\"container\"></div>\n\n# 参考链接\n1.[hexo 搜索功能](https://blog.csdn.net/ganzhilin520/article/details/79047983)","slug":"next-bug","published":1,"updated":"2021-07-28T07:47:37.160Z","_id":"ckr1g4qxl0004msx5eyg8fngs","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"问题出现\"><a href=\"#问题出现\" class=\"headerlink\" title=\"问题出现\"></a>问题出现</h1><p>为了给网站添加搜索功能，网上教程只需要3步：</p>\n<blockquote>\n<p>1.安装插件</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>2.修改站点配置文件</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">    <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">    <span class=\"attr\">format:</span> <span class=\"string\">html</span></span><br><span class=\"line\">    <span class=\"attr\">limit:</span> <span class=\"number\">10000</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>3.修改主题配置文件</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">local_search:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><blockquote>\n<p>由于是需要支持搜索的主题才能启用搜索，所以原先的百度efe主题只能弃用，Clone<code>next</code>主题。<br>配置好后，运行</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp; hexo g &amp; s</span><br></pre></td></tr></table></figure>\n<p>点击搜索后一直在载入，网上说可能资源文件被浏览器插件拦截了或第一次加载比较慢，然而本地看了一下，都不是也不能解决问题。<br>发现控制器里提示<code>search.html 404</code>，查看配置文件发现<code>path: search.xml</code>错写成了<code>path: search.html</code>，由此问题解决</p>\n<div id=\"container\"></div>\n\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://blog.csdn.net/ganzhilin520/article/details/79047983\">hexo 搜索功能</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"问题出现\"><a href=\"#问题出现\" class=\"headerlink\" title=\"问题出现\"></a>问题出现</h1><p>为了给网站添加搜索功能，网上教程只需要3步：</p>\n<blockquote>\n<p>1.安装插件</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>2.修改站点配置文件</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">search:</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">search.xml</span></span><br><span class=\"line\">    <span class=\"attr\">field:</span> <span class=\"string\">post</span></span><br><span class=\"line\">    <span class=\"attr\">format:</span> <span class=\"string\">html</span></span><br><span class=\"line\">    <span class=\"attr\">limit:</span> <span class=\"number\">10000</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>3.修改主题配置文件</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">local_search:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><blockquote>\n<p>由于是需要支持搜索的主题才能启用搜索，所以原先的百度efe主题只能弃用，Clone<code>next</code>主题。<br>配置好后，运行</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp; hexo g &amp; s</span><br></pre></td></tr></table></figure>\n<p>点击搜索后一直在载入，网上说可能资源文件被浏览器插件拦截了或第一次加载比较慢，然而本地看了一下，都不是也不能解决问题。<br>发现控制器里提示<code>search.html 404</code>，查看配置文件发现<code>path: search.xml</code>错写成了<code>path: search.html</code>，由此问题解决</p>\n<div id=\"container\"></div>\n\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://blog.csdn.net/ganzhilin520/article/details/79047983\">hexo 搜索功能</a></p>\n"},{"title":"RBAC权限介绍","date":"2021-07-07T00:37:52.000Z","_content":"# RBAC是什么\nRBAC模型（Role-Based Access Control:基于角色的访问控制）\n\n1.概述\n> RBAC认为授权实际上就是Who、What、How三元组之间的关系，也就是Who对What进行How的操作，即“主体”对“客体”的操作\n> * Who:是权限的拥有者或主体（如User,Role）\n> * What:是操作或对象（operation,object）\n> * How:具体的权限（Privilege,正向授权和负向授权）\n\n2.RBAC的组成\n> 在RBAC的模型里，有3个基础组成部分，分别是：用户、角色和权限。\n> RBAC通过定义角色的权限，并对用户授予某个角色从而控制用户的权限，实现用户和权限的逻辑分离（区别于[ACL模型](https://baike.baidu.com/item/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8/1844390?fromtitle=ACL&fromid=362453&fr=aladdin)）\n> 它们之间的关系如下图所示：\n> ![RBAC关系图](https://shuwoom.com/wp-content/uploads/2019/04/rbacrole-based-access-control-1.png \"RBAC关系图\")\n\n3.RBAC支持的安全原则\n> * 最小权限原则：RBAC可以将角色配置成其完成任务所需的最小的权限集合\n> * 责任分离原则：可以通过调用相互独立互斥的角色共同完成敏感的任务，例如要求一个记账员和财务管理员共同参与统一过账操作\n> * 数据抽象原则：可以通过权限的抽象来体现，例如财务操作用借款、存款等抽象权限，而不是使用典型的读、写等执行权限\n\n4.RBAC的优缺点\n> * 优点：\n>    * 简化用户和权限的关系\n>    * 易于扩展维护\n> * 缺点：\n>    * RBAC模型没有提供操作顺序的控制机制，这一缺陷使得RBAC模型很难适合那些对操作次序有严格要求的系统\n\n# RBAC分类\n分为4类：<font color=\"red\">RBAC0</font>、<font color=\"red\">RBAC1</font>、<font color=\"red\">RBAC2</font>、<font color=\"red\">RBAC3</font>\n\n* RBAC0\n> <font color=\"red\">RBAC0是最简单、最原始的事项方式，也是其他RBAC模型的基础</font>\n> ![RBAC0](https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac0. \"RBAC0\")\n> 在这个模型中，我们把权限赋予角色，再把角色赋予用户。用户和角色，角色和权限都是多对多的关系，用户拥有的权限等于他所有的角色持有权限之和。\n\n* RBAC1\n> <font color=\"red\">RBAC1是基于RBAC0的模型，引入了角色间的继承关系，即角色上有了上下级的区别</font>\n> ![RBAC1](https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac1.png \"RBAC1\")\n> 角色间的继承关系可分为一般继承关系和受限继承关系。一般继承关系仅要求角色继承关系是一个绝对偏序关系，允许角色间的多继承。\n> 而受限继承关系则进一步要求角色继承关系是一个树结构，实现角色间的单继承。\n> 这种模型适合于角色之间层次分明的业务，可以给角色分组分层。\n\n* RBAC2\n> <font color=\"red\">RBAC2是基于RBAC0模型的基础上，进行了角色的访问控制</font>\n> RBAC2的角色限制具体分为两类：静态职责分离SSD（Static Separation of Duty）,动态职责分离DSD(Dynamic Separation of Duty)\n> ![RBAC2](http://image.woshipm.com/wp-files/2016/11/0OHUFCNitWfqlnptsJ3b.png \"RBAC2\")\n> RBAC2中的一个基本限制是互斥角色的限制，互斥角色是指各自权限可以互相制约的两个角色。对于这类角色一个用户在某一次的活动中只能被分配其中的一个角色，不能同事获取两个角色的使用权\n> 该模型有以下几种约束：\n> * 互斥角色：同一用户只能分配到一组互斥角色集合中至多一个角色，支持责任分离的原则。互斥角色是指各自权限互相制约的两个角色。对于这类角色一个用户在某一次活动中只能被分配到其中的一个角色，不能同时获得两个角色的使用权。举个栗子：在审计活动中，一个角色不能同时被指派会计角色和审计员角色。\n> * 基数约束：一个角色被分配的用户数量受限；一个用户可拥有的角色数目受限；同样一个角色对应的访问权限数目也应受限，以控制高级权限在系统中的分配。例如公司的领导人是有限的。\n> * 先决条件角色：可以分配角色给用户仅当该用户已经是另一角色的成员；对应的可以分配访问权限给角色，仅当该角色已经拥有另一种访问权限。要想获得较高的权限，首先拥有低一级的权限。就像我们生活中，国家主席是从副主席中选举的一样。\n> * 运行时互斥：例如，允许一个用户具有两个角色的成员资格，但在运行中不可同时激活这两个角色。\n\n* RBAC3\n>RBAC3=RBAC1+RBAC2,所以RBAC3中既有角色分层，也包括可以增加各种限制\n\n# 如何设计RBAC\n1.RBAC的功能模块\n![RBAC的功能模块](https://shuwoom.oss-cn-beijing.aliyuncs.com/RBAC%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD.png \"RBAC的功能模块\")\n\n2.RBAC的执行流程\n![RBAC的执行流程](https://shuwoom.oss-cn-beijing.aliyuncs.com/RBAC%E6%B5%81%E7%A8%8B.png \"RBAC的执行流程\")\n\n3.RBAC的数据库设计\n![RBAC的数据库设计](https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.png \"RBAC的数据库设计\")\n\n# 参考链接\n1.[RBAC权限系统分析、设计与实现](https://shuwoom.com/?p=3041)\n2.[RBAC权限管理模型：基本模型及角色模型解析及举例](http://www.woshipm.com/pd/440765.html)\n3.[RBAC介绍（权限）](https://www.cnblogs.com/niuli1987/p/9871182.html)","source":"_posts/rbac.md","raw":"---\ntitle: RBAC权限介绍\ndate: 2021-07-07 08:37:52\ntags: 计算机基础\n---\n# RBAC是什么\nRBAC模型（Role-Based Access Control:基于角色的访问控制）\n\n1.概述\n> RBAC认为授权实际上就是Who、What、How三元组之间的关系，也就是Who对What进行How的操作，即“主体”对“客体”的操作\n> * Who:是权限的拥有者或主体（如User,Role）\n> * What:是操作或对象（operation,object）\n> * How:具体的权限（Privilege,正向授权和负向授权）\n\n2.RBAC的组成\n> 在RBAC的模型里，有3个基础组成部分，分别是：用户、角色和权限。\n> RBAC通过定义角色的权限，并对用户授予某个角色从而控制用户的权限，实现用户和权限的逻辑分离（区别于[ACL模型](https://baike.baidu.com/item/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8/1844390?fromtitle=ACL&fromid=362453&fr=aladdin)）\n> 它们之间的关系如下图所示：\n> ![RBAC关系图](https://shuwoom.com/wp-content/uploads/2019/04/rbacrole-based-access-control-1.png \"RBAC关系图\")\n\n3.RBAC支持的安全原则\n> * 最小权限原则：RBAC可以将角色配置成其完成任务所需的最小的权限集合\n> * 责任分离原则：可以通过调用相互独立互斥的角色共同完成敏感的任务，例如要求一个记账员和财务管理员共同参与统一过账操作\n> * 数据抽象原则：可以通过权限的抽象来体现，例如财务操作用借款、存款等抽象权限，而不是使用典型的读、写等执行权限\n\n4.RBAC的优缺点\n> * 优点：\n>    * 简化用户和权限的关系\n>    * 易于扩展维护\n> * 缺点：\n>    * RBAC模型没有提供操作顺序的控制机制，这一缺陷使得RBAC模型很难适合那些对操作次序有严格要求的系统\n\n# RBAC分类\n分为4类：<font color=\"red\">RBAC0</font>、<font color=\"red\">RBAC1</font>、<font color=\"red\">RBAC2</font>、<font color=\"red\">RBAC3</font>\n\n* RBAC0\n> <font color=\"red\">RBAC0是最简单、最原始的事项方式，也是其他RBAC模型的基础</font>\n> ![RBAC0](https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac0. \"RBAC0\")\n> 在这个模型中，我们把权限赋予角色，再把角色赋予用户。用户和角色，角色和权限都是多对多的关系，用户拥有的权限等于他所有的角色持有权限之和。\n\n* RBAC1\n> <font color=\"red\">RBAC1是基于RBAC0的模型，引入了角色间的继承关系，即角色上有了上下级的区别</font>\n> ![RBAC1](https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac1.png \"RBAC1\")\n> 角色间的继承关系可分为一般继承关系和受限继承关系。一般继承关系仅要求角色继承关系是一个绝对偏序关系，允许角色间的多继承。\n> 而受限继承关系则进一步要求角色继承关系是一个树结构，实现角色间的单继承。\n> 这种模型适合于角色之间层次分明的业务，可以给角色分组分层。\n\n* RBAC2\n> <font color=\"red\">RBAC2是基于RBAC0模型的基础上，进行了角色的访问控制</font>\n> RBAC2的角色限制具体分为两类：静态职责分离SSD（Static Separation of Duty）,动态职责分离DSD(Dynamic Separation of Duty)\n> ![RBAC2](http://image.woshipm.com/wp-files/2016/11/0OHUFCNitWfqlnptsJ3b.png \"RBAC2\")\n> RBAC2中的一个基本限制是互斥角色的限制，互斥角色是指各自权限可以互相制约的两个角色。对于这类角色一个用户在某一次的活动中只能被分配其中的一个角色，不能同事获取两个角色的使用权\n> 该模型有以下几种约束：\n> * 互斥角色：同一用户只能分配到一组互斥角色集合中至多一个角色，支持责任分离的原则。互斥角色是指各自权限互相制约的两个角色。对于这类角色一个用户在某一次活动中只能被分配到其中的一个角色，不能同时获得两个角色的使用权。举个栗子：在审计活动中，一个角色不能同时被指派会计角色和审计员角色。\n> * 基数约束：一个角色被分配的用户数量受限；一个用户可拥有的角色数目受限；同样一个角色对应的访问权限数目也应受限，以控制高级权限在系统中的分配。例如公司的领导人是有限的。\n> * 先决条件角色：可以分配角色给用户仅当该用户已经是另一角色的成员；对应的可以分配访问权限给角色，仅当该角色已经拥有另一种访问权限。要想获得较高的权限，首先拥有低一级的权限。就像我们生活中，国家主席是从副主席中选举的一样。\n> * 运行时互斥：例如，允许一个用户具有两个角色的成员资格，但在运行中不可同时激活这两个角色。\n\n* RBAC3\n>RBAC3=RBAC1+RBAC2,所以RBAC3中既有角色分层，也包括可以增加各种限制\n\n# 如何设计RBAC\n1.RBAC的功能模块\n![RBAC的功能模块](https://shuwoom.oss-cn-beijing.aliyuncs.com/RBAC%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD.png \"RBAC的功能模块\")\n\n2.RBAC的执行流程\n![RBAC的执行流程](https://shuwoom.oss-cn-beijing.aliyuncs.com/RBAC%E6%B5%81%E7%A8%8B.png \"RBAC的执行流程\")\n\n3.RBAC的数据库设计\n![RBAC的数据库设计](https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.png \"RBAC的数据库设计\")\n\n# 参考链接\n1.[RBAC权限系统分析、设计与实现](https://shuwoom.com/?p=3041)\n2.[RBAC权限管理模型：基本模型及角色模型解析及举例](http://www.woshipm.com/pd/440765.html)\n3.[RBAC介绍（权限）](https://www.cnblogs.com/niuli1987/p/9871182.html)","slug":"rbac","published":1,"updated":"2021-07-28T07:47:37.161Z","_id":"ckr1g4qxn0006msx5fiszd14j","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"RBAC是什么\"><a href=\"#RBAC是什么\" class=\"headerlink\" title=\"RBAC是什么\"></a>RBAC是什么</h1><p>RBAC模型（Role-Based Access Control:基于角色的访问控制）</p>\n<p>1.概述</p>\n<blockquote>\n<p>RBAC认为授权实际上就是Who、What、How三元组之间的关系，也就是Who对What进行How的操作，即“主体”对“客体”的操作</p>\n<ul>\n<li>Who:是权限的拥有者或主体（如User,Role）</li>\n<li>What:是操作或对象（operation,object）</li>\n<li>How:具体的权限（Privilege,正向授权和负向授权）</li>\n</ul>\n</blockquote>\n<p>2.RBAC的组成</p>\n<blockquote>\n<p>在RBAC的模型里，有3个基础组成部分，分别是：用户、角色和权限。<br>RBAC通过定义角色的权限，并对用户授予某个角色从而控制用户的权限，实现用户和权限的逻辑分离（区别于<a href=\"https://baike.baidu.com/item/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8/1844390?fromtitle=ACL&fromid=362453&fr=aladdin\">ACL模型</a>）<br>它们之间的关系如下图所示：<br><img src=\"https://shuwoom.com/wp-content/uploads/2019/04/rbacrole-based-access-control-1.png\" alt=\"RBAC关系图\" title=\"RBAC关系图\"></p>\n</blockquote>\n<p>3.RBAC支持的安全原则</p>\n<blockquote>\n<ul>\n<li>最小权限原则：RBAC可以将角色配置成其完成任务所需的最小的权限集合</li>\n<li>责任分离原则：可以通过调用相互独立互斥的角色共同完成敏感的任务，例如要求一个记账员和财务管理员共同参与统一过账操作</li>\n<li>数据抽象原则：可以通过权限的抽象来体现，例如财务操作用借款、存款等抽象权限，而不是使用典型的读、写等执行权限</li>\n</ul>\n</blockquote>\n<p>4.RBAC的优缺点</p>\n<blockquote>\n<ul>\n<li>优点：<ul>\n<li>简化用户和权限的关系</li>\n<li>易于扩展维护</li>\n</ul>\n</li>\n<li>缺点：<ul>\n<li>RBAC模型没有提供操作顺序的控制机制，这一缺陷使得RBAC模型很难适合那些对操作次序有严格要求的系统</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"RBAC分类\"><a href=\"#RBAC分类\" class=\"headerlink\" title=\"RBAC分类\"></a>RBAC分类</h1><p>分为4类：<font color=\"red\">RBAC0</font>、<font color=\"red\">RBAC1</font>、<font color=\"red\">RBAC2</font>、<font color=\"red\">RBAC3</font></p>\n<ul>\n<li><p>RBAC0</p>\n<blockquote>\n<p><font color=\"red\">RBAC0是最简单、最原始的事项方式，也是其他RBAC模型的基础</font><br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac0.\" alt=\"RBAC0\" title=\"RBAC0\"><br>在这个模型中，我们把权限赋予角色，再把角色赋予用户。用户和角色，角色和权限都是多对多的关系，用户拥有的权限等于他所有的角色持有权限之和。</p>\n</blockquote>\n</li>\n<li><p>RBAC1</p>\n<blockquote>\n<p><font color=\"red\">RBAC1是基于RBAC0的模型，引入了角色间的继承关系，即角色上有了上下级的区别</font><br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac1.png\" alt=\"RBAC1\" title=\"RBAC1\"><br>角色间的继承关系可分为一般继承关系和受限继承关系。一般继承关系仅要求角色继承关系是一个绝对偏序关系，允许角色间的多继承。<br>而受限继承关系则进一步要求角色继承关系是一个树结构，实现角色间的单继承。<br>这种模型适合于角色之间层次分明的业务，可以给角色分组分层。</p>\n</blockquote>\n</li>\n<li><p>RBAC2</p>\n<blockquote>\n<p><font color=\"red\">RBAC2是基于RBAC0模型的基础上，进行了角色的访问控制</font><br>RBAC2的角色限制具体分为两类：静态职责分离SSD（Static Separation of Duty）,动态职责分离DSD(Dynamic Separation of Duty)<br><img src=\"http://image.woshipm.com/wp-files/2016/11/0OHUFCNitWfqlnptsJ3b.png\" alt=\"RBAC2\" title=\"RBAC2\"><br>RBAC2中的一个基本限制是互斥角色的限制，互斥角色是指各自权限可以互相制约的两个角色。对于这类角色一个用户在某一次的活动中只能被分配其中的一个角色，不能同事获取两个角色的使用权<br>该模型有以下几种约束：</p>\n<ul>\n<li>互斥角色：同一用户只能分配到一组互斥角色集合中至多一个角色，支持责任分离的原则。互斥角色是指各自权限互相制约的两个角色。对于这类角色一个用户在某一次活动中只能被分配到其中的一个角色，不能同时获得两个角色的使用权。举个栗子：在审计活动中，一个角色不能同时被指派会计角色和审计员角色。</li>\n<li>基数约束：一个角色被分配的用户数量受限；一个用户可拥有的角色数目受限；同样一个角色对应的访问权限数目也应受限，以控制高级权限在系统中的分配。例如公司的领导人是有限的。</li>\n<li>先决条件角色：可以分配角色给用户仅当该用户已经是另一角色的成员；对应的可以分配访问权限给角色，仅当该角色已经拥有另一种访问权限。要想获得较高的权限，首先拥有低一级的权限。就像我们生活中，国家主席是从副主席中选举的一样。</li>\n<li>运行时互斥：例如，允许一个用户具有两个角色的成员资格，但在运行中不可同时激活这两个角色。</li>\n</ul>\n</blockquote>\n</li>\n<li><p>RBAC3</p>\n<blockquote>\n<p>RBAC3=RBAC1+RBAC2,所以RBAC3中既有角色分层，也包括可以增加各种限制</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"如何设计RBAC\"><a href=\"#如何设计RBAC\" class=\"headerlink\" title=\"如何设计RBAC\"></a>如何设计RBAC</h1><p>1.RBAC的功能模块<br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/RBAC%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD.png\" alt=\"RBAC的功能模块\" title=\"RBAC的功能模块\"></p>\n<p>2.RBAC的执行流程<br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/RBAC%E6%B5%81%E7%A8%8B.png\" alt=\"RBAC的执行流程\" title=\"RBAC的执行流程\"></p>\n<p>3.RBAC的数据库设计<br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.png\" alt=\"RBAC的数据库设计\" title=\"RBAC的数据库设计\"></p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://shuwoom.com/?p=3041\">RBAC权限系统分析、设计与实现</a><br>2.<a href=\"http://www.woshipm.com/pd/440765.html\">RBAC权限管理模型：基本模型及角色模型解析及举例</a><br>3.<a href=\"https://www.cnblogs.com/niuli1987/p/9871182.html\">RBAC介绍（权限）</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"RBAC是什么\"><a href=\"#RBAC是什么\" class=\"headerlink\" title=\"RBAC是什么\"></a>RBAC是什么</h1><p>RBAC模型（Role-Based Access Control:基于角色的访问控制）</p>\n<p>1.概述</p>\n<blockquote>\n<p>RBAC认为授权实际上就是Who、What、How三元组之间的关系，也就是Who对What进行How的操作，即“主体”对“客体”的操作</p>\n<ul>\n<li>Who:是权限的拥有者或主体（如User,Role）</li>\n<li>What:是操作或对象（operation,object）</li>\n<li>How:具体的权限（Privilege,正向授权和负向授权）</li>\n</ul>\n</blockquote>\n<p>2.RBAC的组成</p>\n<blockquote>\n<p>在RBAC的模型里，有3个基础组成部分，分别是：用户、角色和权限。<br>RBAC通过定义角色的权限，并对用户授予某个角色从而控制用户的权限，实现用户和权限的逻辑分离（区别于<a href=\"https://baike.baidu.com/item/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%97%E8%A1%A8/1844390?fromtitle=ACL&fromid=362453&fr=aladdin\">ACL模型</a>）<br>它们之间的关系如下图所示：<br><img src=\"https://shuwoom.com/wp-content/uploads/2019/04/rbacrole-based-access-control-1.png\" alt=\"RBAC关系图\" title=\"RBAC关系图\"></p>\n</blockquote>\n<p>3.RBAC支持的安全原则</p>\n<blockquote>\n<ul>\n<li>最小权限原则：RBAC可以将角色配置成其完成任务所需的最小的权限集合</li>\n<li>责任分离原则：可以通过调用相互独立互斥的角色共同完成敏感的任务，例如要求一个记账员和财务管理员共同参与统一过账操作</li>\n<li>数据抽象原则：可以通过权限的抽象来体现，例如财务操作用借款、存款等抽象权限，而不是使用典型的读、写等执行权限</li>\n</ul>\n</blockquote>\n<p>4.RBAC的优缺点</p>\n<blockquote>\n<ul>\n<li>优点：<ul>\n<li>简化用户和权限的关系</li>\n<li>易于扩展维护</li>\n</ul>\n</li>\n<li>缺点：<ul>\n<li>RBAC模型没有提供操作顺序的控制机制，这一缺陷使得RBAC模型很难适合那些对操作次序有严格要求的系统</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"RBAC分类\"><a href=\"#RBAC分类\" class=\"headerlink\" title=\"RBAC分类\"></a>RBAC分类</h1><p>分为4类：<font color=\"red\">RBAC0</font>、<font color=\"red\">RBAC1</font>、<font color=\"red\">RBAC2</font>、<font color=\"red\">RBAC3</font></p>\n<ul>\n<li><p>RBAC0</p>\n<blockquote>\n<p><font color=\"red\">RBAC0是最简单、最原始的事项方式，也是其他RBAC模型的基础</font><br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac0.\" alt=\"RBAC0\" title=\"RBAC0\"><br>在这个模型中，我们把权限赋予角色，再把角色赋予用户。用户和角色，角色和权限都是多对多的关系，用户拥有的权限等于他所有的角色持有权限之和。</p>\n</blockquote>\n</li>\n<li><p>RBAC1</p>\n<blockquote>\n<p><font color=\"red\">RBAC1是基于RBAC0的模型，引入了角色间的继承关系，即角色上有了上下级的区别</font><br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac1.png\" alt=\"RBAC1\" title=\"RBAC1\"><br>角色间的继承关系可分为一般继承关系和受限继承关系。一般继承关系仅要求角色继承关系是一个绝对偏序关系，允许角色间的多继承。<br>而受限继承关系则进一步要求角色继承关系是一个树结构，实现角色间的单继承。<br>这种模型适合于角色之间层次分明的业务，可以给角色分组分层。</p>\n</blockquote>\n</li>\n<li><p>RBAC2</p>\n<blockquote>\n<p><font color=\"red\">RBAC2是基于RBAC0模型的基础上，进行了角色的访问控制</font><br>RBAC2的角色限制具体分为两类：静态职责分离SSD（Static Separation of Duty）,动态职责分离DSD(Dynamic Separation of Duty)<br><img src=\"http://image.woshipm.com/wp-files/2016/11/0OHUFCNitWfqlnptsJ3b.png\" alt=\"RBAC2\" title=\"RBAC2\"><br>RBAC2中的一个基本限制是互斥角色的限制，互斥角色是指各自权限可以互相制约的两个角色。对于这类角色一个用户在某一次的活动中只能被分配其中的一个角色，不能同事获取两个角色的使用权<br>该模型有以下几种约束：</p>\n<ul>\n<li>互斥角色：同一用户只能分配到一组互斥角色集合中至多一个角色，支持责任分离的原则。互斥角色是指各自权限互相制约的两个角色。对于这类角色一个用户在某一次活动中只能被分配到其中的一个角色，不能同时获得两个角色的使用权。举个栗子：在审计活动中，一个角色不能同时被指派会计角色和审计员角色。</li>\n<li>基数约束：一个角色被分配的用户数量受限；一个用户可拥有的角色数目受限；同样一个角色对应的访问权限数目也应受限，以控制高级权限在系统中的分配。例如公司的领导人是有限的。</li>\n<li>先决条件角色：可以分配角色给用户仅当该用户已经是另一角色的成员；对应的可以分配访问权限给角色，仅当该角色已经拥有另一种访问权限。要想获得较高的权限，首先拥有低一级的权限。就像我们生活中，国家主席是从副主席中选举的一样。</li>\n<li>运行时互斥：例如，允许一个用户具有两个角色的成员资格，但在运行中不可同时激活这两个角色。</li>\n</ul>\n</blockquote>\n</li>\n<li><p>RBAC3</p>\n<blockquote>\n<p>RBAC3=RBAC1+RBAC2,所以RBAC3中既有角色分层，也包括可以增加各种限制</p>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"如何设计RBAC\"><a href=\"#如何设计RBAC\" class=\"headerlink\" title=\"如何设计RBAC\"></a>如何设计RBAC</h1><p>1.RBAC的功能模块<br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/RBAC%E6%A8%A1%E5%9D%97%E5%8A%9F%E8%83%BD.png\" alt=\"RBAC的功能模块\" title=\"RBAC的功能模块\"></p>\n<p>2.RBAC的执行流程<br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/RBAC%E6%B5%81%E7%A8%8B.png\" alt=\"RBAC的执行流程\" title=\"RBAC的执行流程\"></p>\n<p>3.RBAC的数据库设计<br><img src=\"https://shuwoom.oss-cn-beijing.aliyuncs.com/rbac%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.png\" alt=\"RBAC的数据库设计\" title=\"RBAC的数据库设计\"></p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://shuwoom.com/?p=3041\">RBAC权限系统分析、设计与实现</a><br>2.<a href=\"http://www.woshipm.com/pd/440765.html\">RBAC权限管理模型：基本模型及角色模型解析及举例</a><br>3.<a href=\"https://www.cnblogs.com/niuli1987/p/9871182.html\">RBAC介绍（权限）</a></p>\n"},{"title":"regex","date":"2021-07-05T05:04:05.000Z","_content":"# 什么是正则表达式？\n>正则表达式大概类似于输出语句中的占位符\n# 匹配规则\n> + 正则表达式的匹配规则是从左到右按规则匹配，如果表达式中有特殊字符，就用<font color=\"red\">\\\\</font>转义，例如，正则表达式<font color=\"red\">a\\\\&c</font>,其中<font color=\"red\">\\\\&</font>是用来匹配特殊字符<font color=\"red\">\\&</font>的\n> + 正则表达式在java代码中也是一个字符串，所以，对于正则表达式<font color=\"red\">a\\\\&c</font>来说，对应的java字符串是<font color=\"red\">a\\\\\\\\&c</font>，因为<font color=\"red\">\\\\</font>也是java字符串的转义字符，两个<font color=\"red\">\\\\</font>实际表示的是一个<font color=\"red\">\\\\</font>\n---\n> + 匹配任意字符，例如正则表达式<font color=\"red\">a.c</font>中间的<font color=\"red\">.</font>可以匹配一个任意字符\n> + 匹配数字，如果想匹配<font color=\"red\">0~9</font>这样的数字，可以用<font color=\"red\">\\d</font>匹配\n> + 匹配常用字符，用<font color=\"red\">\\w</font>可以匹配一个字母、数字或下划线，<font color=\"red\">w</font>的意思是<font color=\"red\">word</font>\n> + 匹配空格字符，用<font color=\"red\">\\s</font>可以匹配一个空格字符，注意空格字符不但包括空格` `，还包括<font color=\"red\">tab</font>字符（在java中用<font color=\"red\">\\t</font>表示）\n> + 匹配非数字，用<font color=\"red\">\\D</font>匹配非数字，于<font color=\"red\">\\d</font>刚好相反，类似的<font color=\"red\">\\W</font>可以匹配<font color=\"red\">\\w</font>不能匹配的字符，<font coloe=\"red\">\\S</font>匹配<font color=\"red\">\\s</font>不能匹配的字符\n> + 重复匹配，修饰符<font color=\"red\">*</font>可以匹配任意个字符，包括0个字符\n> + 修饰符<font color=\"red\">+</font> 可以匹配至少一个字符\n> + 修饰符<font color=\"red\">?</font>可以匹配0个或一个字符\n> + 匹配n个字符，用<font color=\"red'>{n}</font>就可以\n> + 如果匹配n~m个字符，可以使用<font color=\"red\">{n,m}</font>\n> + 修饰符<font color=\"red\">{n,}</font>表示至少匹配n个字符\n\n参考链接：[正则表达式](https://www.liaoxuefeng.com/wiki/1252599548343744/1304066080636961)","source":"_posts/regex.md","raw":"---\ntitle: regex\ndate: 2021-07-05 13:04:05\ntags: 计算机基础\ncategories: 计算机基础\n---\n# 什么是正则表达式？\n>正则表达式大概类似于输出语句中的占位符\n# 匹配规则\n> + 正则表达式的匹配规则是从左到右按规则匹配，如果表达式中有特殊字符，就用<font color=\"red\">\\\\</font>转义，例如，正则表达式<font color=\"red\">a\\\\&c</font>,其中<font color=\"red\">\\\\&</font>是用来匹配特殊字符<font color=\"red\">\\&</font>的\n> + 正则表达式在java代码中也是一个字符串，所以，对于正则表达式<font color=\"red\">a\\\\&c</font>来说，对应的java字符串是<font color=\"red\">a\\\\\\\\&c</font>，因为<font color=\"red\">\\\\</font>也是java字符串的转义字符，两个<font color=\"red\">\\\\</font>实际表示的是一个<font color=\"red\">\\\\</font>\n---\n> + 匹配任意字符，例如正则表达式<font color=\"red\">a.c</font>中间的<font color=\"red\">.</font>可以匹配一个任意字符\n> + 匹配数字，如果想匹配<font color=\"red\">0~9</font>这样的数字，可以用<font color=\"red\">\\d</font>匹配\n> + 匹配常用字符，用<font color=\"red\">\\w</font>可以匹配一个字母、数字或下划线，<font color=\"red\">w</font>的意思是<font color=\"red\">word</font>\n> + 匹配空格字符，用<font color=\"red\">\\s</font>可以匹配一个空格字符，注意空格字符不但包括空格` `，还包括<font color=\"red\">tab</font>字符（在java中用<font color=\"red\">\\t</font>表示）\n> + 匹配非数字，用<font color=\"red\">\\D</font>匹配非数字，于<font color=\"red\">\\d</font>刚好相反，类似的<font color=\"red\">\\W</font>可以匹配<font color=\"red\">\\w</font>不能匹配的字符，<font coloe=\"red\">\\S</font>匹配<font color=\"red\">\\s</font>不能匹配的字符\n> + 重复匹配，修饰符<font color=\"red\">*</font>可以匹配任意个字符，包括0个字符\n> + 修饰符<font color=\"red\">+</font> 可以匹配至少一个字符\n> + 修饰符<font color=\"red\">?</font>可以匹配0个或一个字符\n> + 匹配n个字符，用<font color=\"red'>{n}</font>就可以\n> + 如果匹配n~m个字符，可以使用<font color=\"red\">{n,m}</font>\n> + 修饰符<font color=\"red\">{n,}</font>表示至少匹配n个字符\n\n参考链接：[正则表达式](https://www.liaoxuefeng.com/wiki/1252599548343744/1304066080636961)","slug":"regex","published":1,"updated":"2021-07-28T07:47:37.161Z","_id":"ckr1g4qxo0007msx57o21b3kg","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"什么是正则表达式？\"><a href=\"#什么是正则表达式？\" class=\"headerlink\" title=\"什么是正则表达式？\"></a>什么是正则表达式？</h1><blockquote>\n<p>正则表达式大概类似于输出语句中的占位符</p>\n</blockquote>\n<h1 id=\"匹配规则\"><a href=\"#匹配规则\" class=\"headerlink\" title=\"匹配规则\"></a>匹配规则</h1><blockquote>\n<ul>\n<li>正则表达式的匹配规则是从左到右按规则匹配，如果表达式中有特殊字符，就用<font color=\"red\">\\</font>转义，例如，正则表达式<font color=\"red\">a\\&amp;c</font>,其中<font color=\"red\">\\&amp;</font>是用来匹配特殊字符<font color=\"red\">&amp;</font>的</li>\n<li>正则表达式在java代码中也是一个字符串，所以，对于正则表达式<font color=\"red\">a\\&amp;c</font>来说，对应的java字符串是<font color=\"red\">a\\\\&amp;c</font>，因为<font color=\"red\">\\</font>也是java字符串的转义字符，两个<font color=\"red\">\\</font>实际表示的是一个<font color=\"red\">\\</font></li>\n</ul>\n</blockquote>\n<hr>\n<blockquote>\n<ul>\n<li>匹配任意字符，例如正则表达式<font color=\"red\">a.c</font>中间的<font color=\"red\">.</font>可以匹配一个任意字符</li>\n<li>匹配数字，如果想匹配<font color=\"red\">0~9</font>这样的数字，可以用<font color=\"red\">\\d</font>匹配</li>\n<li>匹配常用字符，用<font color=\"red\">\\w</font>可以匹配一个字母、数字或下划线，<font color=\"red\">w</font>的意思是<font color=\"red\">word</font></li>\n<li>匹配空格字符，用<font color=\"red\">\\s</font>可以匹配一个空格字符，注意空格字符不但包括空格<code> </code>，还包括<font color=\"red\">tab</font>字符（在java中用<font color=\"red\">\\t</font>表示）</li>\n<li>匹配非数字，用<font color=\"red\">\\D</font>匹配非数字，于<font color=\"red\">\\d</font>刚好相反，类似的<font color=\"red\">\\W</font>可以匹配<font color=\"red\">\\w</font>不能匹配的字符，<font coloe=\"red\">\\S</font>匹配<font color=\"red\">\\s</font>不能匹配的字符</li>\n<li>重复匹配，修饰符<font color=\"red\">*</font>可以匹配任意个字符，包括0个字符</li>\n<li>修饰符<font color=\"red\">+</font> 可以匹配至少一个字符</li>\n<li>修饰符<font color=\"red\">?</font>可以匹配0个或一个字符</li>\n<li>匹配n个字符，用&lt;font color=”red’&gt;{n}</font>就可以</li>\n<li>如果匹配n~m个字符，可以使用<font color=\"red\">{n,m}</font></li>\n<li>修饰符<font color=\"red\">{n,}</font>表示至少匹配n个字符</li>\n</ul>\n</blockquote>\n<p>参考链接：<a href=\"https://www.liaoxuefeng.com/wiki/1252599548343744/1304066080636961\">正则表达式</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"什么是正则表达式？\"><a href=\"#什么是正则表达式？\" class=\"headerlink\" title=\"什么是正则表达式？\"></a>什么是正则表达式？</h1><blockquote>\n<p>正则表达式大概类似于输出语句中的占位符</p>\n</blockquote>\n<h1 id=\"匹配规则\"><a href=\"#匹配规则\" class=\"headerlink\" title=\"匹配规则\"></a>匹配规则</h1><blockquote>\n<ul>\n<li>正则表达式的匹配规则是从左到右按规则匹配，如果表达式中有特殊字符，就用<font color=\"red\">\\</font>转义，例如，正则表达式<font color=\"red\">a\\&amp;c</font>,其中<font color=\"red\">\\&amp;</font>是用来匹配特殊字符<font color=\"red\">&amp;</font>的</li>\n<li>正则表达式在java代码中也是一个字符串，所以，对于正则表达式<font color=\"red\">a\\&amp;c</font>来说，对应的java字符串是<font color=\"red\">a\\\\&amp;c</font>，因为<font color=\"red\">\\</font>也是java字符串的转义字符，两个<font color=\"red\">\\</font>实际表示的是一个<font color=\"red\">\\</font></li>\n</ul>\n</blockquote>\n<hr>\n<blockquote>\n<ul>\n<li>匹配任意字符，例如正则表达式<font color=\"red\">a.c</font>中间的<font color=\"red\">.</font>可以匹配一个任意字符</li>\n<li>匹配数字，如果想匹配<font color=\"red\">0~9</font>这样的数字，可以用<font color=\"red\">\\d</font>匹配</li>\n<li>匹配常用字符，用<font color=\"red\">\\w</font>可以匹配一个字母、数字或下划线，<font color=\"red\">w</font>的意思是<font color=\"red\">word</font></li>\n<li>匹配空格字符，用<font color=\"red\">\\s</font>可以匹配一个空格字符，注意空格字符不但包括空格<code> </code>，还包括<font color=\"red\">tab</font>字符（在java中用<font color=\"red\">\\t</font>表示）</li>\n<li>匹配非数字，用<font color=\"red\">\\D</font>匹配非数字，于<font color=\"red\">\\d</font>刚好相反，类似的<font color=\"red\">\\W</font>可以匹配<font color=\"red\">\\w</font>不能匹配的字符，<font coloe=\"red\">\\S</font>匹配<font color=\"red\">\\s</font>不能匹配的字符</li>\n<li>重复匹配，修饰符<font color=\"red\">*</font>可以匹配任意个字符，包括0个字符</li>\n<li>修饰符<font color=\"red\">+</font> 可以匹配至少一个字符</li>\n<li>修饰符<font color=\"red\">?</font>可以匹配0个或一个字符</li>\n<li>匹配n个字符，用&lt;font color=”red’&gt;{n}</font>就可以</li>\n<li>如果匹配n~m个字符，可以使用<font color=\"red\">{n,m}</font></li>\n<li>修饰符<font color=\"red\">{n,}</font>表示至少匹配n个字符</li>\n</ul>\n</blockquote>\n<p>参考链接：<a href=\"https://www.liaoxuefeng.com/wiki/1252599548343744/1304066080636961\">正则表达式</a></p>\n"},{"title":"swagger-bug","date":"2021-07-08T02:46:38.000Z","_content":"# Swagger出现404错误\n开始学习使用Swagger，然而发现按照教程的步骤写的实例项目有时候可以正常实现功能，有时候却不可以，问题到底出现在什么地方呢？\n# 解决方案\n>仔细比对了可以正常运行和不能正常运行的项目，发现唯一的区别就是`pom.xml`中的依赖版本不同，一个是`2.x`版本，一个是`3.0.0`，改成`2.x`后正常运行。\n> 网上搜索了以下swagger3与之前的swagger2使用的方法并不相同，连API的访问路径也不相同，而我看的教程是`2.x`版的，使用的是`3.x`，学习教程要注意版本号，新版本的使用要以官方介绍为准。\n\n# 参考链接\n1.[升级使用SpringFox的swagger-ui 3.0.0版本](https://blog.csdn.net/qq_15973399/article/details/107436089)\n2.[Spring Boot整合Swagger2构建RESTful API](https://mrbird.cc/Spring-Boot-Swagger2-RESTful-API.html)","source":"_posts/swagger-bug.md","raw":"---\ntitle: swagger-bug\ndate: 2021-07-08 10:46:38\ntags: Bug\n---\n# Swagger出现404错误\n开始学习使用Swagger，然而发现按照教程的步骤写的实例项目有时候可以正常实现功能，有时候却不可以，问题到底出现在什么地方呢？\n# 解决方案\n>仔细比对了可以正常运行和不能正常运行的项目，发现唯一的区别就是`pom.xml`中的依赖版本不同，一个是`2.x`版本，一个是`3.0.0`，改成`2.x`后正常运行。\n> 网上搜索了以下swagger3与之前的swagger2使用的方法并不相同，连API的访问路径也不相同，而我看的教程是`2.x`版的，使用的是`3.x`，学习教程要注意版本号，新版本的使用要以官方介绍为准。\n\n# 参考链接\n1.[升级使用SpringFox的swagger-ui 3.0.0版本](https://blog.csdn.net/qq_15973399/article/details/107436089)\n2.[Spring Boot整合Swagger2构建RESTful API](https://mrbird.cc/Spring-Boot-Swagger2-RESTful-API.html)","slug":"swagger-bug","published":1,"updated":"2021-07-28T07:47:37.163Z","_id":"ckr1g4qxp000amsx5gjt10tvf","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Swagger出现404错误\"><a href=\"#Swagger出现404错误\" class=\"headerlink\" title=\"Swagger出现404错误\"></a>Swagger出现404错误</h1><p>开始学习使用Swagger，然而发现按照教程的步骤写的实例项目有时候可以正常实现功能，有时候却不可以，问题到底出现在什么地方呢？</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><blockquote>\n<p>仔细比对了可以正常运行和不能正常运行的项目，发现唯一的区别就是<code>pom.xml</code>中的依赖版本不同，一个是<code>2.x</code>版本，一个是<code>3.0.0</code>，改成<code>2.x</code>后正常运行。<br>网上搜索了以下swagger3与之前的swagger2使用的方法并不相同，连API的访问路径也不相同，而我看的教程是<code>2.x</code>版的，使用的是<code>3.x</code>，学习教程要注意版本号，新版本的使用要以官方介绍为准。</p>\n</blockquote>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://blog.csdn.net/qq_15973399/article/details/107436089\">升级使用SpringFox的swagger-ui 3.0.0版本</a><br>2.<a href=\"https://mrbird.cc/Spring-Boot-Swagger2-RESTful-API.html\">Spring Boot整合Swagger2构建RESTful API</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Swagger出现404错误\"><a href=\"#Swagger出现404错误\" class=\"headerlink\" title=\"Swagger出现404错误\"></a>Swagger出现404错误</h1><p>开始学习使用Swagger，然而发现按照教程的步骤写的实例项目有时候可以正常实现功能，有时候却不可以，问题到底出现在什么地方呢？</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><blockquote>\n<p>仔细比对了可以正常运行和不能正常运行的项目，发现唯一的区别就是<code>pom.xml</code>中的依赖版本不同，一个是<code>2.x</code>版本，一个是<code>3.0.0</code>，改成<code>2.x</code>后正常运行。<br>网上搜索了以下swagger3与之前的swagger2使用的方法并不相同，连API的访问路径也不相同，而我看的教程是<code>2.x</code>版的，使用的是<code>3.x</code>，学习教程要注意版本号，新版本的使用要以官方介绍为准。</p>\n</blockquote>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://blog.csdn.net/qq_15973399/article/details/107436089\">升级使用SpringFox的swagger-ui 3.0.0版本</a><br>2.<a href=\"https://mrbird.cc/Spring-Boot-Swagger2-RESTful-API.html\">Spring Boot整合Swagger2构建RESTful API</a></p>\n"},{"title":"复杂匹配规则","date":"2021-07-05T05:57:30.000Z","_content":"匹配开头和结尾\n>用`^`表示开头，用`$`表示结尾\n\n匹配指定范围\n> * <font color=\"red\">[123456789]</font>可以匹配<font color=\"red\">[1~9]</font>，还有另外一种表示方法<font color=\"red\">[0-9a-fA-F]</font>，\n> 还有一种排除法，即不包含指定范围的字符。<font color=\"red\">[^1-9]</font>\n\n或规则匹配\n>* 用`|`连接的两个正则规则是或规则，例如<font color=\"red\">AB|CD</font>\n\n使用括号\n>* 如果匹配字符串<font color=\"red\">learn java</font>、<font color=\"red\">learn php</font>、<font color=\"red\">learn go</font>，可以这样写`learn\\\\s(java|php|go)`\n\n分组匹配\n>* 如何正则匹配<font color=\"red\">区号-电话号</font>这个规则，按照前边的介绍完全可以匹配到，但是匹配成功后，如何区分区号和电话号码，分别存入数据库。\n>也就是如何提取匹配的子串？\n> 正确的方法是用<font color=\"red\">(...)</font>先把要提取的规则分组，然后引入`java.until.regex`包，用`Pattern`对象匹配，匹配获得一个`Matcher`对象，如果匹配成功，可以直接从`Matcher.group(index)`返回子串\n\n非贪婪匹配\n>* 给定一个字符串表示的数字，判断该数字末尾`0`的个数，例如`123000`末尾3个`0`，`10010`末尾1个`0`。\n> 我们的思路是这样的：利用分组匹配把字符串分为末尾为`0`的部分和其余部分，正则表达式可以这样写：<font color=\"red\">(\\d+)(0*)</font>\n> 然而事情并不是我们想象的那样，为`0`的那部分始终为空，因为<font>(\\d+)</font>已经包含匹配后面的`0`，第二部分规则根本没机会\n> 所以我们要让<font color=\"red\">(\\d+)</font>少匹配，让<font color=\"red\">(0*)</font>尽量多匹配，就必须使用非贪婪规则。\n> 在规则<font color=\"red\">(\\d+)</font>后面加<font color=\"red\">?</font>即可表示非贪婪匹配\n\n反向引用\n>* 如果我们要把搜索到的指定字符串按规则替换，比如前后各加一个<font color=\"red\">xxxx</font>\n \n```java\npublic class Main{\n    public static void main(String[] args){\n        String s = \"the quick brown fox jumps over the lazy dog.\";\n        String r = s.replaceAll(\"\\\\s([a-z]{4})\\\\s\",\"<b>$1</b>\");\n        System.out.println(r);\n    }\n}\n```\n\n上述代码运行的结果就是:\n```html\nthe quick brown fox jumps <b>over</b> the <b>lazy</b> dog.\n```\n它实际上把任何4字符单词的前后用<font color=\"red\">xxxx</font>括起来\n\n模板引擎\n>* 模板引擎是指，定义一个字符串作为模板：\n\n ```html\nHello,${name}! You are learning ${lang}!\n```\n>其中<font color=\"red\">${key}</font>，也就是被替换的内容，当传入一个\n>`Map<String,String>`给模板后，将key替换为value的值\n>例如，传入<font color=\"red\">Map</font>为：\n```html\n{\n    \"name\":\"Bob\",\n    \"lang\":\"Java\"\n}\n```\n>最终输出结果为：\n```html\nHello,Bob!You are learning Java!\n```","source":"_posts/regex2.md","raw":"---\ntitle: 复杂匹配规则\ndate: 2021-07-05 13:57:30\ntags: 计算机基础\n---\n匹配开头和结尾\n>用`^`表示开头，用`$`表示结尾\n\n匹配指定范围\n> * <font color=\"red\">[123456789]</font>可以匹配<font color=\"red\">[1~9]</font>，还有另外一种表示方法<font color=\"red\">[0-9a-fA-F]</font>，\n> 还有一种排除法，即不包含指定范围的字符。<font color=\"red\">[^1-9]</font>\n\n或规则匹配\n>* 用`|`连接的两个正则规则是或规则，例如<font color=\"red\">AB|CD</font>\n\n使用括号\n>* 如果匹配字符串<font color=\"red\">learn java</font>、<font color=\"red\">learn php</font>、<font color=\"red\">learn go</font>，可以这样写`learn\\\\s(java|php|go)`\n\n分组匹配\n>* 如何正则匹配<font color=\"red\">区号-电话号</font>这个规则，按照前边的介绍完全可以匹配到，但是匹配成功后，如何区分区号和电话号码，分别存入数据库。\n>也就是如何提取匹配的子串？\n> 正确的方法是用<font color=\"red\">(...)</font>先把要提取的规则分组，然后引入`java.until.regex`包，用`Pattern`对象匹配，匹配获得一个`Matcher`对象，如果匹配成功，可以直接从`Matcher.group(index)`返回子串\n\n非贪婪匹配\n>* 给定一个字符串表示的数字，判断该数字末尾`0`的个数，例如`123000`末尾3个`0`，`10010`末尾1个`0`。\n> 我们的思路是这样的：利用分组匹配把字符串分为末尾为`0`的部分和其余部分，正则表达式可以这样写：<font color=\"red\">(\\d+)(0*)</font>\n> 然而事情并不是我们想象的那样，为`0`的那部分始终为空，因为<font>(\\d+)</font>已经包含匹配后面的`0`，第二部分规则根本没机会\n> 所以我们要让<font color=\"red\">(\\d+)</font>少匹配，让<font color=\"red\">(0*)</font>尽量多匹配，就必须使用非贪婪规则。\n> 在规则<font color=\"red\">(\\d+)</font>后面加<font color=\"red\">?</font>即可表示非贪婪匹配\n\n反向引用\n>* 如果我们要把搜索到的指定字符串按规则替换，比如前后各加一个<font color=\"red\">xxxx</font>\n \n```java\npublic class Main{\n    public static void main(String[] args){\n        String s = \"the quick brown fox jumps over the lazy dog.\";\n        String r = s.replaceAll(\"\\\\s([a-z]{4})\\\\s\",\"<b>$1</b>\");\n        System.out.println(r);\n    }\n}\n```\n\n上述代码运行的结果就是:\n```html\nthe quick brown fox jumps <b>over</b> the <b>lazy</b> dog.\n```\n它实际上把任何4字符单词的前后用<font color=\"red\">xxxx</font>括起来\n\n模板引擎\n>* 模板引擎是指，定义一个字符串作为模板：\n\n ```html\nHello,${name}! You are learning ${lang}!\n```\n>其中<font color=\"red\">${key}</font>，也就是被替换的内容，当传入一个\n>`Map<String,String>`给模板后，将key替换为value的值\n>例如，传入<font color=\"red\">Map</font>为：\n```html\n{\n    \"name\":\"Bob\",\n    \"lang\":\"Java\"\n}\n```\n>最终输出结果为：\n```html\nHello,Bob!You are learning Java!\n```","slug":"regex2","published":1,"updated":"2021-07-28T07:47:37.162Z","_id":"ckr1g4qxq000dmsx528o6bnao","comments":1,"layout":"post","photos":[],"link":"","content":"<p>匹配开头和结尾</p>\n<blockquote>\n<p>用<code>^</code>表示开头，用<code>$</code>表示结尾</p>\n</blockquote>\n<p>匹配指定范围</p>\n<blockquote>\n<ul>\n<li><font color=\"red\">[123456789]</font>可以匹配<font color=\"red\">[1~9]</font>，还有另外一种表示方法<font color=\"red\">[0-9a-fA-F]</font>，<br>还有一种排除法，即不包含指定范围的字符。<font color=\"red\">[^1-9]</font></li>\n</ul>\n</blockquote>\n<p>或规则匹配</p>\n<blockquote>\n<ul>\n<li>用<code>|</code>连接的两个正则规则是或规则，例如<font color=\"red\">AB|CD</font></li>\n</ul>\n</blockquote>\n<p>使用括号</p>\n<blockquote>\n<ul>\n<li>如果匹配字符串<font color=\"red\">learn java</font>、<font color=\"red\">learn php</font>、<font color=\"red\">learn go</font>，可以这样写<code>learn\\\\s(java|php|go)</code></li>\n</ul>\n</blockquote>\n<p>分组匹配</p>\n<blockquote>\n<ul>\n<li>如何正则匹配<font color=\"red\">区号-电话号</font>这个规则，按照前边的介绍完全可以匹配到，但是匹配成功后，如何区分区号和电话号码，分别存入数据库。<br>也就是如何提取匹配的子串？<br>正确的方法是用<font color=\"red\">(…)</font>先把要提取的规则分组，然后引入<code>java.until.regex</code>包，用<code>Pattern</code>对象匹配，匹配获得一个<code>Matcher</code>对象，如果匹配成功，可以直接从<code>Matcher.group(index)</code>返回子串</li>\n</ul>\n</blockquote>\n<p>非贪婪匹配</p>\n<blockquote>\n<ul>\n<li>给定一个字符串表示的数字，判断该数字末尾<code>0</code>的个数，例如<code>123000</code>末尾3个<code>0</code>，<code>10010</code>末尾1个<code>0</code>。<br>我们的思路是这样的：利用分组匹配把字符串分为末尾为<code>0</code>的部分和其余部分，正则表达式可以这样写：<font color=\"red\">(\\d+)(0*)</font><br>然而事情并不是我们想象的那样，为<code>0</code>的那部分始终为空，因为<font>(\\d+)</font>已经包含匹配后面的<code>0</code>，第二部分规则根本没机会<br>所以我们要让<font color=\"red\">(\\d+)</font>少匹配，让<font color=\"red\">(0*)</font>尽量多匹配，就必须使用非贪婪规则。<br>在规则<font color=\"red\">(\\d+)</font>后面加<font color=\"red\">?</font>即可表示非贪婪匹配</li>\n</ul>\n</blockquote>\n<p>反向引用</p>\n<blockquote>\n<ul>\n<li>如果我们要把搜索到的指定字符串按规则替换，比如前后各加一个<font color=\"red\">xxxx</font></li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        String s = <span class=\"string\">&quot;the quick brown fox jumps over the lazy dog.&quot;</span>;</span><br><span class=\"line\">        String r = s.replaceAll(<span class=\"string\">&quot;\\\\s([a-z]&#123;4&#125;)\\\\s&quot;</span>,<span class=\"string\">&quot;&lt;b&gt;$1&lt;/b&gt;&quot;</span>);</span><br><span class=\"line\">        System.out.println(r);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上述代码运行的结果就是:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">the quick brown fox jumps <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>over<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span> the <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>lazy<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span> dog.</span><br></pre></td></tr></table></figure>\n<p>它实际上把任何4字符单词的前后用<font color=\"red\">xxxx</font>括起来</p>\n<p>模板引擎</p>\n<blockquote>\n<ul>\n<li>模板引擎是指，定义一个字符串作为模板：</li>\n</ul>\n</blockquote>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello,$&#123;name&#125;! You are learning $&#123;lang&#125;!</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>其中<font color=\"red\">${key}</font>，也就是被替换的内容，当传入一个<br><code>Map&lt;String,String&gt;</code>给模板后，将key替换为value的值<br>例如，传入<font color=\"red\">Map</font>为：</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;name&quot;:&quot;Bob&quot;,</span><br><span class=\"line\">    &quot;lang&quot;:&quot;Java&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>最终输出结果为：</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello,Bob!You are learning Java!</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>匹配开头和结尾</p>\n<blockquote>\n<p>用<code>^</code>表示开头，用<code>$</code>表示结尾</p>\n</blockquote>\n<p>匹配指定范围</p>\n<blockquote>\n<ul>\n<li><font color=\"red\">[123456789]</font>可以匹配<font color=\"red\">[1~9]</font>，还有另外一种表示方法<font color=\"red\">[0-9a-fA-F]</font>，<br>还有一种排除法，即不包含指定范围的字符。<font color=\"red\">[^1-9]</font></li>\n</ul>\n</blockquote>\n<p>或规则匹配</p>\n<blockquote>\n<ul>\n<li>用<code>|</code>连接的两个正则规则是或规则，例如<font color=\"red\">AB|CD</font></li>\n</ul>\n</blockquote>\n<p>使用括号</p>\n<blockquote>\n<ul>\n<li>如果匹配字符串<font color=\"red\">learn java</font>、<font color=\"red\">learn php</font>、<font color=\"red\">learn go</font>，可以这样写<code>learn\\\\s(java|php|go)</code></li>\n</ul>\n</blockquote>\n<p>分组匹配</p>\n<blockquote>\n<ul>\n<li>如何正则匹配<font color=\"red\">区号-电话号</font>这个规则，按照前边的介绍完全可以匹配到，但是匹配成功后，如何区分区号和电话号码，分别存入数据库。<br>也就是如何提取匹配的子串？<br>正确的方法是用<font color=\"red\">(…)</font>先把要提取的规则分组，然后引入<code>java.until.regex</code>包，用<code>Pattern</code>对象匹配，匹配获得一个<code>Matcher</code>对象，如果匹配成功，可以直接从<code>Matcher.group(index)</code>返回子串</li>\n</ul>\n</blockquote>\n<p>非贪婪匹配</p>\n<blockquote>\n<ul>\n<li>给定一个字符串表示的数字，判断该数字末尾<code>0</code>的个数，例如<code>123000</code>末尾3个<code>0</code>，<code>10010</code>末尾1个<code>0</code>。<br>我们的思路是这样的：利用分组匹配把字符串分为末尾为<code>0</code>的部分和其余部分，正则表达式可以这样写：<font color=\"red\">(\\d+)(0*)</font><br>然而事情并不是我们想象的那样，为<code>0</code>的那部分始终为空，因为<font>(\\d+)</font>已经包含匹配后面的<code>0</code>，第二部分规则根本没机会<br>所以我们要让<font color=\"red\">(\\d+)</font>少匹配，让<font color=\"red\">(0*)</font>尽量多匹配，就必须使用非贪婪规则。<br>在规则<font color=\"red\">(\\d+)</font>后面加<font color=\"red\">?</font>即可表示非贪婪匹配</li>\n</ul>\n</blockquote>\n<p>反向引用</p>\n<blockquote>\n<ul>\n<li>如果我们要把搜索到的指定字符串按规则替换，比如前后各加一个<font color=\"red\">xxxx</font></li>\n</ul>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        String s = <span class=\"string\">&quot;the quick brown fox jumps over the lazy dog.&quot;</span>;</span><br><span class=\"line\">        String r = s.replaceAll(<span class=\"string\">&quot;\\\\s([a-z]&#123;4&#125;)\\\\s&quot;</span>,<span class=\"string\">&quot;&lt;b&gt;$1&lt;/b&gt;&quot;</span>);</span><br><span class=\"line\">        System.out.println(r);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上述代码运行的结果就是:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">the quick brown fox jumps <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>over<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span> the <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span>lazy<span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span> dog.</span><br></pre></td></tr></table></figure>\n<p>它实际上把任何4字符单词的前后用<font color=\"red\">xxxx</font>括起来</p>\n<p>模板引擎</p>\n<blockquote>\n<ul>\n<li>模板引擎是指，定义一个字符串作为模板：</li>\n</ul>\n</blockquote>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello,$&#123;name&#125;! You are learning $&#123;lang&#125;!</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>其中<font color=\"red\">${key}</font>，也就是被替换的内容，当传入一个<br><code>Map&lt;String,String&gt;</code>给模板后，将key替换为value的值<br>例如，传入<font color=\"red\">Map</font>为：</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;name&quot;:&quot;Bob&quot;,</span><br><span class=\"line\">    &quot;lang&quot;:&quot;Java&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>最终输出结果为：</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello,Bob!You are learning Java!</span><br></pre></td></tr></table></figure>"},{"title":"关于网站安全的若干事项","date":"2021-07-06T05:45:43.000Z","_content":"# 序言\n> 以下内容为个人学习总结，不保证完全信息严谨可靠\n\n# 背景\n>由于Http协议是无状态协议，也就是说当用户通过浏览器像服务器发送请求时，服务器无法判断用户身份，所以为了确定请求的合法性，浏览器请求时必须提交额外的数据，比如cookie等\n\n# 产生的问题\n>为了窃取用户数据就产生了各种各样的非法请求，总的来说分为两类：\n>  * 1.合法用户（受害者）提交非法请求（XSS跨站脚本攻击，点击劫持/UI覆盖攻击）\n>  * 2.非法用户提交合法请求（CSRF跨站请求伪造）\n>## XSS跨站脚本攻击\n>>### 名称\n>>跨站脚本攻击（Cross Site Scripting），为了不和层叠样式表（Cascading Style Sheets,CSS）的缩写混淆，故将跨站脚本攻击缩写为XSS。\n>>### 分类\n>> + ReflectedXSS（基于反射的XSS攻击）\n>> + StoredXSS（基于存储的XSS攻击）\n>> + DOM-bases or local XSS（基于DOM或本地的XSS攻击）\n>>### 概括\n>>XSS攻击的本质：利用一切手段在目标用户的浏览器中执行攻击脚本\n> \n> \n>## CSRF攻击\n>>### 名称\n>>CSRF(Cross-site request forgery)，跨站请求伪造，也被称为one cliclk attack/session riding，缩写为：CSRF/XSRF\n>>### 原理\n>>攻击者盗用用户身份，以合法名义发送请求。\n>>### 示意图\n>>![CSRF攻击思想](https://pic002.cnblogs.com/img/hyddd/200904/2009040916453171.jpg \"CSRF攻击思想\")\n>>从上图可以看出，完成一次CSRF攻击，受害者必须依次完成两个步骤：\n>>* 1.登录受信任的网站A，并在本地生成Cookie\n>>* 2.在不登出A的情况下，访问危险网站B\n\n>>Csrf攻击是源于WEB的隐式身份验证机制，WEB的身份验证机制虽然可以保证一个请求来自某个用户的浏览器，但却无法保证该请求是用户批准发送的。\n\n>>### CSRF的防御\n>>主要从服务端和客户端两方面着手，从防御效果来看，服务端防御比较好\n>>#### 服务端CSRF防御\n>>服务端的CSRF方式总的思想就是在客户端页面增加<font color=\"red\">伪随机数</font>\n>>+ Cookie Hashing（所有表单都包含同一个伪随机值）\n>>   - 在表单里增加Hash值，以认证是用户发送的请求\n>>   - 然后在服务器端进行Hash值验证\n>>+ 验证码\n>>   - 每次用户提交都需要在表单中填写一个图片上的随机字符串，这个完全可以解决CSRF\n>>+ One-Time Tokens（不同的表单包含不同的伪随机值）\n\n\n\n## 参考链接\n1.[关于web安全的三个攻防姿势](http://blog.nsfocus.net/offensive-defensive-stances-web-security/)\n\n2.[浅谈CSRF攻击方式](https://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html)","source":"_posts/web-security.md","raw":"---\ntitle: 关于网站安全的若干事项\ndate: 2021-07-06 13:45:43\ntags: 计算机基础\ncategories:\n- 计算机基础\n---\n# 序言\n> 以下内容为个人学习总结，不保证完全信息严谨可靠\n\n# 背景\n>由于Http协议是无状态协议，也就是说当用户通过浏览器像服务器发送请求时，服务器无法判断用户身份，所以为了确定请求的合法性，浏览器请求时必须提交额外的数据，比如cookie等\n\n# 产生的问题\n>为了窃取用户数据就产生了各种各样的非法请求，总的来说分为两类：\n>  * 1.合法用户（受害者）提交非法请求（XSS跨站脚本攻击，点击劫持/UI覆盖攻击）\n>  * 2.非法用户提交合法请求（CSRF跨站请求伪造）\n>## XSS跨站脚本攻击\n>>### 名称\n>>跨站脚本攻击（Cross Site Scripting），为了不和层叠样式表（Cascading Style Sheets,CSS）的缩写混淆，故将跨站脚本攻击缩写为XSS。\n>>### 分类\n>> + ReflectedXSS（基于反射的XSS攻击）\n>> + StoredXSS（基于存储的XSS攻击）\n>> + DOM-bases or local XSS（基于DOM或本地的XSS攻击）\n>>### 概括\n>>XSS攻击的本质：利用一切手段在目标用户的浏览器中执行攻击脚本\n> \n> \n>## CSRF攻击\n>>### 名称\n>>CSRF(Cross-site request forgery)，跨站请求伪造，也被称为one cliclk attack/session riding，缩写为：CSRF/XSRF\n>>### 原理\n>>攻击者盗用用户身份，以合法名义发送请求。\n>>### 示意图\n>>![CSRF攻击思想](https://pic002.cnblogs.com/img/hyddd/200904/2009040916453171.jpg \"CSRF攻击思想\")\n>>从上图可以看出，完成一次CSRF攻击，受害者必须依次完成两个步骤：\n>>* 1.登录受信任的网站A，并在本地生成Cookie\n>>* 2.在不登出A的情况下，访问危险网站B\n\n>>Csrf攻击是源于WEB的隐式身份验证机制，WEB的身份验证机制虽然可以保证一个请求来自某个用户的浏览器，但却无法保证该请求是用户批准发送的。\n\n>>### CSRF的防御\n>>主要从服务端和客户端两方面着手，从防御效果来看，服务端防御比较好\n>>#### 服务端CSRF防御\n>>服务端的CSRF方式总的思想就是在客户端页面增加<font color=\"red\">伪随机数</font>\n>>+ Cookie Hashing（所有表单都包含同一个伪随机值）\n>>   - 在表单里增加Hash值，以认证是用户发送的请求\n>>   - 然后在服务器端进行Hash值验证\n>>+ 验证码\n>>   - 每次用户提交都需要在表单中填写一个图片上的随机字符串，这个完全可以解决CSRF\n>>+ One-Time Tokens（不同的表单包含不同的伪随机值）\n\n\n\n## 参考链接\n1.[关于web安全的三个攻防姿势](http://blog.nsfocus.net/offensive-defensive-stances-web-security/)\n\n2.[浅谈CSRF攻击方式](https://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html)","slug":"web-security","published":1,"updated":"2021-07-28T07:47:37.164Z","_id":"ckr1g4qxs000gmsx588l4ghj8","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h1><blockquote>\n<p>以下内容为个人学习总结，不保证完全信息严谨可靠</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><blockquote>\n<p>由于Http协议是无状态协议，也就是说当用户通过浏览器像服务器发送请求时，服务器无法判断用户身份，所以为了确定请求的合法性，浏览器请求时必须提交额外的数据，比如cookie等</p>\n</blockquote>\n<h1 id=\"产生的问题\"><a href=\"#产生的问题\" class=\"headerlink\" title=\"产生的问题\"></a>产生的问题</h1><blockquote>\n<p>为了窃取用户数据就产生了各种各样的非法请求，总的来说分为两类：</p>\n<ul>\n<li>1.合法用户（受害者）提交非法请求（XSS跨站脚本攻击，点击劫持/UI覆盖攻击）</li>\n<li>2.非法用户提交合法请求（CSRF跨站请求伪造）<h2 id=\"XSS跨站脚本攻击\"><a href=\"#XSS跨站脚本攻击\" class=\"headerlink\" title=\"XSS跨站脚本攻击\"></a>XSS跨站脚本攻击</h2><blockquote>\n<h3 id=\"名称\"><a href=\"#名称\" class=\"headerlink\" title=\"名称\"></a>名称</h3><p>跨站脚本攻击（Cross Site Scripting），为了不和层叠样式表（Cascading Style Sheets,CSS）的缩写混淆，故将跨站脚本攻击缩写为XSS。</p>\n<h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><ul>\n<li>ReflectedXSS（基于反射的XSS攻击）</li>\n<li>StoredXSS（基于存储的XSS攻击）</li>\n<li>DOM-bases or local XSS（基于DOM或本地的XSS攻击）<h3 id=\"概括\"><a href=\"#概括\" class=\"headerlink\" title=\"概括\"></a>概括</h3>XSS攻击的本质：利用一切手段在目标用户的浏览器中执行攻击脚本</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"CSRF攻击\"><a href=\"#CSRF攻击\" class=\"headerlink\" title=\"CSRF攻击\"></a>CSRF攻击</h2><blockquote>\n<h3 id=\"名称-1\"><a href=\"#名称-1\" class=\"headerlink\" title=\"名称\"></a>名称</h3><p>CSRF(Cross-site request forgery)，跨站请求伪造，也被称为one cliclk attack/session riding，缩写为：CSRF/XSRF</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>攻击者盗用用户身份，以合法名义发送请求。</p>\n<h3 id=\"示意图\"><a href=\"#示意图\" class=\"headerlink\" title=\"示意图\"></a>示意图</h3><p><img src=\"https://pic002.cnblogs.com/img/hyddd/200904/2009040916453171.jpg\" alt=\"CSRF攻击思想\" title=\"CSRF攻击思想\"><br>从上图可以看出，完成一次CSRF攻击，受害者必须依次完成两个步骤：</p>\n<ul>\n<li>1.登录受信任的网站A，并在本地生成Cookie</li>\n<li>2.在不登出A的情况下，访问危险网站B</li>\n</ul>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Csrf攻击是源于WEB的隐式身份验证机制，WEB的身份验证机制虽然可以保证一个请求来自某个用户的浏览器，但却无法保证该请求是用户批准发送的。</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<h3 id=\"CSRF的防御\"><a href=\"#CSRF的防御\" class=\"headerlink\" title=\"CSRF的防御\"></a>CSRF的防御</h3><p>主要从服务端和客户端两方面着手，从防御效果来看，服务端防御比较好</p>\n<h4 id=\"服务端CSRF防御\"><a href=\"#服务端CSRF防御\" class=\"headerlink\" title=\"服务端CSRF防御\"></a>服务端CSRF防御</h4><p>服务端的CSRF方式总的思想就是在客户端页面增加<font color=\"red\">伪随机数</font></p>\n<ul>\n<li>Cookie Hashing（所有表单都包含同一个伪随机值）<ul>\n<li>在表单里增加Hash值，以认证是用户发送的请求</li>\n<li>然后在服务器端进行Hash值验证</li>\n</ul>\n</li>\n<li>验证码<ul>\n<li>每次用户提交都需要在表单中填写一个图片上的随机字符串，这个完全可以解决CSRF</li>\n</ul>\n</li>\n<li>One-Time Tokens（不同的表单包含不同的伪随机值）</li>\n</ul>\n</blockquote>\n</blockquote>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p>1.<a href=\"http://blog.nsfocus.net/offensive-defensive-stances-web-security/\">关于web安全的三个攻防姿势</a></p>\n<p>2.<a href=\"https://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html\">浅谈CSRF攻击方式</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"序言\"><a href=\"#序言\" class=\"headerlink\" title=\"序言\"></a>序言</h1><blockquote>\n<p>以下内容为个人学习总结，不保证完全信息严谨可靠</p>\n</blockquote>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><blockquote>\n<p>由于Http协议是无状态协议，也就是说当用户通过浏览器像服务器发送请求时，服务器无法判断用户身份，所以为了确定请求的合法性，浏览器请求时必须提交额外的数据，比如cookie等</p>\n</blockquote>\n<h1 id=\"产生的问题\"><a href=\"#产生的问题\" class=\"headerlink\" title=\"产生的问题\"></a>产生的问题</h1><blockquote>\n<p>为了窃取用户数据就产生了各种各样的非法请求，总的来说分为两类：</p>\n<ul>\n<li>1.合法用户（受害者）提交非法请求（XSS跨站脚本攻击，点击劫持/UI覆盖攻击）</li>\n<li>2.非法用户提交合法请求（CSRF跨站请求伪造）<h2 id=\"XSS跨站脚本攻击\"><a href=\"#XSS跨站脚本攻击\" class=\"headerlink\" title=\"XSS跨站脚本攻击\"></a>XSS跨站脚本攻击</h2><blockquote>\n<h3 id=\"名称\"><a href=\"#名称\" class=\"headerlink\" title=\"名称\"></a>名称</h3><p>跨站脚本攻击（Cross Site Scripting），为了不和层叠样式表（Cascading Style Sheets,CSS）的缩写混淆，故将跨站脚本攻击缩写为XSS。</p>\n<h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><ul>\n<li>ReflectedXSS（基于反射的XSS攻击）</li>\n<li>StoredXSS（基于存储的XSS攻击）</li>\n<li>DOM-bases or local XSS（基于DOM或本地的XSS攻击）<h3 id=\"概括\"><a href=\"#概括\" class=\"headerlink\" title=\"概括\"></a>概括</h3>XSS攻击的本质：利用一切手段在目标用户的浏览器中执行攻击脚本</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"CSRF攻击\"><a href=\"#CSRF攻击\" class=\"headerlink\" title=\"CSRF攻击\"></a>CSRF攻击</h2><blockquote>\n<h3 id=\"名称-1\"><a href=\"#名称-1\" class=\"headerlink\" title=\"名称\"></a>名称</h3><p>CSRF(Cross-site request forgery)，跨站请求伪造，也被称为one cliclk attack/session riding，缩写为：CSRF/XSRF</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><p>攻击者盗用用户身份，以合法名义发送请求。</p>\n<h3 id=\"示意图\"><a href=\"#示意图\" class=\"headerlink\" title=\"示意图\"></a>示意图</h3><p><img src=\"https://pic002.cnblogs.com/img/hyddd/200904/2009040916453171.jpg\" alt=\"CSRF攻击思想\" title=\"CSRF攻击思想\"><br>从上图可以看出，完成一次CSRF攻击，受害者必须依次完成两个步骤：</p>\n<ul>\n<li>1.登录受信任的网站A，并在本地生成Cookie</li>\n<li>2.在不登出A的情况下，访问危险网站B</li>\n</ul>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Csrf攻击是源于WEB的隐式身份验证机制，WEB的身份验证机制虽然可以保证一个请求来自某个用户的浏览器，但却无法保证该请求是用户批准发送的。</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<h3 id=\"CSRF的防御\"><a href=\"#CSRF的防御\" class=\"headerlink\" title=\"CSRF的防御\"></a>CSRF的防御</h3><p>主要从服务端和客户端两方面着手，从防御效果来看，服务端防御比较好</p>\n<h4 id=\"服务端CSRF防御\"><a href=\"#服务端CSRF防御\" class=\"headerlink\" title=\"服务端CSRF防御\"></a>服务端CSRF防御</h4><p>服务端的CSRF方式总的思想就是在客户端页面增加<font color=\"red\">伪随机数</font></p>\n<ul>\n<li>Cookie Hashing（所有表单都包含同一个伪随机值）<ul>\n<li>在表单里增加Hash值，以认证是用户发送的请求</li>\n<li>然后在服务器端进行Hash值验证</li>\n</ul>\n</li>\n<li>验证码<ul>\n<li>每次用户提交都需要在表单中填写一个图片上的随机字符串，这个完全可以解决CSRF</li>\n</ul>\n</li>\n<li>One-Time Tokens（不同的表单包含不同的伪随机值）</li>\n</ul>\n</blockquote>\n</blockquote>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p>1.<a href=\"http://blog.nsfocus.net/offensive-defensive-stances-web-security/\">关于web安全的三个攻防姿势</a></p>\n<p>2.<a href=\"https://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html\">浅谈CSRF攻击方式</a></p>\n"},{"title":"添加gitment","date":"2021-07-13T05:08:13.000Z","_content":"# 问题\n> Gitment不显示在界面上的问题，只要项目公开就一定有隐私泄露的风险\n# 解决方案\n> 在`xx.md`页面可直接嵌入`HTML`代码，好像答非所问233\n\n# 参考链接\n1.[Gitment：使用 GitHub Issues 搭建评论系统 ](https://imsun.net/posts/gitment-introduction/)\n\n<div id=\"container\"></div>\n<link rel=\"stylesheet\" href=\"https://imsun.github.io/gitment/style/default.css\">\n<script src=\"https://imsun.github.io/gitment/dist/gitment.browser.js\"></script>\n<script>\nvar gitment = new Gitment({\n  owner: 'firework',\n  repo: 'git_comment',\n  oauth: {\n    client_id: '8a085244b132bd131808',\n    client_secret: 'bd7d2304a4d0056f0fab6265176b50614343bdd8',\n  },\n});\ngitment.render('container')\n</script>","source":"_posts/gitment.md","raw":"---\ntitle: 添加gitment\ndate: 2021-07-13 13:08:13\ntags: Gitment\n---\n# 问题\n> Gitment不显示在界面上的问题，只要项目公开就一定有隐私泄露的风险\n# 解决方案\n> 在`xx.md`页面可直接嵌入`HTML`代码，好像答非所问233\n\n# 参考链接\n1.[Gitment：使用 GitHub Issues 搭建评论系统 ](https://imsun.net/posts/gitment-introduction/)\n\n<div id=\"container\"></div>\n<link rel=\"stylesheet\" href=\"https://imsun.github.io/gitment/style/default.css\">\n<script src=\"https://imsun.github.io/gitment/dist/gitment.browser.js\"></script>\n<script>\nvar gitment = new Gitment({\n  owner: 'firework',\n  repo: 'git_comment',\n  oauth: {\n    client_id: '8a085244b132bd131808',\n    client_secret: 'bd7d2304a4d0056f0fab6265176b50614343bdd8',\n  },\n});\ngitment.render('container')\n</script>","slug":"gitment","published":1,"updated":"2021-07-28T07:47:37.158Z","_id":"ckr1ll2y40000egx5g2652nq0","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><blockquote>\n<p>Gitment不显示在界面上的问题，只要项目公开就一定有隐私泄露的风险</p>\n</blockquote>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><blockquote>\n<p>在<code>xx.md</code>页面可直接嵌入<code>HTML</code>代码，好像答非所问233</p>\n</blockquote>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://imsun.net/posts/gitment-introduction/\">Gitment：使用 GitHub Issues 搭建评论系统 </a></p>\n<div id=\"container\"></div>\n<link rel=\"stylesheet\" href=\"https://imsun.github.io/gitment/style/default.css\">\n<script src=\"https://imsun.github.io/gitment/dist/gitment.browser.js\"></script>\n<script>\nvar gitment = new Gitment({\n  owner: 'firework',\n  repo: 'git_comment',\n  oauth: {\n    client_id: '8a085244b132bd131808',\n    client_secret: 'bd7d2304a4d0056f0fab6265176b50614343bdd8',\n  },\n});\ngitment.render('container')\n</script>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h1><blockquote>\n<p>Gitment不显示在界面上的问题，只要项目公开就一定有隐私泄露的风险</p>\n</blockquote>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><blockquote>\n<p>在<code>xx.md</code>页面可直接嵌入<code>HTML</code>代码，好像答非所问233</p>\n</blockquote>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://imsun.net/posts/gitment-introduction/\">Gitment：使用 GitHub Issues 搭建评论系统 </a></p>\n<div id=\"container\"></div>\n<link rel=\"stylesheet\" href=\"https://imsun.github.io/gitment/style/default.css\">\n<script src=\"https://imsun.github.io/gitment/dist/gitment.browser.js\"></script>\n<script>\nvar gitment = new Gitment({\n  owner: 'firework',\n  repo: 'git_comment',\n  oauth: {\n    client_id: '8a085244b132bd131808',\n    client_secret: 'bd7d2304a4d0056f0fab6265176b50614343bdd8',\n  },\n});\ngitment.render('container')\n</script>"},{"title":"jpa映射问题的思考","date":"2021-07-16T04:17:49.000Z","_content":"# 应该注意的语法问题\n\n问题1：\n\n> jpa映射错误\n\n解决方案：\n\n> 类中关联表属性写错\n\n\n\n问题2：\n\n> 程序获取到的值为空\n\n解决方案：\n\n> 获取不到相关属性时，首先考虑是否传值成功，然而这里的问题在于属性的载体类本身就有问题，就算参数正确，也获取不到值，需要考虑是不是类中属性名称写错，private、static等写错，或者类中的注解不正确。\n\n","source":"_posts/attention-bug.md","raw":"---\ntitle: jpa映射问题的思考\ndate: 2021-07-16 12:17:49\ntags: Bug\n---\n# 应该注意的语法问题\n\n问题1：\n\n> jpa映射错误\n\n解决方案：\n\n> 类中关联表属性写错\n\n\n\n问题2：\n\n> 程序获取到的值为空\n\n解决方案：\n\n> 获取不到相关属性时，首先考虑是否传值成功，然而这里的问题在于属性的载体类本身就有问题，就算参数正确，也获取不到值，需要考虑是不是类中属性名称写错，private、static等写错，或者类中的注解不正确。\n\n","slug":"attention-bug","published":1,"updated":"2021-07-28T07:47:37.157Z","_id":"ckra5u6yy0000kox50zyybz7z","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"应该注意的语法问题\"><a href=\"#应该注意的语法问题\" class=\"headerlink\" title=\"应该注意的语法问题\"></a>应该注意的语法问题</h1><p>问题1：</p>\n<blockquote>\n<p>jpa映射错误</p>\n</blockquote>\n<p>解决方案：</p>\n<blockquote>\n<p>类中关联表属性写错</p>\n</blockquote>\n<p>问题2：</p>\n<blockquote>\n<p>程序获取到的值为空</p>\n</blockquote>\n<p>解决方案：</p>\n<blockquote>\n<p>获取不到相关属性时，首先考虑是否传值成功，然而这里的问题在于属性的载体类本身就有问题，就算参数正确，也获取不到值，需要考虑是不是类中属性名称写错，private、static等写错，或者类中的注解不正确。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"应该注意的语法问题\"><a href=\"#应该注意的语法问题\" class=\"headerlink\" title=\"应该注意的语法问题\"></a>应该注意的语法问题</h1><p>问题1：</p>\n<blockquote>\n<p>jpa映射错误</p>\n</blockquote>\n<p>解决方案：</p>\n<blockquote>\n<p>类中关联表属性写错</p>\n</blockquote>\n<p>问题2：</p>\n<blockquote>\n<p>程序获取到的值为空</p>\n</blockquote>\n<p>解决方案：</p>\n<blockquote>\n<p>获取不到相关属性时，首先考虑是否传值成功，然而这里的问题在于属性的载体类本身就有问题，就算参数正确，也获取不到值，需要考虑是不是类中属性名称写错，private、static等写错，或者类中的注解不正确。</p>\n</blockquote>\n"},{"title":"nosniff","date":"2021-07-19T04:17:49.000Z","_content":"**问题**\n> 来自“http://localhost:8080/login.html”的资源已被阻止，因为 MIME 类型（“text/html”）不匹配（X-Content-Type-Options: nosniff）\n# 解决方案\n> 有网友是这样说的 ：\n>> 我想知道该文件是否根本不存在，而 Joomla 会返回默认的 404 响应？\n\n>然后在浏览器里查看网络资源，果然没有，应该是被Spring Security拦截掉了，然后Spring Security返回的不是网页期待的格式，所有报错。\n在Spring SecurityConfig中放开css权限就可以了。\n# 参考链接\n1. [X-Content-Type-Options ](https://developer.mozilla.org/docs/Web/HTTP/Headers/X-Content-Type-Options?utm_source=mozilla&utm_medium=firefox-console-errors&utm_campaign=default)\n2. [自定义文件的位置错误...](https://github.com/gantry/gantry5/issues/2600)","source":"_posts/nosniff.md","raw":"---\ntitle: nosniff\ndate: 2021-07-19 12:17:49\ntags: Bug\n---\n**问题**\n> 来自“http://localhost:8080/login.html”的资源已被阻止，因为 MIME 类型（“text/html”）不匹配（X-Content-Type-Options: nosniff）\n# 解决方案\n> 有网友是这样说的 ：\n>> 我想知道该文件是否根本不存在，而 Joomla 会返回默认的 404 响应？\n\n>然后在浏览器里查看网络资源，果然没有，应该是被Spring Security拦截掉了，然后Spring Security返回的不是网页期待的格式，所有报错。\n在Spring SecurityConfig中放开css权限就可以了。\n# 参考链接\n1. [X-Content-Type-Options ](https://developer.mozilla.org/docs/Web/HTTP/Headers/X-Content-Type-Options?utm_source=mozilla&utm_medium=firefox-console-errors&utm_campaign=default)\n2. [自定义文件的位置错误...](https://github.com/gantry/gantry5/issues/2600)","slug":"nosniff","published":1,"updated":"2021-07-28T07:47:37.160Z","_id":"ckra5u6z60001kox5dim74t1e","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>问题</strong></p>\n<blockquote>\n<p>来自“<a href=\"http://localhost:8080/login.html%E2%80%9D%E7%9A%84%E8%B5%84%E6%BA%90%E5%B7%B2%E8%A2%AB%E9%98%BB%E6%AD%A2%EF%BC%8C%E5%9B%A0%E4%B8%BA\">http://localhost:8080/login.html”的资源已被阻止，因为</a> MIME 类型（“text/html”）不匹配（X-Content-Type-Options: nosniff）</p>\n</blockquote>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><blockquote>\n<p>有网友是这样说的 ：</p>\n<blockquote>\n<p>我想知道该文件是否根本不存在，而 Joomla 会返回默认的 404 响应？</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>然后在浏览器里查看网络资源，果然没有，应该是被Spring Security拦截掉了，然后Spring Security返回的不是网页期待的格式，所有报错。<br>在Spring SecurityConfig中放开css权限就可以了。</p>\n</blockquote>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><ol>\n<li><a href=\"https://developer.mozilla.org/docs/Web/HTTP/Headers/X-Content-Type-Options?utm_source=mozilla&utm_medium=firefox-console-errors&utm_campaign=default\">X-Content-Type-Options </a></li>\n<li><a href=\"https://github.com/gantry/gantry5/issues/2600\">自定义文件的位置错误…</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>问题</strong></p>\n<blockquote>\n<p>来自“<a href=\"http://localhost:8080/login.html%E2%80%9D%E7%9A%84%E8%B5%84%E6%BA%90%E5%B7%B2%E8%A2%AB%E9%98%BB%E6%AD%A2%EF%BC%8C%E5%9B%A0%E4%B8%BA\">http://localhost:8080/login.html”的资源已被阻止，因为</a> MIME 类型（“text/html”）不匹配（X-Content-Type-Options: nosniff）</p>\n</blockquote>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><blockquote>\n<p>有网友是这样说的 ：</p>\n<blockquote>\n<p>我想知道该文件是否根本不存在，而 Joomla 会返回默认的 404 响应？</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>然后在浏览器里查看网络资源，果然没有，应该是被Spring Security拦截掉了，然后Spring Security返回的不是网页期待的格式，所有报错。<br>在Spring SecurityConfig中放开css权限就可以了。</p>\n</blockquote>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><ol>\n<li><a href=\"https://developer.mozilla.org/docs/Web/HTTP/Headers/X-Content-Type-Options?utm_source=mozilla&utm_medium=firefox-console-errors&utm_campaign=default\">X-Content-Type-Options </a></li>\n<li><a href=\"https://github.com/gantry/gantry5/issues/2600\">自定义文件的位置错误…</a></li>\n</ol>\n"},{"title":"Spring Bean 的三种定义方式","date":"2021-07-14T09:27:57.000Z","_content":"# 基于XML的配置\n```xml\n<beans>\n    <import resource=\"resource.xml\"/>\n    <bean id=\"userService\" class=\"com.example.***.UserService\" init-method=\"init\" destory-method=\"destory\">\n    </bean>\n    <bean id=\"message\" class=\"java.lang.String\">\n        <constructctor-arg index=\"0\" value=\"test\"></constructctor-arg>\n    </bean>\n</beans>\n```\n\n# 基于注解的配置\n1.使用注解声明Bean\n> Spring提供了四个注解，这些注解与xml定义Bean的效果一致，将组件交给Spring容器管理。组件的名称默认是类名（首字母变小写），可自定义\n> * @Component\n> * @Controller\n> * @Service\n> * @Repository\n2.配置扫描包的路径\n```xml\n<context:component-scan bean-package=\"com.example.spring\">\n    <context:include-filter type=\"regex\" expression=\"com.example.spring.*\"></context:include-filter>\n    <context:exclude-filter type=\"aspectj\" expression=\"com.example.spring\"></context:exclude-filter>\n</context:component-scan>\n```\n# 基于JAVA类的配置\n1.使用@Configuration注解\n2.使用@Bean注解\n\n# 参考链接\n1.[Spring Bean定义的三种方式](https://www.cnblogs.com/wslook/p/9161560.html)\n","source":"_posts/spring-bean.md","raw":"---\ntitle: Spring Bean 的三种定义方式\ndate: 2021-07-14 17:27:57\ntags: 计算机基础\n---\n# 基于XML的配置\n```xml\n<beans>\n    <import resource=\"resource.xml\"/>\n    <bean id=\"userService\" class=\"com.example.***.UserService\" init-method=\"init\" destory-method=\"destory\">\n    </bean>\n    <bean id=\"message\" class=\"java.lang.String\">\n        <constructctor-arg index=\"0\" value=\"test\"></constructctor-arg>\n    </bean>\n</beans>\n```\n\n# 基于注解的配置\n1.使用注解声明Bean\n> Spring提供了四个注解，这些注解与xml定义Bean的效果一致，将组件交给Spring容器管理。组件的名称默认是类名（首字母变小写），可自定义\n> * @Component\n> * @Controller\n> * @Service\n> * @Repository\n2.配置扫描包的路径\n```xml\n<context:component-scan bean-package=\"com.example.spring\">\n    <context:include-filter type=\"regex\" expression=\"com.example.spring.*\"></context:include-filter>\n    <context:exclude-filter type=\"aspectj\" expression=\"com.example.spring\"></context:exclude-filter>\n</context:component-scan>\n```\n# 基于JAVA类的配置\n1.使用@Configuration注解\n2.使用@Bean注解\n\n# 参考链接\n1.[Spring Bean定义的三种方式](https://www.cnblogs.com/wslook/p/9161560.html)\n","slug":"spring-bean","published":1,"updated":"2021-07-28T07:47:37.162Z","_id":"ckra5u6z70002kox5eaeg82dx","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"基于XML的配置\"><a href=\"#基于XML的配置\" class=\"headerlink\" title=\"基于XML的配置\"></a>基于XML的配置</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;resource.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.example.***.UserService&quot;</span> <span class=\"attr\">init-method</span>=<span class=\"string\">&quot;init&quot;</span> <span class=\"attr\">destory-method</span>=<span class=\"string\">&quot;destory&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;message&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructctor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constructctor-arg</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"基于注解的配置\"><a href=\"#基于注解的配置\" class=\"headerlink\" title=\"基于注解的配置\"></a>基于注解的配置</h1><p>1.使用注解声明Bean</p>\n<blockquote>\n<p>Spring提供了四个注解，这些注解与xml定义Bean的效果一致，将组件交给Spring容器管理。组件的名称默认是类名（首字母变小写），可自定义</p>\n<ul>\n<li>@Component</li>\n<li>@Controller</li>\n<li>@Service</li>\n<li>@Repository</li>\n</ul>\n<p>2.配置扫描包的路径</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">bean-package</span>=<span class=\"string\">&quot;com.example.spring&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:include-filter</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;regex&quot;</span> <span class=\"attr\">expression</span>=<span class=\"string\">&quot;com.example.spring.*&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">context:include-filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:exclude-filter</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;aspectj&quot;</span> <span class=\"attr\">expression</span>=<span class=\"string\">&quot;com.example.spring&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">context:exclude-filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"基于JAVA类的配置\"><a href=\"#基于JAVA类的配置\" class=\"headerlink\" title=\"基于JAVA类的配置\"></a>基于JAVA类的配置</h1><p>1.使用@Configuration注解<br>2.使用@Bean注解</p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://www.cnblogs.com/wslook/p/9161560.html\">Spring Bean定义的三种方式</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"基于XML的配置\"><a href=\"#基于XML的配置\" class=\"headerlink\" title=\"基于XML的配置\"></a>基于XML的配置</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">import</span> <span class=\"attr\">resource</span>=<span class=\"string\">&quot;resource.xml&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userService&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;com.example.***.UserService&quot;</span> <span class=\"attr\">init-method</span>=<span class=\"string\">&quot;init&quot;</span> <span class=\"attr\">destory-method</span>=<span class=\"string\">&quot;destory&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;message&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructctor-arg</span> <span class=\"attr\">index</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;test&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">constructctor-arg</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"基于注解的配置\"><a href=\"#基于注解的配置\" class=\"headerlink\" title=\"基于注解的配置\"></a>基于注解的配置</h1><p>1.使用注解声明Bean</p>\n<blockquote>\n<p>Spring提供了四个注解，这些注解与xml定义Bean的效果一致，将组件交给Spring容器管理。组件的名称默认是类名（首字母变小写），可自定义</p>\n<ul>\n<li>@Component</li>\n<li>@Controller</li>\n<li>@Service</li>\n<li>@Repository</li>\n</ul>\n<p>2.配置扫描包的路径</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">bean-package</span>=<span class=\"string\">&quot;com.example.spring&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:include-filter</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;regex&quot;</span> <span class=\"attr\">expression</span>=<span class=\"string\">&quot;com.example.spring.*&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">context:include-filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:exclude-filter</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;aspectj&quot;</span> <span class=\"attr\">expression</span>=<span class=\"string\">&quot;com.example.spring&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">context:exclude-filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"基于JAVA类的配置\"><a href=\"#基于JAVA类的配置\" class=\"headerlink\" title=\"基于JAVA类的配置\"></a>基于JAVA类的配置</h1><p>1.使用@Configuration注解<br>2.使用@Bean注解</p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p>1.<a href=\"https://www.cnblogs.com/wslook/p/9161560.html\">Spring Bean定义的三种方式</a></p>\n"},{"title":"数据查询和构造函数","date":"2021-07-28T07:53:10.000Z","_content":"# 遇到的问题\n在用mybatis查询数据时，明明数据中没有数据却被同一行的其他属性赋值，具体情节如下所示：\n![idea错误输出](constructor/idea错误输出.png)\nidea错误输出\n![错误实体类](constructor/错误实体类.png)\n错误实体类\n# 解决方案\n如上图所示，经过debug调试发现,mybatis获取的数据就是错误数据，但用相同的sql语句在数据库中就正确获得。\n问题出在哪里呢？mybatis从数据库中获取到数据后，经过构造实体类产生想要的结果，问题就在 实体类中的构造函数和数据库中字段顺序的不一致上。\n数据表中的数据如下所示：\n![数据](constructor/数据.png)\n构造函数的正确写法：\n![正确实体类](constructor/正确实体类.png)\n# 总结\njava构造函数一定要注意各个参数是否与传入值预期一致","source":"_posts/constructor.md","raw":"---\ntitle: 数据查询和构造函数\ndate: 2021-07-28 15:53:10\ntags: Bug\n---\n# 遇到的问题\n在用mybatis查询数据时，明明数据中没有数据却被同一行的其他属性赋值，具体情节如下所示：\n![idea错误输出](constructor/idea错误输出.png)\nidea错误输出\n![错误实体类](constructor/错误实体类.png)\n错误实体类\n# 解决方案\n如上图所示，经过debug调试发现,mybatis获取的数据就是错误数据，但用相同的sql语句在数据库中就正确获得。\n问题出在哪里呢？mybatis从数据库中获取到数据后，经过构造实体类产生想要的结果，问题就在 实体类中的构造函数和数据库中字段顺序的不一致上。\n数据表中的数据如下所示：\n![数据](constructor/数据.png)\n构造函数的正确写法：\n![正确实体类](constructor/正确实体类.png)\n# 总结\njava构造函数一定要注意各个参数是否与传入值预期一致","slug":"constructor","published":1,"updated":"2021-07-28T08:35:00.067Z","_id":"ckrn718g600005ow62u9743fs","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h1><p>在用mybatis查询数据时，明明数据中没有数据却被同一行的其他属性赋值，具体情节如下所示：<br><img src=\"/2021/07/28/constructor/idea%E9%94%99%E8%AF%AF%E8%BE%93%E5%87%BA.png\" alt=\"idea错误输出\"><br>idea错误输出<br><img src=\"/2021/07/28/constructor/%E9%94%99%E8%AF%AF%E5%AE%9E%E4%BD%93%E7%B1%BB.png\" alt=\"错误实体类\"><br>错误实体类</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>如上图所示，经过debug调试发现,mybatis获取的数据就是错误数据，但用相同的sql语句在数据库中就正确获得。<br>问题出在哪里呢？mybatis从数据库中获取到数据后，经过构造实体类产生想要的结果，问题就在 实体类中的构造函数和数据库中字段顺序的不一致上。<br>数据表中的数据如下所示：<br><img src=\"/2021/07/28/constructor/%E6%95%B0%E6%8D%AE.png\" alt=\"数据\"><br>构造函数的正确写法：<br><img src=\"/2021/07/28/constructor/%E6%AD%A3%E7%A1%AE%E5%AE%9E%E4%BD%93%E7%B1%BB.png\" alt=\"正确实体类\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>java构造函数一定要注意各个参数是否与传入值预期一致</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h1><p>在用mybatis查询数据时，明明数据中没有数据却被同一行的其他属性赋值，具体情节如下所示：<br><img src=\"/2021/07/28/constructor/idea%E9%94%99%E8%AF%AF%E8%BE%93%E5%87%BA.png\" alt=\"idea错误输出\"><br>idea错误输出<br><img src=\"/2021/07/28/constructor/%E9%94%99%E8%AF%AF%E5%AE%9E%E4%BD%93%E7%B1%BB.png\" alt=\"错误实体类\"><br>错误实体类</p>\n<h1 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h1><p>如上图所示，经过debug调试发现,mybatis获取的数据就是错误数据，但用相同的sql语句在数据库中就正确获得。<br>问题出在哪里呢？mybatis从数据库中获取到数据后，经过构造实体类产生想要的结果，问题就在 实体类中的构造函数和数据库中字段顺序的不一致上。<br>数据表中的数据如下所示：<br><img src=\"/2021/07/28/constructor/%E6%95%B0%E6%8D%AE.png\" alt=\"数据\"><br>构造函数的正确写法：<br><img src=\"/2021/07/28/constructor/%E6%AD%A3%E7%A1%AE%E5%AE%9E%E4%BD%93%E7%B1%BB.png\" alt=\"正确实体类\"></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>java构造函数一定要注意各个参数是否与传入值预期一致</p>\n"}],"PostAsset":[{"_id":"source/_posts/constructor/idea错误输出.png","slug":"idea错误输出.png","post":"ckrn718g600005ow62u9743fs","modified":0,"renderable":0},{"_id":"source/_posts/constructor/数据.png","slug":"数据.png","post":"ckrn718g600005ow62u9743fs","modified":0,"renderable":0},{"_id":"source/_posts/constructor/正确实体类.png","slug":"正确实体类.png","post":"ckrn718g600005ow62u9743fs","modified":0,"renderable":0},{"_id":"source/_posts/constructor/错误实体类.png","slug":"错误实体类.png","post":"ckrn718g600005ow62u9743fs","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckr1g4qxh0002msx506hz5fz2","category_id":"ckr1g4qxm0005msx5bdrmb88r","_id":"ckr1g4qxu000hmsx51qtc56mp"},{"post_id":"ckr1g4qxs000gmsx588l4ghj8","category_id":"ckr1g4qxq000bmsx51t3f4wij","_id":"ckr1g4qxv000lmsx5cjg94o9c"},{"post_id":"ckr1g4qxo0007msx57o21b3kg","category_id":"ckr1g4qxq000bmsx51t3f4wij","_id":"ckr1g4qxv000nmsx5dc0k6b9y"}],"PostTag":[{"post_id":"ckr1g4qxn0006msx5fiszd14j","tag_id":"ckr1g4qxk0003msx5ffxr2xc0","_id":"ckr1g4qxp0009msx5fct8dezd"},{"post_id":"ckr1g4qxe0001msx5755386a8","tag_id":"ckr1g4qxk0003msx5ffxr2xc0","_id":"ckr1g4qxq000cmsx5b79zgokh"},{"post_id":"ckr1g4qxo0007msx57o21b3kg","tag_id":"ckr1g4qxk0003msx5ffxr2xc0","_id":"ckr1g4qxs000fmsx53udxfc6y"},{"post_id":"ckr1g4qxp000amsx5gjt10tvf","tag_id":"ckr1g4qxo0008msx5e47sgrmp","_id":"ckr1g4qxu000imsx5fnmhcen3"},{"post_id":"ckr1g4qxh0002msx506hz5fz2","tag_id":"ckr1g4qxo0008msx5e47sgrmp","_id":"ckr1g4qxv000jmsx57fgnb4cu"},{"post_id":"ckr1g4qxq000dmsx528o6bnao","tag_id":"ckr1g4qxk0003msx5ffxr2xc0","_id":"ckr1g4qxv000kmsx548gvejsf"},{"post_id":"ckr1g4qxs000gmsx588l4ghj8","tag_id":"ckr1g4qxk0003msx5ffxr2xc0","_id":"ckr1g4qxv000mmsx5adz57oeb"},{"post_id":"ckr1g4qxl0004msx5eyg8fngs","tag_id":"ckr1g4qxo0008msx5e47sgrmp","_id":"ckr1g4qxv000omsx5cac46h0s"},{"post_id":"ckr1ll2y40000egx5g2652nq0","tag_id":"ckr1ll2z50001egx55japfhhh","_id":"ckr1ll2z80002egx5b34u10ka"},{"post_id":"ckra5u6z60001kox5dim74t1e","tag_id":"ckr1g4qxo0008msx5e47sgrmp","_id":"ckra5u6z80003kox598va1m22"},{"post_id":"ckra5u6z70002kox5eaeg82dx","tag_id":"ckr1g4qxk0003msx5ffxr2xc0","_id":"ckra5u6z80004kox55ak8groj"},{"post_id":"ckra5u6yy0000kox50zyybz7z","tag_id":"ckr1g4qxo0008msx5e47sgrmp","_id":"ckrn6vn5r0000xow6eycsdj1p"},{"post_id":"ckrn718g600005ow62u9743fs","tag_id":"ckr1g4qxo0008msx5e47sgrmp","_id":"ckrn8fabl00002sw69afj65rb"}],"Tag":[{"name":"计算机基础","_id":"ckr1g4qxk0003msx5ffxr2xc0"},{"name":"Bug","_id":"ckr1g4qxo0008msx5e47sgrmp"},{"name":"Gitment","_id":"ckr1ll2z50001egx55japfhhh"},{"name":"-Bug -计算机基础","_id":"ckrn71seg0000lcw65m2r8cpi"},{"name":"-Bug","_id":"ckrn7djup000070w6d5yff8mc"}]}}